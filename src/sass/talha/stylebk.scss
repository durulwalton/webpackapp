@use "sass:math";
//
// Theme style
//
// Custom functions & mixins
//
// Get
//

@function get($map, $keys...) {
  @if length($keys) == 1 {
    $keys: nth($keys, 1);
  }

  @if type-of($map) != "map" or $map == null {
    //@return false;
  }

  $warn: "#{nth($keys, 1)}";
  $length: length($keys);
  $get: map-get($map, nth($keys, 1));

  @if $length > 1 {
    @for $i from 2 through $length {
      @if $get != null and type-of($get) == "map" {
        $warn: $warn + "->#{nth($keys, $i)}";
        $get: map-get($get, nth($keys, $i));

        @if $get == null {
          @return null;
        }
      } @else {
        @return get-warning($warn, $get, nth($keys, $i));
      }
    }
  }

  @return $get;
}

@function has($map, $keys...) {
  @if length($keys) == 1 {
    $keys: nth($keys, 1);
  }

  @if type-of($map) != "map" or $map == null {
    //@return false;
  }

  $warn: "#{nth($keys, 1)}";
  $length: length($keys);
  $get: map-get($map, nth($keys, 1));

  @if $length > 1 {
    @for $i from 2 through $length {
      @if $get != null and type-of($get) == "map" {
        $warn: $warn + "->#{nth($keys, $i)}";
        $get: map-get($get, nth($keys, $i));

        @if $get == null {
          @return false;
        }
      } @else {
        @return false;
      }
    }
  }

  @if $get != null {
    @return true;
  } @else {
    @return false;
  }
}

@function get-warning($warn, $get, $key) {
  @if $get == null {
    @warn "Map has no value for key search `#{$warn}`";
  } @else if type-of($get) != "map" {
    @warn "Non-map value found for key search `#{$warn}`, cannot search for key `#{$key}`";
  }
  @return null;
}

/// Deep set function to set a value in nested maps

@function set($map, $keys, $value) {
  $maps: ($map);
  $result: null;

  // If the last key is a map already
  // Warn the user we will be overriding it with $value
  @if type-of(nth($keys, -1)) == "map" {
    @warn "The last key you specified is a map; it will be overrided with `#{$value}`.";
  }

  // If $keys is a single key
  // Just merge and return
  @if length($keys) == 1 {
    @return map-merge(
      $map,
      (
        $keys: $value,
      )
    );
  }

  // Loop from the first to the second to last key from $keys
  // Store the associated map to this key in the $maps list
  // If the key doesn't exist, throw an error
  @for $i from 1 through length($keys) - 1 {
    $current-key: nth($keys, $i);
    $current-map: nth($maps, -1);
    $current-get: map-get($current-map, $current-key);
    @if $current-get == null {
      @error "Key `#{$key}` doesn't exist at current level in map.";
    }
    $maps: append($maps, $current-get);
  }

  // Loop from the last map to the first one
  // Merge it with the previous one
  @for $i from length($maps) through 1 {
    $current-map: nth($maps, $i);
    $current-key: nth($keys, $i);
    $current-val: if($i == length($maps), $value, $result);
    $result: map-merge(
      $current-map,
      (
        $current-key: $current-val,
      )
    );
  }

  // Return result
  @return $result;
}
//
// Math
//

@function sqrt($r) {
  $x0: 1;
  $x1: $x0;

  @for $i from 1 through 10 {
    $x1: $x0 - ($x0 * $x0 - abs($r)) / (2 * $x0);
    $x0: $x1;
  }

  @return $x1;
}
//
// valueif
//

@function valueif($check, $trueValue, $falseValue: null) {
  @if $check {
    @return $trueValue;
  } @else if $falseValue != null {
    @return $falseValue;
  } @else {
    @return null;
  }
}
//
// Bootstrap extended functions
//

@function theme-inverse-color($key: "primary") {
  @return get($theme-inverse-colors, $key);
}

@function theme-active-color($key: "primary") {
  @return get($theme-active-colors, $key);
}

@function theme-light-color($key: "primary") {
  @return get($theme-light-colors, $key);
}

//
// CSS Property
//

@mixin property($attr, $value, $important: "") {
  @if $value != null and $value != false {
    #{$attr}: #{$value} #{$important};
  }
}
//
// Browsers
//

@mixin for-edge {
  // Microsoft Edge
  @supports (-ms-ime-align: auto) {
    @content;
  }
}

@mixin for-safari {
  .safari {
    @content;
  }
}

@mixin for-firefox {
  // Firefox
  @-moz-document url-prefix() {
    @content;
  }
}

//
// Fixes
//

@mixin fix-fixed-position-lags() {
  // webkit hack for smooth font view on fixed positioned elements
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
}

@mixin fix-animation-lags() {
  transform: translateZ(0);
  -webkit-transform-style: preserve-3d;
}
//
// Reset
//

@mixin button-reset() {
  appearance: none;
  box-shadow: none;
  border-radius: 0;
  border: none;
  cursor: pointer;
  background-color: transparent;
  outline: none !important;
  margin: 0;
  padding: 0;
}

@mixin input-reset() {
  border: 0;
  background-color: transparent;
  outline: none !important;
  box-shadow: none;
  border-radius: 0;
}
//
// Input placeholder color
//

@mixin placeholder($color) {
  // Chrome, Firefox, Opera, Safari 10.1+
  &::placeholder {
    color: $color;
  }

  // Firefox
  &::-moz-placeholder {
    color: $color;
    opacity: 1;
  }
}
// Media of at most the maximum and minimum breakpoint widths. No query for the largest breakpoint.
// Makes the @content apply to the given breakpoint.

@mixin media-breakpoint-direction(
  $direction,
  $name,
  $breakpoints: $grid-breakpoints
) {
  @if $direction == up {
    $min: breakpoint-min($name, $breakpoints);

    @if $min {
      @media (min-width: $min) {
        @content;
      }
    } @else {
      @content;
    }
  } @else if $direction == down {
    $max: breakpoint-max($name, $breakpoints);

    @if $max {
      @media (max-width: $max) {
        @content;
      }
    }
  }
}
//
// Label
//

// Set arrow direction
@mixin menu-link-arrow-rotate($angle, $angleRtl) {
  /*rtl:ignore*/
  transform: rotateZ($angleRtl);
  /*rtl:remove*/
  transform: rotateZ($angle);
  transition: $menu-accordion-arrow-transition;
}

// Set menu link padding x
@mixin menu-link-padding-x($value) {
  // Menu item
  .menu-item {
    .menu-link,
    .menu-content {
      padding-left: $value;
      padding-right: $value;
    }
  }
}

// Set menu link padding y
@mixin menu-link-padding-y($value) {
  // Menu item
  .menu-item {
    .menu-link,
    .menu-content {
      padding-top: $value;
      padding-bottom: $value;
    }
  }
}

// Set link indention
@mixin menu-link-indention($value, $offset) {
  .menu-sub:not([data-popper-placement]) {
    > .menu-item,
    > .menu-inner > .menu-item {
      > .menu-content,
      > .menu-link {
        padding-left: calc(#{1 * $value} + #{$offset});
      }

      > .menu-sub:not([data-popper-placement]) {
        > .menu-item,
        > .menu-inner > .menu-item {
          > .menu-content,
          > .menu-link {
            padding-left: calc(#{2 * $value} + #{$offset});
          }

          > .menu-sub:not([data-popper-placement]) {
            > .menu-item,
            > .menu-inner > .menu-item {
              > .menu-content,
              > .menu-link {
                padding-left: calc(#{3 * $value} + #{$offset});
              }

              > .menu-sub:not([data-popper-placement]) {
                > .menu-item,
                > .menu-inner > .menu-item {
                  > .menu-content,
                  > .menu-link {
                    padding-left: calc(#{4 * $value} + #{$offset});
                  }
                }
              }
            }
          }
        }
      }
    }
  }

  &.menu-fit {
    .menu-sub:not([data-popper-placement]) {
      > .menu-item,
      > .menu-inner > .menu-item {
        > .menu-content,
        > .menu-link {
          padding-left: #{$value};
          padding-right: 0;
        }

        > .menu-sub:not([data-popper-placement]) {
          > .menu-item,
          > .menu-inner > .menu-item {
            > .menu-content,
            > .menu-link {
              padding-left: calc(#{2 * $value});
              padding-right: 0;
            }

            > .menu-sub:not([data-popper-placement]) {
              > .menu-item,
              > .menu-inner > .menu-item {
                > .menu-content,
                > .menu-link {
                  padding-left: calc(#{3 * $value});
                  padding-right: 0;
                }

                > .menu-sub:not([data-popper-placement]) {
                  > .menu-item,
                  > .menu-inner > .menu-item {
                    > .menu-content,
                    > .menu-link {
                      padding-left: calc(#{4 * $value});
                      padding-right: 0;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

// Set sub indention
@mixin menu-sub-indention($value) {
  .menu-sub:not([data-popper-placement]) {
    margin-left: $value;
  }
}

// Set menu link theme
@mixin menu-link-theme(
  $title-color,
  $icon-color,
  $bullet-color,
  $arrow-color,
  $bg-color: null
) {
  @if ($bg-color != null) {
    background-color: $bg-color;
  }

  @if ($title-color != null) {
    color: $title-color;

    .menu-title {
      color: $title-color;
    }
  }

  @if ($icon-color != null) {
    .menu-icon {
      &,
      .svg-icon,
      i {
        color: $icon-color;
      }
    }
  }

  @if ($bullet-color != null) {
    .menu-bullet {
      .bullet {
        background-color: $bullet-color;
      }
    }
  }

  @if ($arrow-color != null) {
    // Arrow
    .menu-arrow:after {
      @include svg-bg-icon(arrow-start, $arrow-color);
      /*rtl:begin:remove*/
      @include svg-bg-icon(arrow-end, $arrow-color);
      /*rtl:end:remove*/
    }
  }
}

// Set menu link default state
@mixin menu-link-default-state(
  $title-color,
  $icon-color,
  $bullet-color,
  $arrow-color,
  $bg-color: null,
  $all-links: true
) {
  $sel: "";

  @if ($all-links == false) {
    $sel: "& > ";
  }

  #{$sel}.menu-link {
    @include menu-link-theme(
      $title-color,
      $icon-color,
      $bullet-color,
      $arrow-color,
      $bg-color
    );
  }
}

// Set menu link hover state
@mixin menu-link-hover-state(
  $title-color,
  $icon-color,
  $bullet-color,
  $arrow-color,
  $bg-color: null,
  $all-links: true
) {
  $sel: "&:not(.here) ";

  @if ($all-links == false) {
    $sel: "&:not(.here) > ";
  }

  &.hover:not(.here) > .menu-link:not(.disabled):not(.active):not(.here),
  #{$sel}.menu-link:hover:not(.disabled):not(.active):not(.here) {
    transition: $transition-link;

    @include menu-link-theme(
      $title-color,
      $icon-color,
      $bullet-color,
      $arrow-color,
      $bg-color
    );
  }
}

// Set menu link active state
@mixin menu-link-active-state(
  $title-color,
  $icon-color,
  $bullet-color,
  $arrow-color,
  $bg-color: null,
  $all-links: true
) {
  $sel: "";

  @if ($all-links == false) {
    $sel: "& > ";
  }

  #{$sel}.menu-link.active {
    transition: $transition-link;

    @include menu-link-theme(
      $title-color,
      $icon-color,
      $bullet-color,
      $arrow-color,
      $bg-color
    );
  }
}

// Set menu link show state
@mixin menu-link-show-state(
  $title-color,
  $icon-color,
  $bullet-color,
  $arrow-color,
  $bg-color: null,
  $all-links: true
) {
  //&.here > .menu-link,
  &.show > .menu-link {
    transition: $transition-link;

    @include menu-link-theme(
      $title-color,
      $icon-color,
      $bullet-color,
      $arrow-color,
      $bg-color
    );
  }
}

// Set menu link here state
@mixin menu-link-here-state(
  $title-color,
  $icon-color,
  $bullet-color,
  $arrow-color,
  $bg-color: null,
  $all-links: true
) {
  &.here > .menu-link {
    transition: $transition-link;

    @include menu-link-theme(
      $title-color,
      $icon-color,
      $bullet-color,
      $arrow-color,
      $bg-color
    );
  }
}

// Set menu link default
@mixin menu-link-default($all-links: true) {
  $sel: "";

  @if ($all-links == false) {
    $sel: "& > ";
  }

  #{$sel}.menu-link {
    @content;
  }
}

// Set menu link hover
@mixin menu-link-hover($all-links: true) {
  $sel: "&:not(.here) ";

  @if ($all-links == false) {
    $sel: "&:not(.here) > ";
  }

  &.hover:not(.here) > .menu-link:not(.disabled):not(.active):not(.here),
  #{$sel}.menu-link:hover:not(.disabled):not(.active):not(.here) {
    transition: $transition-link;

    @content;
  }
}

// Set menu link active
@mixin menu-link-active($all-links: true) {
  $sel: "";

  @if ($all-links == false) {
    $sel: "& > ";
  }

  #{$sel}.menu-link.active {
    transition: $transition-link;

    @content;
  }
}

// Set menu link show
@mixin menu-link-show($all-links: true) {
  //&.here > .menu-link,
  &.show > .menu-link {
    transition: $transition-link;

    @content;
  }
}

// Set menu link here
@mixin menu-link-here($all-links: true) {
  &.here > .menu-link {
    transition: $transition-link;

    @content;
  }
}
//
// Button Mixins
//

// Custom variant
@mixin button-custom-variant(
  $color,
  $icon-color,
  $border-color,
  $bg-color,
  $color-active,
  $icon-color-active,
  $border-color-active,
  $bg-color-active
) {
  @if ($color != null) {
    color: $color;
  }

  @if ($icon-color != null) {
    i,
    .svg-icon {
      color: $icon-color;
    }

    &.dropdown-toggle:after {
      color: $icon-color;
    }
  }

  @if ($border-color != null) {
    border-color: $border-color;
  }

  @if ($bg-color != null) {
    background-color: $bg-color;
  }

  .btn-check:checked + &,
  .btn-check:active + &,
  &:focus:not(.btn-active),
  &:hover:not(.btn-active),
  &:active:not(.btn-active),
  &.active,
  &.show,
  .show > & {
    @if ($color-active != null) {
      color: $color-active;
    }

    @if ($icon-color-active != null) {
      i,
      .svg-icon {
        color: $icon-color-active;
      }

      &.dropdown-toggle:after {
        color: $icon-color-active;
      }
    }

    @if ($border-color-active != null) {
      border-color: $border-color-active;
    }

    @if ($bg-color-active != null) {
      background-color: $bg-color-active !important;
    }
  }
}

@mixin button-active-state() {
  .btn-check:checked + &,
  .btn-check:active + &,
  &:focus:not(.btn-active),
  &:hover:not(.btn-active),
  &:active:not(.btn-active),
  &.active,
  &.show,
  .show > & {
    @content;
  }
}

//
// Keenthemes Icons
//

@mixin ki($icon) {
  font-family: Ki;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  line-height: 1;
  text-decoration: inherit;
  text-rendering: optimizeLegibility;
  text-transform: none;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-smoothing: antialiased;
  content: "#{$icon}";
}
//
// Symbol
//

@mixin symbol-size($size) {
  > img {
    width: $size;
    height: $size;
  }

  .symbol-label {
    width: $size;
    height: $size;
  }

  &.symbol-fixed {
    .symbol-label {
      width: $size;
      height: $size;
    }

    > img {
      width: $size;
      height: $size;
      max-width: none;
    }
  }

  // Ratios
  &.symbol-2by3 {
    .symbol-label {
      height: $size;
      width: $size * divide(3, 2);
    }

    > img {
      height: $size;
      width: $size * divide(3, 2);
      max-width: none;
    }
  }
}
//
// SVG Icon
//

@mixin svg-icon-size($size, $important: false) {
  svg {
    height: $size valueif($important, !important, null);
    width: $size valueif($important, !important, null);
  }
}
//
// SVG Bg Icons
//

@mixin svg-bg-icon($type, $color: none, $update: false) {
  $bg-image: "";

  // Icon type;
  @if ($type == close) {
    $bg-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='#{$color}'><path d='M.293.293a1 1 0 011.414 0L8 6.586 14.293.293a1 1 0 111.414 1.414L9.414 8l6.293 6.293a1 1 0 01-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 01-1.414-1.414L6.586 8 .293 1.707a1 1 0 010-1.414z'/></svg>");
  }

  @if ($type == check) {
    $bg-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 14 11'><path fill='#{$color}' d='M4.89557 6.49823L2.79487 4.26513C2.26967 3.70683 1.38251 3.70683 0.857309 4.26513C0.375593 4.77721 0.375593 5.57574 0.857309 6.08781L4.74989 10.2257C5.14476 10.6455 5.81176 10.6455 6.20663 10.2257L13.1427 2.85252C13.6244 2.34044 13.6244 1.54191 13.1427 1.02984C12.6175 0.471537 11.7303 0.471536 11.2051 1.02984L6.06096 6.49823C5.74506 6.83403 5.21146 6.83403 4.89557 6.49823Z'/></svg>");
  }

  @if ($type == arrow-top) {
    $bg-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 6 6' fill='#{$color}'><path d='M3.23571 2.72011L4.97917 4.46358C5.15176 4.63618 5.43158 4.63617 5.60417 4.46358C5.77676 4.29099 5.77676 4.01118 5.60417 3.83861L3.29463 1.52904C3.13192 1.36629 2.86809 1.36629 2.70538 1.52904L0.395812 3.83861C0.22325 4.01117 0.22325 4.29099 0.395812 4.46358C0.568437 4.63617 0.84825 4.63617 1.02081 4.46358L2.76429 2.72011C2.89446 2.58994 3.10554 2.58994 3.23571 2.72011Z'/></svg>");
  }

  @if ($type == arrow-bottom) {
    $bg-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 6 6' fill='#{$color}'><path d='M2.76429 3.27989L1.02083 1.53642C0.848244 1.36382 0.568419 1.36383 0.395831 1.53642C0.223244 1.70901 0.223244 1.98882 0.395831 2.16139L2.70537 4.47096C2.86808 4.63371 3.13191 4.63371 3.29462 4.47096L5.60419 2.16139C5.77675 1.98883 5.77675 1.70901 5.60419 1.53642C5.43156 1.36383 5.15175 1.36383 4.97919 1.53642L3.23571 3.27989C3.10554 3.41006 2.89446 3.41006 2.76429 3.27989Z'/></svg>");
  }

  @if ($type == arrow-start) {
    $bg-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 6 6' fill='#{$color}'><path d='M2.72011 2.76429L4.46358 1.02083C4.63618 0.848244 4.63617 0.568419 4.46358 0.395831C4.29099 0.223244 4.01118 0.223244 3.83861 0.395831L1.52904 2.70537C1.36629 2.86808 1.36629 3.13191 1.52904 3.29462L3.83861 5.60419C4.01117 5.77675 4.29099 5.77675 4.46358 5.60419C4.63617 5.43156 4.63617 5.15175 4.46358 4.97919L2.72011 3.23571C2.58994 3.10554 2.58994 2.89446 2.72011 2.76429Z'/></svg>");
  }

  @if ($type == arrow-end) {
    $bg-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 6 6' fill='#{$color}'><path d='M3.27989 3.23571L1.53642 4.97917C1.36382 5.15176 1.36383 5.43158 1.53642 5.60417C1.70901 5.77676 1.98882 5.77676 2.16139 5.60417L4.47096 3.29463C4.63371 3.13192 4.63371 2.86809 4.47096 2.70538L2.16139 0.395812C1.98883 0.22325 1.70901 0.22325 1.53642 0.395812C1.36383 0.568437 1.36383 0.84825 1.53642 1.02081L3.27989 2.76429C3.41006 2.89446 3.41006 3.10554 3.27989 3.23571Z'/></svg>");
  }

  @if ($type == sort) {
    $bg-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 9' fill='#{$color}'><path fill-rule='evenodd' clip-rule='evenodd' d='M2.06463 4.42111C1.96161 4.22088 1.9809 3.9637 2.12863 3.78597L5.12847 0.177181C5.31402 -0.046034 5.63049 -0.060261 5.83532 0.145404C6.04015 0.351069 6.05578 0.698744 5.87023 0.921959L3.19406 4.14137L5.84414 7.06417C6.03896 7.27904 6.03835 7.62686 5.84278 7.84105C5.64721 8.05524 5.33073 8.05469 5.13591 7.83982L2.14806 4.54449C2.1141 4.50704 2.08629 4.46541 2.06463 4.42111Z'/></svg>");
  }

  @if ($type == sort-asc) {
    $bg-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 9' fill='#{$color}'><path fill-rule='evenodd' clip-rule='evenodd' d='M2.06463 4.42111C1.96161 4.22088 1.9809 3.9637 2.12863 3.78597L5.12847 0.177181C5.31402 -0.046034 5.63049 -0.060261 5.83532 0.145404C6.04015 0.351069 6.05578 0.698744 5.87023 0.921959L3.19406 4.14137L5.84414 7.06417C6.03896 7.27904 6.03835 7.62686 5.84278 7.84105C5.64721 8.05524 5.33073 8.05469 5.13591 7.83982L2.14806 4.54449C2.1141 4.50704 2.08629 4.46541 2.06463 4.42111Z'/></svg>");
  }

  @if ($type == sort-desc) {
    $bg-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 9' fill='#{$color}'><path fill-rule='evenodd' clip-rule='evenodd' d='M2.06463 4.42111C1.96161 4.22088 1.9809 3.9637 2.12863 3.78597L5.12847 0.177181C5.31402 -0.046034 5.63049 -0.060261 5.83532 0.145404C6.04015 0.351069 6.05578 0.698744 5.87023 0.921959L3.19406 4.14137L5.84414 7.06417C6.03896 7.27904 6.03835 7.62686 5.84278 7.84105C5.64721 8.05524 5.33073 8.05469 5.13591 7.83982L2.14806 4.54449C2.1141 4.50704 2.08629 4.46541 2.06463 4.42111Z'/></svg>");
  }

  @if ($type == expand) {
    $bg-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none'><rect opacity='0.3' x='2' y='2' width='20' height='20' rx='5' fill='#{$color}'/><rect x='10.8891' y='17.8033' width='12' height='2' rx='1' transform='rotate(-90 10.8891 17.8033)' fill='#{$color}'/><rect x='6.01041' y='10.9247' width='12' height='2' rx='1' fill='#{$color}'/></svg>");
  }

  @if ($type == collapse) {
    $bg-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none'><rect opacity='0.3' x='2' y='2' width='20' height='20' rx='5' fill='#{$color}'/><rect x='6.0104' y='10.9247' width='12' height='2' rx='1' fill='#{$color}'/></svg>");
  }

  // Icon style
  @if $update == false {
    mask-repeat: no-repeat;
    mask-position: center;
    -webkit-mask-repeat: no-repeat;
    -webkit-mask-position: center;
  }

  @if $color != none {
    background-color: $color;
  }

  -webkit-mask-image: escape-svg($bg-image);
  mask-image: escape-svg($bg-image);
}

//
// Scroll mixins
//

@mixin scrollbar-color($color, $hover-color: null) {
  // Firefox
  scrollbar-color: $color transparent;

  // Webkit
  &::-webkit-scrollbar-thumb {
    background-color: $color;
  }

  &::-webkit-scrollbar-corner {
    background-color: transparent;
  }

  @if ($hover-color != null) {
    // Hover state
    &:hover {
      // Firefox
      scrollbar-color: $hover-color transparent;

      // Webkit
      &::-webkit-scrollbar-thumb {
        background-color: $hover-color;
      }

      &::-webkit-scrollbar-corner {
        background-color: transparent;
      }
    }
  }
}

@mixin shape(
  $edges-number: 6,
  $main-radius: 30%,
  $rounding-radius: 10%,
  $rotated: true,
  $precision: 20
) {
  $central-angle: divide(360deg, $edges-number);
  $angle: ($edges-number - 2) * divide(180deg, $edges-number);
  $max-var-angle: 2 * (90deg - divide($angle, 2));
  $precision: 6;
  $unit-var-angle: divide($max-var-angle, $precision);
  $r-diff: $main-radius + $rounding-radius;

  $points: ();

  @for $i from 0 to $edges-number {
    $vertex-angle: $i * $central-angle + if($rotated, -90deg, 0deg);
    $vertex-x: 50% + $r-diff * math.cos($vertex-angle);
    $vertex-y: 50% + $r-diff * math.sin($vertex-angle);

    @for $j from 0 through $precision {
      $curr-angle: $vertex-angle + ($j - 0.5 * $precision) * $unit-var-angle;
      $x: $vertex-x + $rounding-radius * math.cos($curr-angle);
      $y: $vertex-y + $rounding-radius * math.sin($curr-angle);

      $points: $points, $x $y;
    }
  }

  clip-path: polygon($points);
}
//
// noUiSlider Mixins
//

@mixin nouislider-size(
  $height,
  $handle-width,
  $handle-height,
  $handle-pos-top
) {
  height: $height;

  .noUi-handle {
    width: $handle-width;
    height: $handle-height;
    top: -#{$handle-pos-top};
  }
}
// Custom variables

//
// To make future updates easier consider overriding the global variables from _variables.bootstrap.scss and _variables.custom.scss for current demo in this file.
// Note that this file is included first and variables defined in _variables.bootstrap.scss and _variables.custom.scss
// are not accessible in this file but you can override any global variable as shown below:
//

// Bootstrap color system
$white: #ffffff;

// Gray colors
$gray-100-dark: #1b1b29;
$gray-200-dark: #2b2b40;
$gray-300-dark: #323248;
$gray-400-dark: #474761;
$gray-500-dark: #565674;
$gray-600-dark: #6d6d80;
$gray-700-dark: #92929f;
$gray-800-dark: #cdcdde;
$gray-900-dark: #ffffff;

// Theme colors
// Primary
$primary: #3e97ff;
$primary-active: #0095e8;
$primary-light: #f1faff;
$primary-light-dark: #212e48;
$primary-inverse: $white;

// Success
$success: #50cd89;
$success-active: #47be7d;
$success-light: #e8fff3;
$success-light-dark: #1c3238;
$success-inverse: $white;

// Info
$info: #7239ea;
$info-active: #5014d0;
$info-light: #f8f5ff;
$info-light-dark: #2f264f;
$info-inverse: $white;

// Danger
$danger: #f1416c;
$danger-active: #d9214e;
$danger-light: #fff5f8;
$danger-light-dark: #3a2434;
$danger-inverse: $white;

// Warning
$warning: #ffc700;
$warning-active: #f1bc00;
$warning-light: #fff8dd;
$warning-light-dark: #392f28;
$warning-inverse: $white;

// Card Box Shadow
$card-border-enabled: true;
$card-box-shadow: 0px 4px 12px 0px rgba(0, 0, 0, 0.03);
$card-box-shadow-dark: none;

// Body
$body-bg-dark: #1c1c1c;

//
// Bootstrap & Custom Variables
// Safely override any variable in _variables.custom.scss
//

// Prefix for :root CSS variables
$prefix: bs- !default; // Deprecated in v5.2.0 for the shorter `$prefix`

// Bootstrap color system
$white: #ffffff !default;
$black: #000000 !default;

// Bootstrap grey colors
$gray-100: #f9f9f9 !default;
$gray-200: #f1f1f2 !default;
$gray-300: #dbdfe9 !default;
$gray-400: #b5b5c3 !default;
$gray-500: #99a1b7 !default;
$gray-600: #78829d !default;
$gray-700: #4b5675 !default;
$gray-800: #252f4a !default;
$gray-900: #071437 !default;

// Bootstrap muted color
$text-muted: $gray-500 !default;

// Bootstrap gray colors map
$grays: (
  "100": $gray-100,
  "200": $gray-200,
  "300": $gray-300,
  "400": $gray-400,
  "500": $gray-500,
  "600": $gray-600,
  "700": $gray-700,
  "800": $gray-800,
  "900": $gray-900,
) !default;

// Bootstrap contextual colors
// Primary colors
$primary: #3699ff !default;
$primary-active: #187de4 !default;
$primary-light: #f1faff !default;
$primary-inverse: $white !default;

// Secondary colors
$secondary: $gray-300 !default;
$secondary-active: $gray-400 !default;
$secondary-light: $gray-100 !default;
$secondary-inverse: $gray-700 !default;

// Light colors
$light: $gray-100 !default;
$light-active: $gray-200 !default;
$light-light: gba($gray-100, 0.75) !default;
$light-inverse: $gray-600 !default;

// Success colors
$success: #1bc5bd !default;
$success-active: #0bb7af !default;
$success-light: #c9f7f5 !default;
$success-inverse: $white !default;

// Info colors
$info: #8950fc !default;
$info-active: #7337ee !default;
$info-light: #eee5ff !default;
$info-inverse: $white !default;

// Warning colors
$warning: #ffa800 !default;
$warning-active: #ee9d01 !default;
$warning-light: #fff4de !default;
$warning-inverse: $white !default;

// Danger colors
$danger: #f64e60 !default;
$danger-active: #ee2d41 !default;
$danger-light: #ffe2e5 !default;
$danger-inverse: $white !default;

// Dark colors
$dark: $gray-900 !default;
$dark-active: darken($gray-900, 3%) !default;
$dark-light: $gray-200 !default;
$dark-inverse: $white !default;

// Contextual colors
$theme-colors: (
  "light": $light,
  "primary": $primary,
  "secondary": $secondary,
  "success": $success,
  "info": $info,
  "warning": $warning,
  "danger": $danger,
  "dark": $dark,
) !default;

// Contextual active state colors
$theme-active-colors: (
  "primary": $primary-active,
  "secondary": $secondary-active,
  "light": $light-active,
  "success": $success-active,
  "info": $info-active,
  "warning": $warning-active,
  "danger": $danger-active,
  "dark": $dark-active,
) !default;

// Contextual inverse state colors
$theme-inverse-colors: (
  "primary": $primary-inverse,
  "secondary": $secondary-inverse,
  "light": $light-inverse,
  "success": $success-inverse,
  "info": $info-inverse,
  "warning": $warning-inverse,
  "danger": $danger-inverse,
  "dark": $dark-inverse,
) !default;

// Contextual light state colors
$theme-light-colors: (
  "primary": $primary-light,
  "secondary": $secondary-light,
  "success": $success-light,
  "info": $info-light,
  "warning": $warning-light,
  "danger": $danger-light,
  "dark": $dark-light,
) !default;

// Text colors
$theme-text-colors: (
  "white": $white,
  "primary": $primary,
  "secondary": $secondary,
  "light": $light,
  "success": $success,
  "info": $info,
  "warning": $warning,
  "danger": $danger,
  "dark": $dark,
  "muted": $text-muted,
  "gray-100": $gray-100,
  "gray-200": $gray-200,
  "gray-300": $gray-300,
  "gray-400": $gray-400,
  "gray-500": $gray-500,
  "gray-600": $gray-600,
  "gray-700": $gray-700,
  "gray-800": $gray-800,
  "gray-900": $gray-900,
) !default;

// Options
//
// Quickly modify global styling by enabling or disabling optional features.
$enable-rounded: true !default;
$enable-shadows: true !default;
$enable-negative-margins: true !default;
$enable-smooth-scroll: false !default;

// Spacing
//
// Control the default styling of most Bootstrap elements by modifying these
// variables. Mostly focused on spacing.
// You can add more entries to the $spacers map, should you need more variation.
$spacer: 1rem !default;

$spacers: (
  0: 0,
  1: (
    $spacer * 0.25,
  ),
  // 3.5px
  2:
    (
      $spacer * 0.5,
    ),
  // 7px;
  3:
    (
      $spacer * 0.75,
    ),
  // 10.5px
  4:
    (
      $spacer * 1,
    ),
  // 14px
  5:
    (
      $spacer * 1.25,
    ),
  // 17.5px
  6:
    (
      $spacer * 1.5,
    ),
  // 21px
  7:
    (
      $spacer * 1.75,
    ),
  // 24.5px
  8:
    (
      $spacer * 2,
    ),
  // 28px
  9:
    (
      $spacer * 2.25,
    ),
  // 31.5px
  10:
    (
      $spacer * 2.5,
    ),
  // 35px
  11:
    (
      $spacer * 2.75,
    ),
  // 38.5px
  12:
    (
      $spacer * 3,
    ),
  // 42px
  13:
    (
      $spacer * 3.25,
    ),
  // 45.5px
  14:
    (
      $spacer * 3.5,
    ),
  // 49px
  15:
    (
      $spacer * 3.75,
    ),
  // 52.5px
  16:
    (
      $spacer * 4,
    ),
  // 55px
  17:
    (
      $spacer * 4.25,
    ),
  // 58.5px
  18:
    (
      $spacer * 4.5,
    ),
  // 62px
  19:
    (
      $spacer * 4.75,
    ),
  // 65.5px
  20:
    (
      $spacer * 5,
    ),
  // 69px
);

// Position
//
// Define the edge positioning anchors of the position utilities.
$position-values: (
  0: 0,
  25: 25%,
  50: 50%,
  75: 75%,
  100: 100%,
) !default;

// Body
//
// Settings for the `<body>` element.
$body-bg: $white !default;
$body-bg-rgb: to-rgb($body-bg) !default;
$body-color: $gray-900 !default;
$body-text-align: null !default;

// Links
//
// Style anchor elements.
$link-color: $primary !default;
$link-decoration: none !default;
$link-shade-percentage: 20% !default;
$link-hover-color: $primary-active !default;
$link-hover-decoration: none !default;

// Paragraphs
//
// Style p element.
$paragraph-margin-bottom: 1rem !default;

// Grid breakpoints
//
// Define the minimum dimensions at which your layout will change,
// adapting to different screen sizes, for use in media queries.
// scss-docs-start grid-breakpoints
$grid-breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1400px,
) !default;
// scss-docs-end grid-breakpoints

// Grid containers
//
// Define the maximum width of `.container` for different screen sizes.
$container-max-widths: (
  sm: 540px,
  md: 720px,
  lg: 960px,
  xl: 1140px,
  xxl: 1320px,
) !default;

// Components
//
// Define common padding and border radius sizes and more.
$border-width: 1px !default;
$border-color: $gray-200 !default;
$border-dashed-color: $gray-300 !default;

$border-widths: (
  0: 0,
  1: 1px,
  2: 2px,
  3: 3px,
  4: 4px,
  5: 5px,
) !default;

// Border Radiues
$border-radius: 0.475rem !default;
$border-radius-sm: 0.425rem !default;
$border-radius-lg: 0.625rem !default;
$border-radius-xl: 1rem !default;
$border-radius-2xl: 2rem !default;
$border-radius-pill: 50rem !default;

// Keenthemes hover states
$component-hover-color: $primary !default;
$component-hover-bg: $gray-100 !default;

// Keenthemes active states
$component-active-color: $primary-inverse !default;
$component-active-bg: $primary !default;

// Keenthemes checked states
$component-checked-color: $primary-inverse !default;
$component-checked-bg: $primary !default;

// Keenthemes custom transition settings
$transition-link: color 0.2s ease !default;
$transition-input: color 0.2s ease !default;

// Box shadow
// Shadows
$box-shadow-xs: 0 0.1rem 0.75rem 0.25rem rgba($black, 0.05) !default;
$box-shadow-sm: 0 0.1rem 1rem 0.25rem rgba($black, 0.05) !default;
$box-shadow: 0 0.5rem 1.5rem 0.5rem rgba($black, 0.075) !default;
$box-shadow-lg: 0 1rem 2rem 1rem rgba($black, 0.1) !default;
$box-shadow-inset: inset 0 1px 2px rgba($black, 0.075) !default;

// Keenthemes custom gutter sizes
$gutters: (
  0: 0rem,
  1: (
    $spacer * 0.25,
  ),
  // 3.5px
  2:
    (
      $spacer * 0.5,
    ),
  // 7px;
  3:
    (
      $spacer * 0.75,
    ),
  // 10.5px
  4:
    (
      $spacer * 1,
    ),
  // 14px
  5:
    (
      $spacer * 1.25,
    ),
  // 17.5px
  6:
    (
      $spacer * 1.5,
    ),
  // 21px
  7:
    (
      $spacer * 1.75,
    ),
  // 24.5px
  8:
    (
      $spacer * 2,
    ),
  // 28px
  9:
    (
      $spacer * 2.25,
    ),
  // 31.5px
  10:
    (
      $spacer * 2.5,
    ),
  // 35px
) !default;

// Typography
//
// Font, line-height, and color for body text, headings, and more.
// Font family
$font-family-sans-serif: Inter, Helvetica, "sans-serif" !default;

$font-size-base: 1rem !default; // Assumes the browser default, typically `13px`
$font-size-lg: $font-size-base * 1.075 !default; // 14.04px
$font-size-sm: $font-size-base * 0.95 !default; // 12.025px

$font-weight-lighter: lighter !default;
$font-weight-light: 300 !default;
$font-weight-normal: 400 !default;
$font-weight-semibold: 500 !default;
$font-weight-bold: 600 !default;
$font-weight-bolder: 700 !default;

$font-weight-base: $font-weight-normal !default;

// Line heights
$line-height-base: 1.5 !default;
$line-height-sm: 1.25 !default;
$line-height-lg: 1.75 !default;

// Keenthemes custom line heights
$line-height-xl: 2 !default;
$line-height-xxl: 2.25 !default;

// Heading sizes
$h1-font-size: $font-size-base * 1.75 !default; // 22.75px
$h2-font-size: $font-size-base * 1.5 !default; // 19.50px
$h3-font-size: $font-size-base * 1.35 !default; // 17.55px
$h4-font-size: $font-size-base * 1.25 !default; // 16.25px
$h5-font-size: $font-size-base * 1.15 !default; // 14.95px
$h6-font-size: $font-size-base * 1.075 !default; // 13.97px

// Font Sizes
$font-sizes: (
  1: $h1-font-size,
  // 22.75px
  2: $h2-font-size,
  // 19.50px
  3: $h3-font-size,
  // 17.55px
  4: $h4-font-size,
  // 16.25px
  5: $h5-font-size,
  // 14.95px
  6: $h6-font-size,

  // 13.95px
  7: $font-size-base * 0.95,
  // 12.35px
  8: $font-size-base * 0.85,
  // 11.05px
  9: $font-size-base * 0.75,
  // 9.75px
  10: $font-size-base * 0.5,

  // 6.50px
  sm: $font-size-sm,
  base: $font-size-base,
  // 13px
  lg: $font-size-lg,

  fluid: 100%,

  // 100%
  2x: $font-size-base * 2,
  // 26px
  2qx: $font-size-base * 2.25,
  // 29.25px
  2hx: $font-size-base * 2.5,
  // 32.5px
  2tx: $font-size-base * 2.75,

  // 35.75px
  3x: $font-size-base * 3,
  // 39px
  3qx: $font-size-base * 3.25,
  // 42.25px
  3hx: $font-size-base * 3.5,
  // 45.5px
  3tx: $font-size-base * 3.75,

  // 48.75px
  4x: $font-size-base * 4,
  // 52px
  4qx: $font-size-base * 4.25,
  // 55.25px
  4hx: $font-size-base * 4.5,
  // 58.5px
  4tx: $font-size-base * 4.75,

  // 61.75px
  5x: $font-size-base * 5,
  // 65px
  5qx: $font-size-base * 5.25,
  // 68.25px
  5hx: $font-size-base * 5.5,
  // 71.5px
  5tx: $font-size-base * 5.75,

  // 74.75px
  6x: $font-size-base * 6,
  // 75px
  6qx: $font-size-base * 6.25,
  // 78.25px
  6hx: $font-size-base * 6.5,
  // 81.5px
  6tx: $font-size-base * 6.75,

  // 84.75px
  7x: $font-size-base * 7,
  // 85px
  7qx: $font-size-base * 7.25,
  // 88.25px
  7hx: $font-size-base * 7.5,
  // 91.5px
  7tx: $font-size-base * 7.75 // 94.75px,,,,,,,,,,
) !default;

$headings-font-weight: 600 !default;
$headings-color: $gray-900 !default;
$headings-line-height: 1.2 !default;

$display-font-sizes: (
  1: 5rem,
  2: 4.5rem,
  3: 4rem,
  4: 3.5rem,
  5: 3rem,
  6: 2.5rem,
) !default;

$display-font-weight: $font-weight-bolder !default;
$display-line-height: $headings-line-height !default;

$blockquote-footer-color: $gray-600 !default;

// Tables
//
// Customizes the `.table` component with basic values, each used across all table variations.
$table-cell-padding-y: 0.75rem !default;
$table-cell-padding-x: 0.75rem !default;
$table-cell-padding-y-sm: 0.5rem !default;
$table-cell-padding-x-sm: 0.5rem !default;

$table-color: var(--#{$prefix}body-color) !default;
$table-bg: transparent !default;
$table-accent-bg: transparent !default;
$table-striped-color: $table-color !default;
$table-striped-bg: rgba(var(--#{$prefix}gray-100-rgb), 0.75) !default;

$table-active-color: $table-color !default;
$table-active-bg: var(--#{$prefix}gray-100) !default;

$table-hover-color: $table-color !default;
$table-hover-bg: var(--#{$prefix}gray-100) !default;

$table-border-factor: 0.1 !default;
$table-border-width: $border-width !default;
$table-border-color: var(--#{$prefix}border-color) !default;

$table-caption-color: $text-muted !default;

$table-loading-message-box-shadow: 0px 0px 50px 0px rgba(82, 63, 105, 0.15) !default;
$table-loading-message-bg: var(--#{$prefix}body-bg) !default;
$table-loading-message-color: var(--#{$prefix}gray-700) !default;

// Buttons + Forms
//
// Shared variables that are reassigned to `$input-` and `$btn-` specific variables.
$input-btn-padding-y: 0.775rem !default;
$input-btn-padding-x: 1rem !default;
$input-btn-font-family: null !default;
$input-btn-font-size: $font-size-base * 1.1 !default;
$input-btn-line-height: $line-height-base !default;

$input-btn-focus-width: 0.25rem !default;
$input-btn-focus-color-opacity: 0.25 !default;
$input-btn-focus-color: rgba(
  var(--#{$prefix}component-active-bg),
  $input-btn-focus-color-opacity
) !default;
$input-btn-focus-box-shadow: null !default;

$input-btn-padding-y-sm: 0.55rem !default;
$input-btn-padding-x-sm: 0.75rem !default;
$input-btn-font-size-sm: $font-size-sm !default;

$input-btn-padding-y-lg: 0.825rem !default;
$input-btn-padding-x-lg: 1.5rem !default;
$input-btn-font-size-lg: $font-size-base * 1.15 !default;

$input-btn-border-width: $border-width !default;

// Buttons
//
// For each of Bootstrap's buttons, define text, background, and border color.
$btn-padding-y: $input-btn-padding-y !default;
$btn-padding-x: 1.5rem !default;
$btn-font-family: $input-btn-font-family !default;
$btn-font-size: $input-btn-font-size !default;
$btn-line-height: $input-btn-line-height !default;
$btn-white-space: null !default; // Set to `nowrap` to prevent text wrapping

$btn-padding-y-sm: $input-btn-padding-y-sm !default;
$btn-padding-x-sm: 1.25rem !default;
$btn-font-size-sm: $input-btn-font-size-sm !default;

$btn-padding-y-lg: $input-btn-padding-y-lg !default;
$btn-padding-x-lg: 1.75rem !default;
$btn-font-size-lg: $input-btn-font-size-lg !default;

$btn-border-width: $input-btn-border-width !default;

$btn-font-weight: $font-weight-semibold !default;
$btn-box-shadow: null !default;
$btn-focus-width: $input-btn-focus-width !default;
$btn-focus-box-shadow: null !default;
$btn-disabled-opacity: 0.65 !default;
$btn-active-box-shadow: null !default;

$btn-link-color: var(--#{$prefix}link-color) !default;
$btn-link-hover-color: var(--#{$prefix}link-hover-color) !default;
$btn-link-disabled-color: var(--#{$prefix}gray-600) !default;

// Allows for customizing button radius independently from global border radius
$btn-border-radius: $border-radius !default;
$btn-border-radius-sm: $border-radius-sm !default;
$btn-border-radius-lg: $border-radius-lg !default;

// Forms
$form-text-margin-top: 0.5rem !default;
$form-text-font-size: $font-size-sm !default;
$form-text-color: var(--#{$prefix}text-muted) !default;

$form-label-margin-bottom: 0.5rem !default;
$form-label-font-size: 1.05rem !default;
$form-label-font-weight: 500 !default;
$form-label-color: var(--#{$prefix}gray-800) !default;

$input-padding-y: $input-btn-padding-y !default;
$input-padding-x: $input-btn-padding-x !default;
$input-font-family: $input-btn-font-family !default;
$input-font-size: $input-btn-font-size !default;
$input-font-weight: $font-weight-semibold !default;
$input-line-height: $input-btn-line-height !default;

$input-bg: var(--#{$prefix}body-bg) !default;

$input-border-width: $input-btn-border-width !default;
$input-color: var(--#{$prefix}gray-700) !default;
$input-border-color: var(--#{$prefix}gray-300) !default;
$input-box-shadow: false !default;
$input-border-radius: $btn-border-radius !default;
$input-border-radius-sm: $btn-border-radius-sm !default;
$input-border-radius-lg: $btn-border-radius-lg !default;

$input-focus-bg: $input-bg !default;
$input-focus-border-color: var(--#{$prefix}gray-400) !default;
$input-btn-focus-width: 0.25rem !default;
$input-focus-color: $input-color !default;
$input-focus-width: $input-btn-focus-width !default;

$input-disabled-color: var(--#{$prefix}gray-500) !default;
$input-disabled-bg: var(--#{$prefix}gray-200) !default;
$input-disabled-border-color: $input-border-color !default;

$input-placeholder-color: var(--#{$prefix}gray-500) !default;
$input-plaintext-color: var(--#{$prefix}gray-700) !default;

$inpur-autifill-bg-color: var(--#{$prefix}gray-100) !default;

// Keenthemes solid input style
$input-solid-color: var(--#{$prefix}gray-700) !default;
$input-solid-bg: var(--#{$prefix}gray-100) !default;
$input-solid-bg-focus: var(--#{$prefix}gray-200) !default;
$input-solid-placeholder-color: var(--#{$prefix}gray-500) !default;

// Form checks
$form-check-input-width: 1.75rem !default;
$form-check-input-width-sm: 1.55rem !default;
$form-check-input-width-lg: 2.25rem !default;
$form-check-input-bg-size: 60% 60% !default;
$form-check-min-height: $font-size-base * $line-height-base !default;
$form-check-padding-start: $form-check-input-width + 0.5rem !default;
$form-check-padding-left: $form-check-input-width + 0.5rem !default;
$form-check-margin-bottom: 0.125rem !default;
$form-check-label-color: var(--#{$prefix}gray-500) !default;
$form-check-label-color-checked: var(--#{$prefix}gray-700) !default;
$form-check-label-cursor: null !default;
$form-check-transition: null !default;
$form-check-inline-margin-right: 1rem !default;

$form-check-input-active-filter: brightness(90%) !default;

$form-check-input-bg: transparent !default;
$form-check-input-bg-solid: var(--#{$prefix}gray-200) !default;
$form-check-input-border: 1px solid $input-border-color !default;
$form-check-input-border-radius: 0.45em !default;
$form-check-radio-border-radius: 50% !default;
$form-check-input-focus-border: $input-focus-border-color !default;
$form-check-input-focus-box-shadow: none !default;

$form-check-input-checked-color: $component-checked-color !default;
$form-check-input-checked-bg-color: $component-checked-bg !default;
$form-check-input-checked-border-color: $component-checked-bg !default;
$form-check-input-checked-bg-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 13 11' width='13' height='11' fill='none'><path d='M11.0426 1.02893C11.3258 0.695792 11.8254 0.655283 12.1585 0.938451C12.4917 1.22162 12.5322 1.72124 12.249 2.05437L5.51985 9.97104C5.23224 10.3094 4.72261 10.3451 4.3907 10.05L0.828197 6.88335C0.50141 6.59288 0.471975 6.09249 0.762452 5.7657C1.05293 5.43891 1.55332 5.40948 1.88011 5.69995L4.83765 8.32889L11.0426 1.02893Z' fill='#{$form-check-input-checked-color}'/></svg>") !default;
$form-check-radio-checked-bg-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'><circle r='2' fill='#{$form-check-input-checked-color}'/></svg>") !default;

$form-check-input-checked-bg-color-solid: $component-checked-bg !default;
$form-check-input-focus-bg-color-solid: $component-checked-bg !default;

$form-check-input-indeterminate-color: $component-checked-color !default;
$form-check-input-indeterminate-bg-color: $component-checked-bg !default;
$form-check-input-indeterminate-border-color: $component-checked-bg !default;
$form-check-input-indeterminate-bg-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'><path fill='none' stroke='#{$form-check-input-indeterminate-color}' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='M6 10h8'/></svg>") !default;

$form-check-input-disabled-opacity: 0.5 !default;
$form-check-label-disabled-opacity: $form-check-input-disabled-opacity !default;
$form-check-btn-check-disabled-opacity: $btn-disabled-opacity !default;

$form-switch-color: rgba($black, 0.25) !default;
$form-switch-color-solid: $white !default;
$form-switch-width: 3.25rem !default;
$form-switch-height: 2.25rem !default;
$form-switch-width-sm: 2.5rem !default;
$form-switch-height-sm: 1.5rem !default;
$form-switch-width-lg: 3.75rem !default;
$form-switch-height-lg: 2.75rem !default;

$form-switch-padding-start: $form-switch-width + 0.5rem !default;
$form-switch-padding-left: $form-switch-width + 0.5rem !default;
$form-switch-bg-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'><circle r='3' fill='#{$form-switch-color}'/></svg>") !default;
$form-switch-bg-image-solid: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'><circle r='3' fill='#{$form-switch-color-solid}'/></svg>") !default;
$form-switch-border-radius: $form-switch-width !default;

$form-switch-focus-color: $form-switch-color !default;
$form-switch-focus-bg-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'><circle r='3' fill='#{$form-switch-focus-color}'/></svg>") !default;

$form-switch-checked-color: $component-checked-color !default;
$form-switch-checked-bg-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'><circle r='3' fill='#{$form-switch-checked-color}'/></svg>") !default;
$form-switch-checked-bg-position: right center !default;

// Input groups
$input-group-addon-bg: var(--#{$prefix}gray-100) !default;
$input-group-addon-color: var(--#{$prefix}gray-700) !default;
$input-group-addon-border-color: $input-border-color !default;

// Form select
$form-select-color: $input-color !default;
$form-select-bg: $input-bg !default;
$form-select-disabled-color: $input-disabled-color !default;
$form-select-disabled-bg: var(--#{$prefix}gray-200) !default;
$form-select-disabled-border-color: $input-disabled-border-color !default;
$form-select-indicator-color: $gray-600 !default;
$form-select-indicator: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'><path fill='none' stroke='#{$form-select-indicator-color}' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m2 5 6 6 6-6'/></svg>") !default;
$form-select-border-color: $input-border-color !default;
$form-select-box-shadow: false !default;
$form-select-focus-border-color: $input-focus-border-color !default;
$form-select-focus-width: $input-focus-width !default;
$form-select-focus-box-shadow: 0 0 0 $form-select-focus-width
  $input-btn-focus-color !default;

// Form range
$form-range-track-border-radius: $border-radius !default;
$form-range-track-bg: var(--#{$prefix}gray-300) !default;
$form-range-thumb-disabled-bg: var(--#{$prefix}gray-500) !default;

// Form file button
$form-file-button-color: $input-color !default;
$form-file-button-bg: $input-group-addon-bg !default;
$form-file-button-hover-bg: shade-color($form-file-button-bg, 5%) !default;

// Form floating
$input-height-border: $input-border-width * 2 !default;
$form-floating-height: calc(3.75rem + #{$input-height-border}) !default;
$form-floating-input-padding-t: 1.85rem !default;

// Navs
$nav-link-transition: color 0.15s ease-in-out !default;
$nav-tabs-border-color: var(--#{$prefix}border-color) !default;

// Dropdowns
// Dropdown menu container and contents.
$dropdown-color: var(--#{$prefix}body-color) !default;
$dropdown-bg: var(--#{$prefix}body-bg) !default;
$dropdown-divider-bg: var(--#{$prefix}gray-100) !default;
$dropdown-box-shadow: 0px 0px 50px 0px rgba(82, 63, 105, 0.15) !default;
$dropdown-border-radius: $border-radius !default;
$dropdown-border-width: 0rem !default;
$dropdown-link-color: var(--#{$prefix}gray-900) !default;
$dropdown-link-active-color: var(--#{$prefix}component-hover-color) !default;
$dropdown-link-active-bg: var(--#{$prefix}component-hover-bg) !default;
$dropdown-link-active-color: var(--#{$prefix}component-active-color) !default;
$dropdown-link-active-bg: var(--#{$prefix}component-active-bg) !default;
$dropdown-link-disabled-color: var(--#{$prefix}gray-500) !default;
$dropdown-header-color: var(--#{$prefix}gray-600) !default;
$dropdown-item-padding-y: 0.65rem !default;
$dropdown-item-padding-x: 0.85rem !default;

// Pagination
$pagination-item-height: 2.5rem !default;
$pagination-item-bg: var(--#{$prefix}body-bg) !default;
$pagination-item-space: 0.5rem !default;
$pagination-item-space-tablet-and-mobile: 0.25rem !default;
$pagination-font-weight: $font-weight-semibold !default;
$pagination-font-size: $font-size-lg !default;
$pagination-icon-font-size: 0.85rem !default;
$pagination-icon-height: $pagination-item-height * 0.35 !default;

$pagination-padding-y: 0.375rem !default;
$pagination-padding-x: 0.75rem !default;
$pagination-padding-y-sm: 0.25rem !default;
$pagination-padding-x-sm: 0.5rem !default;
$pagination-padding-y-lg: 0.75rem !default;
$pagination-padding-x-lg: 1.5rem !default;

$pagination-color: var(--#{$prefix}gray-700) !default;
$pagination-bg: transparent !default;
$pagination-border-width: 0 !default;
$pagination-border-radius: $btn-border-radius !default;
$pagination-margin-left: 0 !default;
$pagination-border-color: transparent !default;

$pagination-focus-color: var(--#{$prefix}component-hover-color) !default;
$pagination-focus-bg: var(--#{$prefix}component-hover-bg) !default;
$pagination-focus-box-shadow: none !default;
$pagination-focus-outline: 0 !default;

$pagination-hover-color: var(--#{$prefix}component-hover-color) !default;
$pagination-hover-bg: var(--#{$prefix}component-hover-bg) !default;
$pagination-hover-border-color: transparent !default;

$pagination-active-color: var(--#{$prefix}component-active-color) !default;
$pagination-active-bg: var(--#{$prefix}component-active-bg) !default;
$pagination-active-border-color: transparent !default;

$pagination-disabled-color: var(--#{$prefix}gray-400) !default;
$pagination-disabled-bg: transparent !default;
$pagination-disabled-border-color: transparent !default;

// Card
$card-box-shadow: 0px 0px 20px 0px rgba(76, 87, 125, 0.02) !default;
$card-border-color: var(--#{$prefix}border-color) !default;
$card-border-width: 1px !default;
$card-border-style: solid !default;
$card-border-dashed-color: var(--#{$prefix}border-dashed-color) !default;
$card-color: null !default;
$card-cap-bg: transparent !default;
$card-py: 2rem !default;
$card-px: 2.25rem !default;
$card-border-radius: $border-radius-lg !default;
$card-header-py: 0.5rem !default;
$card-header-height: 70px !default;
$card-border-enabled: false !default;

// Accordion
$accordion-color: var(--#{$prefix}body-color) !default;
$accordion-bg: var(--#{$prefix}body-bg) !default;
$accordion-padding-y: 1.5rem !default;
$accordion-padding-x: 1.5rem !default;
$accordion-border-color: var(--#{$prefix}border-color) !default;
$accordion-border-radius: $border-radius !default;
$accordion-button-color: $accordion-color !default;
$accordion-button-bg: $accordion-bg !default;
$accordion-button-active-bg: var(--#{$prefix}gray-100) !default;
$accordion-button-active-color: var(--#{$prefix}primary) !default;
$accordion-button-focus-border-color: var(--#{$prefix}border-color) !default;
$accordion-button-focus-box-shadow: none !default;

$accordion-icon-width: 1.15rem !default;
$accordion-icon-color: $body-color !default;
$accordion-icon-active-color: $primary !default;
$accordion-button-icon: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='#{$accordion-icon-color}'><path fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/></svg>") !default;
$accordion-button-active-icon: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='#{$accordion-icon-active-color}'><path fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/></svg>") !default;

// Tooltips
$tooltip-font-size: 1rem !default;
$tooltip-max-width: 200px !default;
$tooltip-color: var(--#{$prefix}gray-800) !default;
$tooltip-bg: var(--#{$prefix}body-bg) !default;
$tooltip-border-radius: $btn-border-radius !default;
$tooltip-opacity: 1 !default;
$tooltip-box-shadow: 0px 0px 50px 0px rgba(82, 63, 105, 0.075) !default;
$tooltip-padding-y: 0.75rem !default;
$tooltip-padding-x: 1rem !default;
$tooltip-margin: 0 !default;

// Popovers
$popover-bg: $body-bg !default;
$popover-font-size: $font-size-base !default;
$popover-border-color: $popover-bg !default;
$popover-border-radius: $border-radius !default;
$popover-inner-border-radius: $border-radius !default;
$popover-box-shadow: $dropdown-box-shadow !default;
$popover-header-bg: $popover-bg !default;
$popover-header-color: var(--#{$prefix}gray-800) !default;
$popover-header-font-weight: 500 !default;
$popover-header-font-size: 1rem !default;
$popover-header-padding-y: 1rem !default;
$popover-header-padding-x: 1.25rem !default;
$popover-header-border-color: $border-color !default;
$popover-body-color: var(--#{$prefix}gray-800) !default;
$popover-body-padding-y: 1.25rem !default;
$popover-body-padding-x: 1.25rem !default;
$popover-dissmis-btn-size: 1.25rem !default;
$popover-dissmis-btn-top: 0.85rem !default;
$popover-dissmis-btn-end: 0.85rem !default;

// Toasts
$toast-color: var(--#{$prefix}gray-700) !default;
$toast-background-color: var(--#{$prefix}body-bg) !default;
$toast-box-shadow: var(--#{$prefix}box-shadow) !default;
$toast-header-color: var(--#{$prefix}gray-700) !default;
$toast-header-background-color: var(--#{$prefix}body-bg) !default;
$toast-header-border-color: var(--#{$prefix}border-color) !default;
$toast-border-color: transparent !default;

// Badges
$badge-font-size: 0.85rem !default;
$badge-font-size-sm: 0.8rem !default;
$badge-font-size-lg: 1rem !default;
$badge-font-weight: $font-weight-bold !default;
$badge-color: var(--#{$prefix}body-color) !default;
$badge-padding-y: 0.325rem !default;
$badge-padding-x: 0.5rem !default;
$badge-border-radius: $border-radius-sm !default;
$badge-size: 1.75rem !default;
$badge-size-sm: 1.5rem !default;
$badge-size-lg: 2rem !default;

// Modals
// Padding applied to the modal body
$modal-inner-padding: 1.75rem !default;

// Margin between elements in footer, must be lower than or equal to 2 * $modal-inner-padding
$modal-footer-margin-between: 0.5rem !default;

$modal-dialog-margin: 0.5rem !default;
$modal-dialog-margin-y-sm-up: 1.75rem !default;

$modal-content-color: null !default;
$modal-content-bg: var(--#{$prefix}body-bg) !default;
$modal-content-border-color: null !default;
$modal-content-border-width: 0 !default;
$modal-content-border-radius: $border-radius !default;
$modal-content-inner-border-radius: $border-radius !default;
$modal-content-box-shadow: 0 0.25rem 0.5rem rgba($black, 0.05) !default;
$modal-content-box-shadow-xs: 0 0.25rem 0.5rem rgba($black, 0.1) !default;
$modal-content-box-shadow-sm-up: 0 0.5rem 1rem rgba($black, 0.1) !default;

$modal-backdrop-bg: $black !default;
$modal-backdrop-opacity: 0.4 !default;

$modal-header-border-color: var(--#{$prefix}border-color) !default;
$modal-footer-border-color: $modal-header-border-color !default;
$modal-header-border-width: 1px !default;

// Progress bars
$progress-height: 1rem !default;
$progress-font-size: $font-size-base * 0.75 !default;
$progress-bg: var(--#{$prefix}gray-100) !default;
$progress-border-radius: 6px !default;
$progress-box-shadow: none !default;

// List group
$list-group-color: var(--#{$prefix}gray-900) !default;
$list-group-bg: $white !default;
$list-group-border-color: rgba($black, 0.125) !default;

$list-group-hover-bg: var(--#{$prefix}gray-100) !default;
$list-group-active-color: var(--#{$prefix}component-active-color) !default;
$list-group-active-bg: var(--#{$prefix}component-active-bg) !default;
$list-group-active-border-color: $list-group-active-bg !default;

$list-group-disabled-color: var(--#{$prefix}gray-600) !default;
$list-group-disabled-bg: $list-group-bg !default;

$list-group-action-color: var(--#{$prefix}gray-700) !default;
$list-group-action-hover-color: $list-group-action-color !default;

$list-group-action-active-color: var(--#{$prefix}body-color) !default;
$list-group-action-active-bg: var(--#{$prefix}gray-200) !default;

// Image thumbnails
$thumbnail-bg: var(--#{$prefix}body-bg) !default;
$thumbnail-border-color: var(--#{$prefix}border-color) !default;
$thumbnail-box-shadow: var(--#{$prefix}box-shadow-sm) !default;

// Figures
$figure-caption-color: var(--#{$prefix}gray-600) !default;

// Breadcrumbs
$breadcrumb-bg: null !default;
$breadcrumb-divider-color: var(--#{$prefix}gray-600) !default;
$breadcrumb-active-color: var(--#{$prefix}primary) !default;
$breadcrumb-item-padding-x: 0.5rem !default;

// Carousel
$carousel-custom-indicator-transition-speed: 0.3s !default;
$carousel-custom-indicator-default-bg-color: var(--#{$prefix}gray-200) !default;
$carousel-custom-indicator-active-bg-color: var(--#{$prefix}gray-400) !default;

$carousel-custom-dots-indicator-default-size: 9px !default;
$carousel-custom-dots-indicator-active-size: 13px !default;

$carousel-custom-bullet-indicator-default-size: 6px !default;
$carousel-custom-bullet-indicator-active-width: 16px !default;
$carousel-custom-bullet-indicator-default-bg-color: var(
  --#{$prefix}gray-400
) !default;
$carousel-custom-bullet-indicator-active-bg-color: var(
  --#{$prefix}gray-600
) !default;

// Spinners
$spinner-border-width: 0.185rem !default;
$spinner-animation-speed: 0.65s !default;
$spinner-border-width-sm: 0.145em !default;

// Close
$btn-close-width: 0.75rem !default;
$btn-close-height: $btn-close-width !default;
$btn-close-color: $black !default;
$btn-close-bg: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='#{$btn-close-color}'><path d='M.293.293a1 1 0 0 1 1.414 0L8 6.586 14.293.293a1 1 0 1 1 1.414 1.414L9.414 8l6.293 6.293a1 1 0 0 1-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 0 1-1.414-1.414L6.586 8 .293 1.707a1 1 0 0 1 0-1.414z'/></svg>") !default;
$btn-close-focus-shadow: none !default;

// Code
$code-bg: #f1f3f8 !default;
$code-box-shadow: 0px 3px 9px rgba(0, 0, 0, 0.08) !default;
$code-padding: 0.1rem 0.4rem !default;
$code-margin: 0 0.5rem !default;
$code-font-weight: 400 !default;
$code-border-radius: 0.3rem !default;
$code-color: #b93993 !default;
$code-space: 0.25rem !default;

// Opacity
$opacity-values: (
  0: 0,
  5: 0.05,
  10: 0.1,
  15: 0.15,
  20: 0.2,
  25: 0.25,
  50: 0.5,
  75: 0.75,
  100: 1,
) !default;

// Zindex
$zindex-values: (
  n1: -1,
  n2: -2,
  0: 0,
  1: 1,
  2: 2,
  3: 3,
) !default;

// Letter spacing
$letter-spacing-values: (
  1: 0.1rem,
  2: 0.115rem,
  3: 0.125rem,
  4: 0.25rem,
  5: 0.5rem,
  n1: -0.1rem,
  n2: -0.115rem,
  n3: -0.125rem,
  n4: -0.25rem,
  n5: -0.5rem,
) !default;

// Keenthemes hight and width sizes
$custom-sizes: (
  unset: unset,
  25: 25%,
  50: 50%,
  75: 75%,
  100: 100%,
  auto: auto,
  1px: 1px,
  2px: 2px,
  3px: 3px,
  4px: 4px,
  5px: 5px,
  6px: 6px,
  7px: 7px,
  8px: 8px,
  9px: 9px,
  10px: 10px,
  15px: 15px,
  20px: 20px,
  25px: 25px,
  30px: 30px,
  35px: 35px,
  40px: 40px,
  45px: 45px,
  50px: 50px,
  55px: 55px,
  60px: 60px,
  65px: 65px,
  70px: 70px,
  75px: 75px,
  80px: 80px,
  85px: 85px,
  90px: 90px,
  95px: 95px,
  100px: 100px,
  125px: 125px,
  150px: 150px,
  175px: 175px,
  200px: 200px,
  225px: 225px,
  250px: 250px,
  275px: 275px,
  300px: 300px,
  325px: 325px,
  350px: 350px,
  375px: 375px,
  400px: 400px,
  425px: 425px,
  450px: 450px,
  475px: 475px,
  500px: 500px,
  550px: 550px,
  600px: 600px,
  650px: 650px,
  700px: 700px,
  750px: 750px,
  800px: 800px,
  850px: 850px,
  900px: 900px,
  950px: 950px,
  1000px: 1000px,
) !default;

// Keenthemes symbol component
$symbol-sizes: (
  20px: 20px,
  25px: 25px,
  30px: 30px,
  35px: 35px,
  40px: 40px,
  45px: 45px,
  default: 50px,
  50px: 50px,
  55px: 55px,
  60px: 60px,
  65px: 65px,
  70px: 70px,
  75px: 75px,
  90px: 90px,
  100px: 100px,
  125px: 125px,
  150px: 150px,
  160px: 160px,
  175px: 175px,
  200px: 200px,
) !default;

$symbol-border-color: rgba(var(--#{$prefix}body-bg), 0.5);
$symbol-label-color: var(--#{$prefix}gray-800);
$symbol-label-bg: var(--#{$prefix}gray-100);

// Keenthemes bullet component
$bullet-bg-color: var(--#{$prefix}gray-400) !default;
$bullet-dot-size: 4px !default;
$bullet-bar-height: 4px !default;
$bullet-bar-width: 8px !default;
$bullet-bar-border-radius: 6px !default;
$bullet-line-height: 1px !default;
$bullet-line-width: 5px !default;

// Keenthemes scrolltop component
$scrolltop-z-index: 105 !default;
$scrolltop-opacity: 0 !default;
$scrolltop-opacity-on: 0.3 !default;
$scrolltop-opacity-hover: 1 !default;
$scrolltop-bottom: 40px !default;
$scrolltop-bottom-mobile: 30px !default;
$scrolltop-end: 20px !default;
$scrolltop-end-mobile: 15px !default;
$scrolltop-size: 36px !default;
$scrolltop-size-mobile: 30px !default;
$scrolltop-box-shadow: var(--#{$prefix}box-shadow) !default;
$scrolltop-bg-color: var(--#{$prefix}primary) !default;
$scrolltop-bg-color-hover: var(--#{$prefix}primary) !default;
$scrolltop-icon-color: var(--#{$prefix}primary-inverse) !default;
$scrolltop-icon-color-hover: var(--#{$prefix}primary-inverse) !default;

// Keenthemes sticky toolbar component
$sticky-toolbar-z-index: 95 !default;

// Keenthemes drawer component
$drawer-z-index: 110 !default;
$drawer-box-shadow: 0px 1px 9px -3px rgba(0, 0, 0, 0.05) !default;
$drawer-bg-color: $body-bg !default;
$drawer-transition-speed: 0.3s !default;
$drawer-overlay-bg-color: rgba($black, 0.2) !default;
$drawer-overlay-animation-speed: 0.3s !default;

// Keenthemes menu component
$menu-dropdown-box-shadow: $dropdown-box-shadow !default;
$menu-dropdown-z-index: 107 !default;
$menu-dropdown-bg-color: $dropdown-bg !default;
$menu-dropdown-border-radius: $dropdown-border-radius !default;
$menu-dropdown-animation: true !default;
$menu-dropdown-animation-speed: 0.3s !default;
$menu-dropdown-animation-move-offset: 0.75rem !default;
$menu-accordion-indention: 1rem !default;
$menu-accordion-arrow-transition: transform 0.3s ease !default;
$menu-item-padding-y: 0.15rem !default;
$menu-item-padding-x: 0 !default;
$menu-link-padding-y: 0.65rem !default;
$menu-link-padding-x: 1rem !default;
$menu-link-border-radius: $border-radius !default;
$menu-link-color-hover: $component-hover-color !default;
$menu-link-color-show: $component-hover-color !default;
$menu-link-color-here: $component-hover-color !default;
$menu-link-color-active: $component-hover-color !default;
$menu-link-bg-color-hover: $component-hover-bg !default;
$menu-link-bg-color-show: $component-hover-bg !default;
$menu-link-bg-color-here: $component-hover-bg !default;
$menu-link-bg-color-active: $component-hover-bg !default;
$menu-icon-size: 2rem !default;
$menu-icon-space: 0.5rem !default;
$menu-bullet-size: 1.25rem !default;
$menu-bullet-space: 0.5rem !default;
$menu-badge-space: 0.5rem !default;
$menu-arrow-size: 9px !default;
$menu-arrow-space: 5px !default;
$menu-heading-color: $text-muted !default;

// Keenthemes scrollbar component
$scrollbar-size: 5px !default;
$scrollbar-overlay-size: 19px !default;
$scrollbar-overlay-space: 7px !default;
$scrollbar-color: $gray-200 !default;
$scrollbar-hover-color: $gray-300 !default;

// Keenthemes overlay component
$overlay-bg: rgba($black, 0.05) !default;

// Keenthemes blockui component
$blockui-overlay-bg: rgba($black, 0.05) !default;
$blockui-message-bg: $tooltip-bg !default;
$blockui-message-box-shadow: $tooltip-box-shadow !default;

// Keenthemes rating component
$rating-color-default: $gray-400 !default;
$rating-color-active: #ffad0f !default;

// Keenthemes ribbon component
$ribbon-label-box-shadow: 0px -1px 5px 0px rgba($dark, 0.1) !default;
$ribbon-label-bg: $primary !default;
$ribbon-label-border-color: darken($primary, 20%) !default;
$ribbon-clip-bg: $dark !default;

// Keenthemes fixed component
$fixed-z-index: 101 !default;

// Engage panel
$engage-btn-bg: $body-bg;
$engage-btn-box-shadow: 0px 0px 22px #e0e0e0;
$engage-btn-border-color: #e8e8e8;
$engage-btn-color: $gray-800;
$engage-btn-icon-color: $gray-600;
$engage-btn-color-active: $gray-800;
$engage-z-index: 5;

// Social Network Colors Used With Boostrap Buttons(see: https://brandcolors.net)
$social-colors: (
  facebook: (
    base: #3b5998,
    inverse: #ffffff,
    light: rgba(#3b5998, 0.1),
    active: darken(#3b5998, 7.5%),
  ),
  google: (
    base: #dd4b39,
    inverse: #ffffff,
    light: rgba(#dd4b39, 0.1),
    active: darken(#dd4b39, 7.5%),
  ),
  twitter: (
    base: #1da1f2,
    inverse: #ffffff,
    light: rgba(#1da1f2, 0.1),
    active: darken(#1da1f2, 7.5%),
  ),
  instagram: (
    base: #e1306c,
    inverse: #ffffff,
    light: rgba(#e1306c, 0.1),
    active: darken(#e1306c, 7.5%),
  ),
  youtube: (
    base: #ff0000,
    inverse: #ffffff,
    light: rgba(#ff0000, 0.1),
    active: darken(#ff0000, 7.5%),
  ),
  linkedin: (
    base: #0077b5,
    inverse: #ffffff,
    light: rgba(#0077b5, 0.1),
    active: darken(#0077b5, 7.5%),
  ),
) !default;

//
// Bootstrap & Custom Variables
// Safely override any variable in _variables.custom.scss
//

$gray-100-dark: #1b1b29 !default;
$gray-200-dark: #2b2b40 !default;
$gray-300-dark: #323248 !default;
$gray-400-dark: #474761 !default;
$gray-500-dark: #565674 !default;
$gray-600-dark: #6d6d80 !default;
$gray-700-dark: #92929f !default;
$gray-800-dark: #cdcdde !default;
$gray-900-dark: #ffffff !default;

$grays-dark: (
  "100": $gray-100-dark,
  "200": $gray-200-dark,
  "300": $gray-300-dark,
  "400": $gray-400-dark,
  "500": $gray-500-dark,
  "600": $gray-600-dark,
  "700": $gray-700-dark,
  "800": $gray-800-dark,
  "900": $gray-900-dark,
) !default;

// Bootstrap muted color
$text-muted-dark: $gray-500-dark !default;

// Bootstrap contextual colors
// Primary colors
$primary-light-dark: #212e48 !default;

// Secondary colors
$secondary-dark: $gray-300-dark !default;
$secondary-active-dark: $gray-400-dark !default;
$secondary-light-dark: $gray-100-dark !default;
$secondary-inverse-dark: $gray-700-dark !default;

// Light colors
$light-dark: $gray-200-dark !default;
$light-active-dark: $gray-300-dark !default;
$light-inverse-dark: $gray-600-dark !default;

// Success colors
$success-light-dark: #1c3833 !default;

// Info colors
$info-light-dark: #2f264f !default;

// Warning colors
$warning-light-dark: #392f28 !default;

// Danger colors
$danger-light-dark: #3a2434 !default;

// Dark colors
$dark-dark: $gray-900-dark !default;
$dark-active-dark: lighten($gray-900-dark, 3%) !default;
$dark-light-dark: $gray-200-dark !default;
$dark-inverse-dark: $gray-100-dark !default;

$theme-colors-dark: (
  "white": $white,
  // custom color type
  "light": $light-dark,
  "primary": $primary,
  "success": $success,
  "info": $info,
  "warning": $warning,
  "danger": $danger,
  "dark": $dark-dark,
  "secondary": $secondary-dark,
) !default;

$theme-active-colors-dark: (
  "primary": $primary-active,
  "secondary": $secondary-active-dark,
  "light": $light-active-dark,
  "success": $success-active,
  "info": $info-active,
  "warning": $warning-active,
  "danger": $danger-active,
  "dark": $dark-active-dark,
) !default;

$theme-inverse-colors-dark: (
  "primary": $primary-inverse,
  "secondary": $secondary-inverse-dark,
  "light": $light-inverse,
  "success": $success-inverse,
  "info": $info-inverse,
  "warning": $warning-inverse,
  "danger": $danger-inverse,
  "dark": $dark-inverse-dark,
) !default;

$theme-light-colors-dark: (
  "primary": $primary-light-dark,
  "success": $success-light-dark,
  "info": $info-light-dark,
  "warning": $warning-light-dark,
  "danger": $danger-light-dark,
  "dark": $dark-light-dark,
  "secondary": $secondary-light-dark,
) !default;

$theme-text-colors-dark: (
  "white": $white,
  "primary": $primary,
  "secondary": $secondary-dark,
  "light": $light-dark,
  "success": $success,
  "info": $info,
  "warning": $warning,
  "danger": $danger,
  "dark": $dark-dark,
  "muted": $text-muted-dark,
  "gray-100": $gray-100-dark,
  "gray-200": $gray-200-dark,
  "gray-300": $gray-300-dark,
  "gray-400": $gray-400-dark,
  "gray-500": $gray-500-dark,
  "gray-600": $gray-600-dark,
  "gray-700": $gray-700-dark,
  "gray-800": $gray-800-dark,
  "gray-900": $gray-900-dark,
) !default;

// Body
//
// Settings for the `<body>` element.
$body-bg-dark: #1e1e2d !default;
$body-bg-rgb-dark: to-rgb($body-bg-dark) !default;
$body-color-dark: $gray-900-dark !default;

// Links
//
// Style anchor elements.
$link-color-dark: $primary !default;

// Components
//
// Define common padding and border radius sizes and more.
$border-color-dark: $gray-200-dark !default;
$border-dashed-color-dark: $gray-300-dark !default;

// Keenthemes hover states
$component-hover-color-dark: $primary !default;
$component-hover-bg-dark: $gray-100-dark !default;

// Keenthemes active states
$component-active-color-dark: $primary-inverse !default;
$component-active-bg-dark: $primary !default;

// Keenthemes checked states
$component-checked-color-dark: $primary-inverse !default;
$component-checked-bg-dark: $primary !default;

$headings-color-dark: $gray-900-dark !default;
$blockquote-footer-color-dark: $gray-600-dark !default;

// Box shadow
$box-shadow-xs-dark: 0 0.1rem 0.75rem 0.25rem rgba($black, 0.05) !default;
$box-shadow-sm-dark: 0 0.1rem 1rem 0.25rem rgba($black, 0.05) !default;
$box-shadow-dark: 0 0.5rem 1.5rem 0.5rem rgba($black, 0.075) !default;
$box-shadow-lg-dark: 0 1rem 2rem 1rem rgba($black, 0.1) !default;
$box-shadow-inset-dark: inset 0 1px 2px rgba($black, 0.075) !default;

// Card
$card-box-shadow-dark: null !default;

// Tables
$table-striped-bg-dark: rgba($gray-100-dark, 0.75) !default;
$table-loading-message-box-shadow-dark: 0px 0px 30px rgba(0, 0, 0, 0.3) !default;

// Forms
$form-select-indicator-color-dark: $gray-600-dark !default;
$form-select-indicator-dark: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'><path fill='none' stroke='#{$form-select-indicator-color-dark}' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m2 5 6 6 6-6'/></svg>") !default;
$form-switch-color-dark: rgba($white, 0.25) !default;
$form-switch-color-solid-dark: $gray-500-dark !default;
$form-switch-bg-image-dark: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'><circle r='3' fill='#{$form-switch-color-dark}'/></svg>") !default;
$form-switch-bg-image-solid-dark: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'><circle r='3' fill='#{$form-switch-color-solid-dark}'/></svg>") !default;

// Accordion
$accordion-icon-color-dark: $body-color-dark !default;
$accordion-icon-active-color-dark: $primary !default;
$accordion-button-icon-dark: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='#{$accordion-icon-color-dark}'><path fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/></svg>") !default;
$accordion-button-active-icon-dark: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='#{$accordion-icon-active-color-dark}'><path fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/></svg>") !default;

// Dropdowns
$dropdown-bg-dark: $body-bg-dark !default;
$dropdown-box-shadow-dark: 0px 0px 30px rgba(0, 0, 0, 0.3) !default;

// Popover
$popover-bg-dark: $gray-200-dark !default;
$popover-border-color-dark: $gray-200-dark !default;
$popover-box-shadow-dark: $dropdown-box-shadow-dark !default;
$popover-header-border-color-dark: $gray-300-dark !default;

// Toasts
$toast-background-color-dark: $gray-200-dark !default;
$toast-header-background-color-dark: $gray-200-dark !default;
$toast-header-border-color-dark: $gray-300-dark !default;

// Tooltip
$tooltip-bg-dark: $gray-200-dark !default;
$tooltip-box-shadow-dark: 0px 0px 30px rgba(0, 0, 0, 0.15) !default;

// Code
$code-bg-dark: $gray-200-dark !default;
$code-color-dark: #b93993 !default;
$code-box-shadow-dark: 0px 3px 9px rgba(0, 0, 0, 0.08) !default;

// Symbol
$symbol-border-color-dark: rgba($body-bg, 0.5);
$symbol-label-color-dark: $gray-800-dark;
$symbol-label-bg-dark: $gray-100-dark;

// Keenthemes bullet component
$bullet-bg-color-dark: $gray-400-dark !default;

// Keenthemes scrolltop component
$scrolltop-opacity-dark: 0 !default;
$scrolltop-opacity-on-dark: 0.3 !default;
$scrolltop-opacity-hover-dark: 1 !default;
$scrolltop-box-shadow-dark: $box-shadow !default;
$scrolltop-bg-color-dark: $primary !default;
$scrolltop-bg-color-hover-dark: $primary !default;
$scrolltop-icon-color-dark: $primary-inverse !default;
$scrolltop-icon-color-hover-dark: $primary-inverse !default;

// Keenthemes drawer component
$drawer-box-shadow-dark: 0px 0px 30px rgba(0, 0, 0, 0.1) !default;
$drawer-bg-color-dark: $body-bg-dark !default;
$drawer-overlay-bg-color-dark: rgba($black, 0.4) !default;

// Keenthemes menu component
$menu-dropdown-box-shadow-dark: $dropdown-box-shadow-dark !default;
$menu-dropdown-bg-color-dark: $dropdown-bg-dark !default;
$menu-link-color-hover-dark: $component-hover-color-dark !default;
$menu-link-color-show-dark: $component-hover-color-dark !default;
$menu-link-color-here-dark: $component-hover-color-dark !default;
$menu-link-color-active-dark: $component-hover-color-dark !default;
$menu-link-bg-color-hover-dark: $component-hover-bg-dark !default;
$menu-link-bg-color-show-dark: $component-hover-bg-dark !default;
$menu-link-bg-color-here-dark: $component-hover-bg-dark !default;
$menu-link-bg-color-active-dark: $component-hover-bg-dark !default;
$menu-heading-color-dark: $text-muted-dark !default;

// Keenthemes scrollbar component
$scrollbar-color-dark: $gray-200-dark !default;
$scrollbar-hover-color-dark: $gray-300-dark !default;

// Keenthemes overlay component
$overlay-bg-dark: rgba($white, 0.05) !default;

// Keenthemes blockui component
$blockui-overlay-bg-dark: rgba($white, 0.05) !default;
$blockui-message-bg-dark: $tooltip-bg-dark !default;
$blockui-message-box-shadow-dark: $tooltip-box-shadow-dark !default;

// Keenthemes rating component
$rating-color-default-dark: $gray-400-dark !default;
$rating-color-active-dark: #ffad0f !default;

// Keenthemes ribbon component
$ribbon-label-box-shadow-dark: 0px -1px 5px 0px rgba($white, 0.1) !default;
$ribbon-label-bg-dark: $primary !default;
$ribbon-label-border-color-dark: darken($primary, 20%) !default;
$ribbon-clip-bg-dark: $light !default;

// Engage panel
$engage-btn-bg-dark: $gray-200-dark;
$engage-btn-box-shadow-dark: 0px 0px 30px rgba(0, 0, 0, 0.3);
$engage-btn-border-color-dark: $border-color-dark;
$engage-btn-color-dark: $gray-800-dark;
$engage-btn-icon-color-dark: $gray-600-dark;
$engage-btn-color-active-dark: $gray-800-dark;

// Bootstrap initializaton

// Bootstrap functions
//
// Utility mixins and functions for evaluating source code across our variables, maps, and mixins.

// Ascending
// Used to evaluate Sass maps like our grid breakpoints.
@mixin _assert-ascending($map, $map-name) {
  $prev-key: null;
  $prev-num: null;
  @each $key, $num in $map {
    @if $prev-num == null or unit($num) == "%" or unit($prev-num) == "%" {
      // Do nothing
    } @else if not comparable($prev-num, $num) {
      @warn "Potentially invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} whose unit makes it incomparable to #{$prev-num}, the value of the previous key '#{$prev-key}' !";
    } @else if $prev-num >= $num {
      @warn "Invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} which isn't greater than #{$prev-num}, the value of the previous key '#{$prev-key}' !";
    }
    $prev-key: $key;
    $prev-num: $num;
  }
}

// Starts at zero
// Used to ensure the min-width of the lowest breakpoint starts at 0.
@mixin _assert-starts-at-zero($map, $map-name: "$grid-breakpoints") {
  @if length($map) > 0 {
    $values: map-values($map);
    $first-value: nth($values, 1);
    @if $first-value != 0 {
      @warn "First breakpoint in #{$map-name} must start at 0, but starts at #{$first-value}.";
    }
  }
}

// Colors
@function to-rgb($value) {
  @return red($value), green($value), blue($value);
}

// stylelint-disable scss/dollar-variable-pattern
@function rgba-css-var($identifier, $target) {
  @if $identifier == "body" and $target == "bg" {
    @return rgba(
      var(--#{$prefix}#{$identifier}-bg-rgb),
      var(--#{$prefix}#{$target}-opacity)
    );
  }
  @if $identifier == "body" and $target == "text" {
    @return rgba(
      var(--#{$prefix}#{$identifier}-color-rgb),
      var(--#{$prefix}#{$target}-opacity)
    );
  } @else {
    @return rgba(
      var(--#{$prefix}#{$identifier}-rgb),
      var(--#{$prefix}#{$target}-opacity)
    );
  }
}

@function map-loop($map, $func, $args...) {
  $_map: ();

  @each $key, $value in $map {
    // allow to pass the $key and $value of the map as an function argument
    $_args: ();
    @each $arg in $args {
      $_args: append(
        $_args,
        if($arg == "$key", $key, if($arg == "$value", $value, $arg))
      );
    }

    $_map: map-merge(
      $_map,
      (
        $key: call(get-function($func), $_args...),
      )
    );
  }

  @return $_map;
}
// stylelint-enable scss/dollar-variable-pattern

@function varify($list) {
  $result: null;
  @each $entry in $list {
    $result: append($result, var(--#{$prefix}#{$entry}), space);
  }
  @return $result;
}

// Internal Bootstrap function to turn maps into its negative variant.
// It prefixes the keys with `n` and makes the value negative.
@function negativify-map($map) {
  $result: ();
  @each $key, $value in $map {
    @if $key != 0 {
      $result: map-merge($result, ("n" + $key: (-$value)));
    }
  }
  @return $result;
}

// Get multiple keys from a sass map
@function map-get-multiple($map, $values) {
  $result: ();
  @each $key, $value in $map {
    @if (index($values, $key) != null) {
      $result: map-merge(
        $result,
        (
          $key: $value,
        )
      );
    }
  }
  @return $result;
}

// Merge multiple maps
@function map-merge-multiple($maps...) {
  $merged-maps: ();

  @each $map in $maps {
    $merged-maps: map-merge($merged-maps, $map);
  }
  @return $merged-maps;
}

// Replace `$search` with `$replace` in `$string`
// Used on our SVG icon backgrounds for custom forms.
//
// @author Kitty Giraudel
// @param {String} $string - Initial string
// @param {String} $search - Substring to replace
// @param {String} $replace ('') - New value
// @return {String} - Updated string
@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace +
      str-replace(
        str-slice($string, $index + str-length($search)),
        $search,
        $replace
      );
  }

  @return $string;
}

// See https://codepen.io/kevinweber/pen/dXWoRw
//
// Requires the use of quotes around data URIs.

@function escape-svg($string) {
  @if str-index($string, "data:image/svg+xml") {
    @each $char, $encoded in $escaped-characters {
      // Do not escape the url brackets
      @if str-index($string, "url(") == 1 {
        $string: url("#{str-replace(str-slice($string, 6, -3), $char, $encoded)}");
      } @else {
        $string: str-replace($string, $char, $encoded);
      }
    }
  }

  @return $string;
}

// Color contrast
// See https://github.com/twbs/bootstrap/pull/30168

// A list of pre-calculated numbers of pow(divide((divide($value, 255) + .055), 1.055), 2.4). (from 0 to 255)
// stylelint-disable-next-line scss/dollar-variable-default, scss/dollar-variable-pattern
$_luminance-list: 0.0008 0.001 0.0011 0.0013 0.0015 0.0017 0.002 0.0022 0.0025
  0.0027 0.003 0.0033 0.0037 0.004 0.0044 0.0048 0.0052 0.0056 0.006 0.0065
  0.007 0.0075 0.008 0.0086 0.0091 0.0097 0.0103 0.011 0.0116 0.0123 0.013
  0.0137 0.0144 0.0152 0.016 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222
  0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343
  0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497
  0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.063 0.0648 0.0666 0.0685
  0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0887 0.0908
  0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.107 0.1095 0.1119 0.1144 0.117
  0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.147
  0.15 0.1529 0.1559 0.159 0.162 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812
  0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195
  0.2232 0.227 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2623
  0.2664 0.2705 0.2747 0.2789 0.2831 0.2874 0.2918 0.2961 0.3005 0.305 0.3095
  0.314 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613
  0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3968 0.402 0.4072 0.4125 0.4179
  0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793
  0.4851 0.491 0.4969 0.5029 0.5089 0.5149 0.521 0.5271 0.5333 0.5395 0.5457
  0.552 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172
  0.624 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939
  0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758
  0.7835 0.7913 0.7991 0.807 0.8148 0.8228 0.8308 0.8388 0.8469 0.855 0.8632
  0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.956
  0.9647 0.9734 0.9823 0.9911 1;

@function color-contrast(
  $background,
  $color-contrast-dark: $color-contrast-dark,
  $color-contrast-light: $color-contrast-light,
  $min-contrast-ratio: $min-contrast-ratio
) {
  $foregrounds: $color-contrast-light, $color-contrast-dark, $white, $black;
  $max-ratio: 0;
  $max-ratio-color: null;

  @each $color in $foregrounds {
    $contrast-ratio: contrast-ratio($background, $color);
    @if $contrast-ratio > $min-contrast-ratio {
      @return $color;
    } @else if $contrast-ratio > $max-ratio {
      $max-ratio: $contrast-ratio;
      $max-ratio-color: $color;
    }
  }

  @warn "Found no color leading to #{$min-contrast-ratio}:1 contrast ratio against #{$background}...";

  @return $max-ratio-color;
}

@function contrast-ratio($background, $foreground: $color-contrast-light) {
  $l1: luminance($background);
  $l2: luminance(opaque($background, $foreground));

  @return if(
    $l1 > $l2,
    divide($l1 + 0.05, $l2 + 0.05),
    divide($l2 + 0.05, $l1 + 0.05)
  );
}

// Return WCAG2.1 relative luminance
// See https://www.w3.org/TR/WCAG/#dfn-relative-luminance
// See https://www.w3.org/TR/WCAG/#dfn-contrast-ratio
@function luminance($color) {
  $rgb: (
    "r": red($color),
    "g": green($color),
    "b": blue($color),
  );

  @each $name, $value in $rgb {
    $value: if(
      divide($value, 255) < 0.04045,
      divide(divide($value, 255), 12.92),
      nth($_luminance-list, $value + 1)
    );
    $rgb: map-merge(
      $rgb,
      (
        $name: $value,
      )
    );
  }

  @return (map-get($rgb, "r") * 0.2126) + (map-get($rgb, "g") * 0.7152) +
    (map-get($rgb, "b") * 0.0722);
}

// Return opaque color
// opaque(#fff, rgba(0, 0, 0, .5)) => #808080
@function opaque($background, $foreground) {
  @return mix(rgba($foreground, 1), $background, opacity($foreground) * 100%);
}

// scss-docs-start color-functions
// Tint a color: mix a color with white
@function tint-color($color, $weight) {
  @return mix(white, $color, $weight);
}

// Shade a color: mix a color with black
@function shade-color($color, $weight) {
  @return mix(black, $color, $weight);
}

// Shade the color if the weight is positive, else tint it
@function shift-color($color, $weight) {
  @return if(
    $weight > 0,
    shade-color($color, $weight),
    tint-color($color, -$weight)
  );
}
// scss-docs-end color-functions

// Return valid calc
@function add($value1, $value2, $return-calc: true) {
  @if $value1 == null {
    @return $value2;
  }

  @if $value2 == null {
    @return $value1;
  }

  @if type-of($value1) ==
    number and
    type-of($value2) ==
    number and
    comparable($value1, $value2)
  {
    @return $value1 + $value2;
  }

  @return if(
    $return-calc == true,
    calc(#{$value1} + #{$value2}),
    $value1 + unquote(" + ") + $value2
  );
}

@function subtract($value1, $value2, $return-calc: true) {
  @if $value1 == null and $value2 == null {
    @return null;
  }

  @if $value1 == null {
    @return -$value2;
  }

  @if $value2 == null {
    @return $value1;
  }

  @if type-of($value1) ==
    number and
    type-of($value2) ==
    number and
    comparable($value1, $value2)
  {
    @return $value1 - $value2;
  }

  @if type-of($value2) != number {
    $value2: unquote("(") + $value2 + unquote(")");
  }

  @return if(
    $return-calc == true,
    calc(#{$value1} - #{$value2}),
    $value1 + unquote(" - ") + $value2
  );
}

@function divide($dividend, $divisor, $precision: 10) {
  $sign: if(
    $dividend > 0 and $divisor > 0 or $dividend < 0 and $divisor < 0,
    1,
    -1
  );
  $dividend: abs($dividend);
  $divisor: abs($divisor);
  @if $dividend == 0 {
    @return 0;
  }
  @if $divisor == 0 {
    @error "Cannot divide by 0";
  }
  $remainder: $dividend;
  $result: 0;
  $factor: 10;
  @while ($remainder > 0 and $precision >= 0) {
    $quotient: 0;
    @while ($remainder >= $divisor) {
      $remainder: $remainder - $divisor;
      $quotient: $quotient + 1;
    }
    $result: $result * 10 + $quotient;
    $factor: $factor * 0.1;
    $remainder: $remainder * 10;
    $precision: $precision - 1;
    @if ($precision < 0 and $remainder >= $divisor * 5) {
      $result: $result + 1;
    }
  }
  $result: $result * $factor * $sign;
  $dividend-unit: unit($dividend);
  $divisor-unit: unit($divisor);
  $unit-map: (
    "px": 1px,
    "rem": 1rem,
    "em": 1em,
    "%": 1%,
  );
  @if (
    $dividend-unit != $divisor-unit and map-has-key($unit-map, $dividend-unit)
  ) {
    $result: $result * map-get($unit-map, $dividend-unit);
  }
  @return $result;
}
// Variables
//
// Variables should follow the `$component-state-property-size` formula for
// consistent naming. Ex: $nav-link-disabled-color and $modal-content-box-shadow-xs.

// Color system

// scss-docs-start gray-color-variables
$white: #fff !default;
$gray-100: #f8f9fa !default;
$gray-200: #e9ecef !default;
$gray-300: #dee2e6 !default;
$gray-400: #ced4da !default;
$gray-500: #adb5bd !default;
$gray-600: #6c757d !default;
$gray-700: #495057 !default;
$gray-800: #343a40 !default;
$gray-900: #212529 !default;
$black: #000 !default;
// scss-docs-end gray-color-variables

// fusv-disable
// scss-docs-start gray-colors-map
$grays: (
  "100": $gray-100,
  "200": $gray-200,
  "300": $gray-300,
  "400": $gray-400,
  "500": $gray-500,
  "600": $gray-600,
  "700": $gray-700,
  "800": $gray-800,
  "900": $gray-900,
) !default;
// scss-docs-end gray-colors-map
// fusv-enable

// scss-docs-start color-variables
$blue: #0d6efd !default;
$indigo: #6610f2 !default;
$purple: #6f42c1 !default;
$pink: #d63384 !default;
$red: #dc3545 !default;
$orange: #fd7e14 !default;
$yellow: #ffc107 !default;
$green: #198754 !default;
$teal: #20c997 !default;
$cyan: #0dcaf0 !default;
// scss-docs-end color-variables

// scss-docs-start colors-map
$colors: (
  "blue": $blue,
  "indigo": $indigo,
  "purple": $purple,
  "pink": $pink,
  "red": $red,
  "orange": $orange,
  "yellow": $yellow,
  "green": $green,
  "teal": $teal,
  "cyan": $cyan,
  "black": $black,
  "white": $white,
  "gray": $gray-600,
  "gray-dark": $gray-800,
) !default;
// scss-docs-end colors-map

// The contrast ratio to reach against white, to determine if color changes from "light" to "dark". Acceptable values for WCAG 2.0 are 3, 4.5 and 7.
// See https://www.w3.org/TR/WCAG20/#visual-audio-contrast-contrast
$min-contrast-ratio: 4.5 !default;

// Customize the light and dark text colors for use in our color contrast function.
$color-contrast-dark: $black !default;
$color-contrast-light: $white !default;

// fusv-disable
$blue-100: tint-color($blue, 80%) !default;
$blue-200: tint-color($blue, 60%) !default;
$blue-300: tint-color($blue, 40%) !default;
$blue-400: tint-color($blue, 20%) !default;
$blue-500: $blue !default;
$blue-600: shade-color($blue, 20%) !default;
$blue-700: shade-color($blue, 40%) !default;
$blue-800: shade-color($blue, 60%) !default;
$blue-900: shade-color($blue, 80%) !default;

$indigo-100: tint-color($indigo, 80%) !default;
$indigo-200: tint-color($indigo, 60%) !default;
$indigo-300: tint-color($indigo, 40%) !default;
$indigo-400: tint-color($indigo, 20%) !default;
$indigo-500: $indigo !default;
$indigo-600: shade-color($indigo, 20%) !default;
$indigo-700: shade-color($indigo, 40%) !default;
$indigo-800: shade-color($indigo, 60%) !default;
$indigo-900: shade-color($indigo, 80%) !default;

$purple-100: tint-color($purple, 80%) !default;
$purple-200: tint-color($purple, 60%) !default;
$purple-300: tint-color($purple, 40%) !default;
$purple-400: tint-color($purple, 20%) !default;
$purple-500: $purple !default;
$purple-600: shade-color($purple, 20%) !default;
$purple-700: shade-color($purple, 40%) !default;
$purple-800: shade-color($purple, 60%) !default;
$purple-900: shade-color($purple, 80%) !default;

$pink-100: tint-color($pink, 80%) !default;
$pink-200: tint-color($pink, 60%) !default;
$pink-300: tint-color($pink, 40%) !default;
$pink-400: tint-color($pink, 20%) !default;
$pink-500: $pink !default;
$pink-600: shade-color($pink, 20%) !default;
$pink-700: shade-color($pink, 40%) !default;
$pink-800: shade-color($pink, 60%) !default;
$pink-900: shade-color($pink, 80%) !default;

$red-100: tint-color($red, 80%) !default;
$red-200: tint-color($red, 60%) !default;
$red-300: tint-color($red, 40%) !default;
$red-400: tint-color($red, 20%) !default;
$red-500: $red !default;
$red-600: shade-color($red, 20%) !default;
$red-700: shade-color($red, 40%) !default;
$red-800: shade-color($red, 60%) !default;
$red-900: shade-color($red, 80%) !default;

$orange-100: tint-color($orange, 80%) !default;
$orange-200: tint-color($orange, 60%) !default;
$orange-300: tint-color($orange, 40%) !default;
$orange-400: tint-color($orange, 20%) !default;
$orange-500: $orange !default;
$orange-600: shade-color($orange, 20%) !default;
$orange-700: shade-color($orange, 40%) !default;
$orange-800: shade-color($orange, 60%) !default;
$orange-900: shade-color($orange, 80%) !default;

$yellow-100: tint-color($yellow, 80%) !default;
$yellow-200: tint-color($yellow, 60%) !default;
$yellow-300: tint-color($yellow, 40%) !default;
$yellow-400: tint-color($yellow, 20%) !default;
$yellow-500: $yellow !default;
$yellow-600: shade-color($yellow, 20%) !default;
$yellow-700: shade-color($yellow, 40%) !default;
$yellow-800: shade-color($yellow, 60%) !default;
$yellow-900: shade-color($yellow, 80%) !default;

$green-100: tint-color($green, 80%) !default;
$green-200: tint-color($green, 60%) !default;
$green-300: tint-color($green, 40%) !default;
$green-400: tint-color($green, 20%) !default;
$green-500: $green !default;
$green-600: shade-color($green, 20%) !default;
$green-700: shade-color($green, 40%) !default;
$green-800: shade-color($green, 60%) !default;
$green-900: shade-color($green, 80%) !default;

$teal-100: tint-color($teal, 80%) !default;
$teal-200: tint-color($teal, 60%) !default;
$teal-300: tint-color($teal, 40%) !default;
$teal-400: tint-color($teal, 20%) !default;
$teal-500: $teal !default;
$teal-600: shade-color($teal, 20%) !default;
$teal-700: shade-color($teal, 40%) !default;
$teal-800: shade-color($teal, 60%) !default;
$teal-900: shade-color($teal, 80%) !default;

$cyan-100: tint-color($cyan, 80%) !default;
$cyan-200: tint-color($cyan, 60%) !default;
$cyan-300: tint-color($cyan, 40%) !default;
$cyan-400: tint-color($cyan, 20%) !default;
$cyan-500: $cyan !default;
$cyan-600: shade-color($cyan, 20%) !default;
$cyan-700: shade-color($cyan, 40%) !default;
$cyan-800: shade-color($cyan, 60%) !default;
$cyan-900: shade-color($cyan, 80%) !default;

$blues: (
  "blue-100": $blue-100,
  "blue-200": $blue-200,
  "blue-300": $blue-300,
  "blue-400": $blue-400,
  "blue-500": $blue-500,
  "blue-600": $blue-600,
  "blue-700": $blue-700,
  "blue-800": $blue-800,
  "blue-900": $blue-900,
) !default;

$indigos: (
  "indigo-100": $indigo-100,
  "indigo-200": $indigo-200,
  "indigo-300": $indigo-300,
  "indigo-400": $indigo-400,
  "indigo-500": $indigo-500,
  "indigo-600": $indigo-600,
  "indigo-700": $indigo-700,
  "indigo-800": $indigo-800,
  "indigo-900": $indigo-900,
) !default;

$purples: (
  "purple-100": $purple-100,
  "purple-200": $purple-200,
  "purple-300": $purple-300,
  "purple-400": $purple-400,
  "purple-500": $purple-500,
  "purple-600": $purple-600,
  "purple-700": $purple-700,
  "purple-800": $purple-800,
  "purple-900": $purple-900,
) !default;

$pinks: (
  "pink-100": $pink-100,
  "pink-200": $pink-200,
  "pink-300": $pink-300,
  "pink-400": $pink-400,
  "pink-500": $pink-500,
  "pink-600": $pink-600,
  "pink-700": $pink-700,
  "pink-800": $pink-800,
  "pink-900": $pink-900,
) !default;

$reds: (
  "red-100": $red-100,
  "red-200": $red-200,
  "red-300": $red-300,
  "red-400": $red-400,
  "red-500": $red-500,
  "red-600": $red-600,
  "red-700": $red-700,
  "red-800": $red-800,
  "red-900": $red-900,
) !default;

$oranges: (
  "orange-100": $orange-100,
  "orange-200": $orange-200,
  "orange-300": $orange-300,
  "orange-400": $orange-400,
  "orange-500": $orange-500,
  "orange-600": $orange-600,
  "orange-700": $orange-700,
  "orange-800": $orange-800,
  "orange-900": $orange-900,
) !default;

$yellows: (
  "yellow-100": $yellow-100,
  "yellow-200": $yellow-200,
  "yellow-300": $yellow-300,
  "yellow-400": $yellow-400,
  "yellow-500": $yellow-500,
  "yellow-600": $yellow-600,
  "yellow-700": $yellow-700,
  "yellow-800": $yellow-800,
  "yellow-900": $yellow-900,
) !default;

$greens: (
  "green-100": $green-100,
  "green-200": $green-200,
  "green-300": $green-300,
  "green-400": $green-400,
  "green-500": $green-500,
  "green-600": $green-600,
  "green-700": $green-700,
  "green-800": $green-800,
  "green-900": $green-900,
) !default;

$teals: (
  "teal-100": $teal-100,
  "teal-200": $teal-200,
  "teal-300": $teal-300,
  "teal-400": $teal-400,
  "teal-500": $teal-500,
  "teal-600": $teal-600,
  "teal-700": $teal-700,
  "teal-800": $teal-800,
  "teal-900": $teal-900,
) !default;

$cyans: (
  "cyan-100": $cyan-100,
  "cyan-200": $cyan-200,
  "cyan-300": $cyan-300,
  "cyan-400": $cyan-400,
  "cyan-500": $cyan-500,
  "cyan-600": $cyan-600,
  "cyan-700": $cyan-700,
  "cyan-800": $cyan-800,
  "cyan-900": $cyan-900,
) !default;
// fusv-enable

// scss-docs-start theme-color-variables
$primary: $blue !default;
$secondary: $gray-600 !default;
$success: $green !default;
$info: $cyan !default;
$warning: $yellow !default;
$danger: $red !default;
$light: $gray-100 !default;
$dark: $gray-900 !default;
// scss-docs-end theme-color-variables

// scss-docs-start theme-colors-map
$theme-colors: (
  "primary": $primary,
  "secondary": $secondary,
  "success": $success,
  "info": $info,
  "warning": $warning,
  "danger": $danger,
  "light": $light,
  "dark": $dark,
) !default;
// scss-docs-end theme-colors-map

// scss-docs-start theme-text-variables
$primary-text-emphasis: shade-color($primary, 60%) !default;
$secondary-text-emphasis: shade-color($secondary, 60%) !default;
$success-text-emphasis: shade-color($success, 60%) !default;
$info-text-emphasis: shade-color($info, 60%) !default;
$warning-text-emphasis: shade-color($warning, 60%) !default;
$danger-text-emphasis: shade-color($danger, 60%) !default;
$light-text-emphasis: $gray-700 !default;
$dark-text-emphasis: $gray-700 !default;
// scss-docs-end theme-text-variables

// scss-docs-start theme-bg-subtle-variables
$primary-bg-subtle: tint-color($primary, 80%) !default;
$secondary-bg-subtle: tint-color($secondary, 80%) !default;
$success-bg-subtle: tint-color($success, 80%) !default;
$info-bg-subtle: tint-color($info, 80%) !default;
$warning-bg-subtle: tint-color($warning, 80%) !default;
$danger-bg-subtle: tint-color($danger, 80%) !default;
$light-bg-subtle: mix($gray-100, $white) !default;
$dark-bg-subtle: $gray-400 !default;
// scss-docs-end theme-bg-subtle-variables

// scss-docs-start theme-border-subtle-variables
$primary-border-subtle: tint-color($primary, 60%) !default;
$secondary-border-subtle: tint-color($secondary, 60%) !default;
$success-border-subtle: tint-color($success, 60%) !default;
$info-border-subtle: tint-color($info, 60%) !default;
$warning-border-subtle: tint-color($warning, 60%) !default;
$danger-border-subtle: tint-color($danger, 60%) !default;
$light-border-subtle: $gray-200 !default;
$dark-border-subtle: $gray-500 !default;
// scss-docs-end theme-border-subtle-variables

// Characters which are escaped by the escape-svg function
$escaped-characters: (
  ("<", "%3c"),
  (">", "%3e"),
  ("#", "%23"),
  ("(", "%28"),
  (")", "%29")
) !default;

// Options
//
// Quickly modify global styling by enabling or disabling optional features.

$enable-caret: true !default;
$enable-rounded: true !default;
$enable-shadows: false !default;
$enable-gradients: false !default;
$enable-transitions: true !default;
$enable-reduced-motion: true !default;
$enable-smooth-scroll: true !default;
$enable-grid-classes: true !default;
$enable-container-classes: true !default;
$enable-cssgrid: false !default;
$enable-button-pointers: true !default;
$enable-rfs: true !default;
$enable-validation-icons: true !default;
$enable-negative-margins: false !default;
$enable-deprecation-messages: true !default;
$enable-important-utilities: true !default;

$enable-dark-mode: true !default;
$color-mode-type: data !default; // `data` or `media-query`

// Prefix for :root CSS variables

$variable-prefix: bs- !default; // Deprecated in v5.2.0 for the shorter `$prefix`
$prefix: $variable-prefix !default;

// Gradient
//
// The gradient which is added to components if `$enable-gradients` is `true`
// This gradient is also added to elements with `.bg-gradient`
// scss-docs-start variable-gradient
$gradient: linear-gradient(
  180deg,
  rgba($white, 0.15),
  rgba($white, 0)
) !default;
// scss-docs-end variable-gradient

// Spacing
//
// Control the default styling of most Bootstrap elements by modifying these
// variables. Mostly focused on spacing.
// You can add more entries to the $spacers map, should you need more variation.

// scss-docs-start spacer-variables-maps
$spacer: 1rem !default;
$spacers: (
  0: 0,
  1: $spacer * 0.25,
  2: $spacer * 0.5,
  3: $spacer,
  4: $spacer * 1.5,
  5: $spacer * 3,
) !default;
// scss-docs-end spacer-variables-maps

// Position
//
// Define the edge positioning anchors of the position utilities.

// scss-docs-start position-map
$position-values: (
  0: 0,
  50: 50%,
  100: 100%,
) !default;
// scss-docs-end position-map

// Body
//
// Settings for the `<body>` element.

$body-text-align: null !default;
$body-color: $gray-900 !default;
$body-bg: $white !default;

$body-secondary-color: rgba($body-color, 0.75) !default;
$body-secondary-bg: $gray-200 !default;

$body-tertiary-color: rgba($body-color, 0.5) !default;
$body-tertiary-bg: $gray-100 !default;

$body-emphasis-color: $black !default;

// Links
//
// Style anchor elements.

$link-color: $primary !default;
$link-decoration: underline !default;
$link-shade-percentage: 20% !default;
$link-hover-color: shift-color($link-color, $link-shade-percentage) !default;
$link-hover-decoration: null !default;

$stretched-link-pseudo-element: after !default;
$stretched-link-z-index: 1 !default;

// Icon links
// scss-docs-start icon-link-variables
$icon-link-gap: 0.375rem !default;
$icon-link-underline-offset: 0.25em !default;
$icon-link-icon-size: 1em !default;
$icon-link-icon-transition: 0.2s ease-in-out transform !default;
$icon-link-icon-transform: translate3d(0.25em, 0, 0) !default;
// scss-docs-end icon-link-variables

// Paragraphs
//
// Style p element.

$paragraph-margin-bottom: 1rem !default;

// Grid breakpoints
//
// Define the minimum dimensions at which your layout will change,
// adapting to different screen sizes, for use in media queries.

// scss-docs-start grid-breakpoints
$grid-breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1400px,
) !default;
// scss-docs-end grid-breakpoints

@include _assert-ascending($grid-breakpoints, "$grid-breakpoints");
@include _assert-starts-at-zero($grid-breakpoints, "$grid-breakpoints");

// Grid containers
//
// Define the maximum width of `.container` for different screen sizes.

// scss-docs-start container-max-widths
$container-max-widths: (
  sm: 540px,
  md: 720px,
  lg: 960px,
  xl: 1140px,
  xxl: 1320px,
) !default;
// scss-docs-end container-max-widths

@include _assert-ascending($container-max-widths, "$container-max-widths");

// Grid columns
//
// Set the number of columns and specify the width of the gutters.

$grid-columns: 12 !default;
$grid-gutter-width: 1.5rem !default;
$grid-row-columns: 6 !default;

// Container padding

$container-padding-x: $grid-gutter-width !default;

// Components
//
// Define common padding and border radius sizes and more.

// scss-docs-start border-variables
$border-width: 1px !default;
$border-widths: (
  1: 1px,
  2: 2px,
  3: 3px,
  4: 4px,
  5: 5px,
) !default;
$border-style: solid !default;
$border-color: $gray-300 !default;
$border-color-translucent: rgba($black, 0.175) !default;
// scss-docs-end border-variables

// scss-docs-start border-radius-variables
$border-radius: 0.375rem !default;
$border-radius-sm: 0.25rem !default;
$border-radius-lg: 0.5rem !default;
$border-radius-xl: 1rem !default;
$border-radius-xxl: 2rem !default;
$border-radius-pill: 50rem !default;
// scss-docs-end border-radius-variables
// fusv-disable
$border-radius-2xl: $border-radius-xxl !default; // Deprecated in v5.3.0
// fusv-enable

// scss-docs-start box-shadow-variables
$box-shadow: 0 0.5rem 1rem rgba($black, 0.15) !default;
$box-shadow-sm: 0 0.125rem 0.25rem rgba($black, 0.075) !default;
$box-shadow-lg: 0 1rem 3rem rgba($black, 0.175) !default;
$box-shadow-inset: inset 0 1px 2px rgba($black, 0.075) !default;
// scss-docs-end box-shadow-variables

$component-active-color: $white !default;
$component-active-bg: $primary !default;

// scss-docs-start focus-ring-variables
$focus-ring-width: 0.25rem !default;
$focus-ring-opacity: 0.25 !default;
$focus-ring-color: rgba($primary, $focus-ring-opacity) !default;
$focus-ring-blur: 0 !default;
$focus-ring-box-shadow: 0 0 $focus-ring-blur $focus-ring-width $focus-ring-color !default;
// scss-docs-end focus-ring-variables

// scss-docs-start caret-variables
$caret-width: 0.3em !default;
$caret-vertical-align: $caret-width * 0.85 !default;
$caret-spacing: $caret-width * 0.85 !default;
// scss-docs-end caret-variables

$transition-base: all 0.2s ease-in-out !default;
$transition-fade: opacity 0.15s linear !default;
// scss-docs-start collapse-transition
$transition-collapse: height 0.35s ease !default;
$transition-collapse-width: width 0.35s ease !default;
// scss-docs-end collapse-transition

// stylelint-disable function-disallowed-list
// scss-docs-start aspect-ratios
$aspect-ratios: (
  "1x1": 100%,
  "4x3": calc(3 / 4 * 100%),
  "16x9": calc(9 / 16 * 100%),
  "21x9": calc(9 / 21 * 100%),
) !default;
// scss-docs-end aspect-ratios
// stylelint-enable function-disallowed-list

// Typography
//
// Font, line-height, and color for body text, headings, and more.

// scss-docs-start font-variables
// stylelint-disable value-keyword-case
$font-family-sans-serif: system-ui, -apple-system, "Segoe UI", Roboto,
  "Helvetica Neue", "Noto Sans", "Liberation Sans", Arial, sans-serif,
  "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji" !default;
$font-family-monospace: SFMono-Regular, Menlo, Monaco, Consolas,
  "Liberation Mono", "Courier New", monospace !default;
// stylelint-enable value-keyword-case
$font-family-base: var(--#{$prefix}font-sans-serif) !default;
$font-family-code: var(--#{$prefix}font-monospace) !default;

// $font-size-root affects the value of `rem`, which is used for as well font sizes, paddings, and margins
// $font-size-base affects the font size of the body text
$font-size-root: null !default;
$font-size-base: 1rem !default; // Assumes the browser default, typically `16px`
$font-size-sm: $font-size-base * 0.875 !default;
$font-size-lg: $font-size-base * 1.25 !default;

$font-weight-lighter: lighter !default;
$font-weight-light: 300 !default;
$font-weight-normal: 400 !default;
$font-weight-medium: 500 !default;
$font-weight-semibold: 600 !default;
$font-weight-bold: 700 !default;
$font-weight-bolder: bolder !default;

$font-weight-base: $font-weight-normal !default;

$line-height-base: 1.5 !default;
$line-height-sm: 1.25 !default;
$line-height-lg: 2 !default;

$h1-font-size: $font-size-base * 2.5 !default;
$h2-font-size: $font-size-base * 2 !default;
$h3-font-size: $font-size-base * 1.75 !default;
$h4-font-size: $font-size-base * 1.5 !default;
$h5-font-size: $font-size-base * 1.25 !default;
$h6-font-size: $font-size-base !default;
// scss-docs-end font-variables

// scss-docs-start font-sizes
$font-sizes: (
  1: $h1-font-size,
  2: $h2-font-size,
  3: $h3-font-size,
  4: $h4-font-size,
  5: $h5-font-size,
  6: $h6-font-size,
) !default;
// scss-docs-end font-sizes

// scss-docs-start headings-variables
$headings-margin-bottom: $spacer * 0.5 !default;
$headings-font-family: null !default;
$headings-font-style: null !default;
$headings-font-weight: 500 !default;
$headings-line-height: 1.2 !default;
$headings-color: inherit !default;
// scss-docs-end headings-variables

// scss-docs-start display-headings
$display-font-sizes: (
  1: 5rem,
  2: 4.5rem,
  3: 4rem,
  4: 3.5rem,
  5: 3rem,
  6: 2.5rem,
) !default;

$display-font-family: null !default;
$display-font-style: null !default;
$display-font-weight: 300 !default;
$display-line-height: $headings-line-height !default;
// scss-docs-end display-headings

// scss-docs-start type-variables
$lead-font-size: $font-size-base * 1.25 !default;
$lead-font-weight: 300 !default;

$small-font-size: 0.875em !default;

$sub-sup-font-size: 0.75em !default;

// fusv-disable
$text-muted: var(--#{$prefix}secondary-color) !default; // Deprecated in 5.3.0
// fusv-enable

$initialism-font-size: $small-font-size !default;

$blockquote-margin-y: $spacer !default;
$blockquote-font-size: $font-size-base * 1.25 !default;
$blockquote-footer-color: $gray-600 !default;
$blockquote-footer-font-size: $small-font-size !default;

$hr-margin-y: $spacer !default;
$hr-color: inherit !default;

// fusv-disable
$hr-bg-color: null !default; // Deprecated in v5.2.0
$hr-height: null !default; // Deprecated in v5.2.0
// fusv-enable

$hr-border-color: null !default; // Allows for inherited colors
$hr-border-width: var(--#{$prefix}border-width) !default;
$hr-opacity: 0.25 !default;

$legend-margin-bottom: 0.5rem !default;
$legend-font-size: 1.5rem !default;
$legend-font-weight: null !default;

$dt-font-weight: $font-weight-bold !default;

$list-inline-padding: 0.5rem !default;

$mark-padding: 0.1875em !default;
$mark-bg: $yellow-100 !default;
// scss-docs-end type-variables

// Tables
//
// Customizes the `.table` component with basic values, each used across all table variations.

// scss-docs-start table-variables
$table-cell-padding-y: 0.5rem !default;
$table-cell-padding-x: 0.5rem !default;
$table-cell-padding-y-sm: 0.25rem !default;
$table-cell-padding-x-sm: 0.25rem !default;

$table-cell-vertical-align: top !default;

$table-color: var(--#{$prefix}body-color) !default;
$table-bg: var(--#{$prefix}body-bg) !default;
$table-accent-bg: transparent !default;

$table-th-font-weight: null !default;

$table-striped-color: $table-color !default;
$table-striped-bg-factor: 0.05 !default;
$table-striped-bg: rgba($black, $table-striped-bg-factor) !default;

$table-active-color: $table-color !default;
$table-active-bg-factor: 0.1 !default;
$table-active-bg: rgba($black, $table-active-bg-factor) !default;

$table-hover-color: $table-color !default;
$table-hover-bg-factor: 0.075 !default;
$table-hover-bg: rgba($black, $table-hover-bg-factor) !default;

$table-border-factor: 0.1 !default;
$table-border-width: var(--#{$prefix}border-width) !default;
$table-border-color: var(--#{$prefix}border-color) !default;

$table-striped-order: odd !default;
$table-striped-columns-order: even !default;

$table-group-separator-color: currentcolor !default;

$table-caption-color: var(--#{$prefix}secondary-color) !default;

$table-bg-scale: -80% !default;
// scss-docs-end table-variables

// scss-docs-start table-loop
$table-variants: (
  "primary": shift-color($primary, $table-bg-scale),
  "secondary": shift-color($secondary, $table-bg-scale),
  "success": shift-color($success, $table-bg-scale),
  "info": shift-color($info, $table-bg-scale),
  "warning": shift-color($warning, $table-bg-scale),
  "danger": shift-color($danger, $table-bg-scale),
  "light": $light,
  "dark": $dark,
) !default;
// scss-docs-end table-loop

// Buttons + Forms
//
// Shared variables that are reassigned to `$input-` and `$btn-` specific variables.

// scss-docs-start input-btn-variables
$input-btn-padding-y: 0.375rem !default;
$input-btn-padding-x: 0.75rem !default;
$input-btn-font-family: null !default;
$input-btn-font-size: $font-size-base !default;
$input-btn-line-height: $line-height-base !default;

$input-btn-focus-width: $focus-ring-width !default;
$input-btn-focus-color-opacity: $focus-ring-opacity !default;
$input-btn-focus-color: $focus-ring-color !default;
$input-btn-focus-blur: $focus-ring-blur !default;
$input-btn-focus-box-shadow: $focus-ring-box-shadow !default;

$input-btn-padding-y-sm: 0.25rem !default;
$input-btn-padding-x-sm: 0.5rem !default;
$input-btn-font-size-sm: $font-size-sm !default;

$input-btn-padding-y-lg: 0.5rem !default;
$input-btn-padding-x-lg: 1rem !default;
$input-btn-font-size-lg: $font-size-lg !default;

$input-btn-border-width: var(--#{$prefix}border-width) !default;
// scss-docs-end input-btn-variables

// Buttons
//
// For each of Bootstrap's buttons, define text, background, and border color.

// scss-docs-start btn-variables
$btn-color: var(--#{$prefix}body-color) !default;
$btn-padding-y: $input-btn-padding-y !default;
$btn-padding-x: $input-btn-padding-x !default;
$btn-font-family: $input-btn-font-family !default;
$btn-font-size: $input-btn-font-size !default;
$btn-line-height: $input-btn-line-height !default;
$btn-white-space: null !default; // Set to `nowrap` to prevent text wrapping

$btn-padding-y-sm: $input-btn-padding-y-sm !default;
$btn-padding-x-sm: $input-btn-padding-x-sm !default;
$btn-font-size-sm: $input-btn-font-size-sm !default;

$btn-padding-y-lg: $input-btn-padding-y-lg !default;
$btn-padding-x-lg: $input-btn-padding-x-lg !default;
$btn-font-size-lg: $input-btn-font-size-lg !default;

$btn-border-width: $input-btn-border-width !default;

$btn-font-weight: $font-weight-normal !default;
$btn-box-shadow: inset 0 1px 0 rgba($white, 0.15), 0 1px 1px rgba($black, 0.075) !default;
$btn-focus-width: $input-btn-focus-width !default;
$btn-focus-box-shadow: $input-btn-focus-box-shadow !default;
$btn-disabled-opacity: 0.65 !default;
$btn-active-box-shadow: inset 0 3px 5px rgba($black, 0.125) !default;

$btn-link-color: var(--#{$prefix}link-color) !default;
$btn-link-hover-color: var(--#{$prefix}link-hover-color) !default;
$btn-link-disabled-color: $gray-600 !default;

// Allows for customizing button radius independently from global border radius
$btn-border-radius: var(--#{$prefix}border-radius) !default;
$btn-border-radius-sm: var(--#{$prefix}border-radius-sm) !default;
$btn-border-radius-lg: var(--#{$prefix}border-radius-lg) !default;

$btn-transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out,
  border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out !default;

$btn-hover-bg-shade-amount: 15% !default;
$btn-hover-bg-tint-amount: 15% !default;
$btn-hover-border-shade-amount: 20% !default;
$btn-hover-border-tint-amount: 10% !default;
$btn-active-bg-shade-amount: 20% !default;
$btn-active-bg-tint-amount: 20% !default;
$btn-active-border-shade-amount: 25% !default;
$btn-active-border-tint-amount: 10% !default;
// scss-docs-end btn-variables

// Forms

// scss-docs-start form-text-variables
$form-text-margin-top: 0.25rem !default;
$form-text-font-size: $small-font-size !default;
$form-text-font-style: null !default;
$form-text-font-weight: null !default;
$form-text-color: var(--#{$prefix}secondary-color) !default;
// scss-docs-end form-text-variables

// scss-docs-start form-label-variables
$form-label-margin-bottom: 0.5rem !default;
$form-label-font-size: null !default;
$form-label-font-style: null !default;
$form-label-font-weight: null !default;
$form-label-color: null !default;
// scss-docs-end form-label-variables

// scss-docs-start form-input-variables
$input-padding-y: $input-btn-padding-y !default;
$input-padding-x: $input-btn-padding-x !default;
$input-font-family: $input-btn-font-family !default;
$input-font-size: $input-btn-font-size !default;
$input-font-weight: $font-weight-base !default;
$input-line-height: $input-btn-line-height !default;

$input-padding-y-sm: $input-btn-padding-y-sm !default;
$input-padding-x-sm: $input-btn-padding-x-sm !default;
$input-font-size-sm: $input-btn-font-size-sm !default;

$input-padding-y-lg: $input-btn-padding-y-lg !default;
$input-padding-x-lg: $input-btn-padding-x-lg !default;
$input-font-size-lg: $input-btn-font-size-lg !default;

$input-bg: var(--#{$prefix}body-bg) !default;
$input-disabled-color: null !default;
$input-disabled-bg: var(--#{$prefix}secondary-bg) !default;
$input-disabled-border-color: null !default;

$input-color: var(--#{$prefix}body-color) !default;
$input-border-color: var(--#{$prefix}border-color) !default;
$input-border-width: $input-btn-border-width !default;
$input-box-shadow: $box-shadow-inset !default;

$input-border-radius: var(--#{$prefix}border-radius) !default;
$input-border-radius-sm: var(--#{$prefix}border-radius-sm) !default;
$input-border-radius-lg: var(--#{$prefix}border-radius-lg) !default;

$input-focus-bg: $input-bg !default;
$input-focus-border-color: tint-color($component-active-bg, 50%) !default;
$input-focus-color: $input-color !default;
$input-focus-width: $input-btn-focus-width !default;
$input-focus-box-shadow: $input-btn-focus-box-shadow !default;

$input-placeholder-color: var(--#{$prefix}secondary-color) !default;
$input-plaintext-color: var(--#{$prefix}body-color) !default;

$input-height-border: calc(
  #{$input-border-width} * 2
) !default; // stylelint-disable-line function-disallowed-list

$input-height-inner: add(
  $input-line-height * 1em,
  $input-padding-y * 2
) !default;
$input-height-inner-half: add(
  $input-line-height * 0.5em,
  $input-padding-y
) !default;
$input-height-inner-quarter: add(
  $input-line-height * 0.25em,
  $input-padding-y * 0.5
) !default;

$input-height: add(
  $input-line-height * 1em,
  add($input-padding-y * 2, $input-height-border, false)
) !default;
$input-height-sm: add(
  $input-line-height * 1em,
  add($input-padding-y-sm * 2, $input-height-border, false)
) !default;
$input-height-lg: add(
  $input-line-height * 1em,
  add($input-padding-y-lg * 2, $input-height-border, false)
) !default;

$input-transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out !default;

$form-color-width: 3rem !default;
// scss-docs-end form-input-variables

// scss-docs-start form-check-variables
$form-check-input-width: 1em !default;
$form-check-min-height: $font-size-base * $line-height-base !default;
$form-check-padding-start: $form-check-input-width + 0.5em !default;
$form-check-margin-bottom: 0.125rem !default;
$form-check-label-color: null !default;
$form-check-label-cursor: null !default;
$form-check-transition: null !default;

$form-check-input-active-filter: brightness(90%) !default;

$form-check-input-bg: $input-bg !default;
$form-check-input-border: var(--#{$prefix}border-width) solid
  var(--#{$prefix}border-color) !default;
$form-check-input-border-radius: 0.25em !default;
$form-check-radio-border-radius: 50% !default;
$form-check-input-focus-border: $input-focus-border-color !default;
$form-check-input-focus-box-shadow: $focus-ring-box-shadow !default;

$form-check-input-checked-color: $component-active-color !default;
$form-check-input-checked-bg-color: $component-active-bg !default;
$form-check-input-checked-border-color: $form-check-input-checked-bg-color !default;
$form-check-input-checked-bg-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'><path fill='none' stroke='#{$form-check-input-checked-color}' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='m6 10 3 3 6-6'/></svg>") !default;
$form-check-radio-checked-bg-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'><circle r='2' fill='#{$form-check-input-checked-color}'/></svg>") !default;

$form-check-input-indeterminate-color: $component-active-color !default;
$form-check-input-indeterminate-bg-color: $component-active-bg !default;
$form-check-input-indeterminate-border-color: $form-check-input-indeterminate-bg-color !default;
$form-check-input-indeterminate-bg-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'><path fill='none' stroke='#{$form-check-input-indeterminate-color}' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='M6 10h8'/></svg>") !default;

$form-check-input-disabled-opacity: 0.5 !default;
$form-check-label-disabled-opacity: $form-check-input-disabled-opacity !default;
$form-check-btn-check-disabled-opacity: $btn-disabled-opacity !default;

$form-check-inline-margin-end: 1rem !default;
// scss-docs-end form-check-variables

// scss-docs-start form-switch-variables
$form-switch-color: rgba($black, 0.25) !default;
$form-switch-width: 2em !default;
$form-switch-padding-start: $form-switch-width + 0.5em !default;
$form-switch-bg-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'><circle r='3' fill='#{$form-switch-color}'/></svg>") !default;
$form-switch-border-radius: $form-switch-width !default;
$form-switch-transition: background-position 0.15s ease-in-out !default;

$form-switch-focus-color: $input-focus-border-color !default;
$form-switch-focus-bg-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'><circle r='3' fill='#{$form-switch-focus-color}'/></svg>") !default;

$form-switch-checked-color: $component-active-color !default;
$form-switch-checked-bg-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'><circle r='3' fill='#{$form-switch-checked-color}'/></svg>") !default;
$form-switch-checked-bg-position: right center !default;
// scss-docs-end form-switch-variables

// scss-docs-start input-group-variables
$input-group-addon-padding-y: $input-padding-y !default;
$input-group-addon-padding-x: $input-padding-x !default;
$input-group-addon-font-weight: $input-font-weight !default;
$input-group-addon-color: $input-color !default;
$input-group-addon-bg: var(--#{$prefix}tertiary-bg) !default;
$input-group-addon-border-color: $input-border-color !default;
// scss-docs-end input-group-variables

// scss-docs-start form-select-variables
$form-select-padding-y: $input-padding-y !default;
$form-select-padding-x: $input-padding-x !default;
$form-select-font-family: $input-font-family !default;
$form-select-font-size: $input-font-size !default;
$form-select-indicator-padding: $form-select-padding-x * 3 !default; // Extra padding for background-image
$form-select-font-weight: $input-font-weight !default;
$form-select-line-height: $input-line-height !default;
$form-select-color: $input-color !default;
$form-select-bg: $input-bg !default;
$form-select-disabled-color: null !default;
$form-select-disabled-bg: $input-disabled-bg !default;
$form-select-disabled-border-color: $input-disabled-border-color !default;
$form-select-bg-position: right $form-select-padding-x center !default;
$form-select-bg-size: 16px 12px !default; // In pixels because image dimensions
$form-select-indicator-color: $gray-800 !default;
$form-select-indicator: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'><path fill='none' stroke='#{$form-select-indicator-color}' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m2 5 6 6 6-6'/></svg>") !default;

$form-select-feedback-icon-padding-end: $form-select-padding-x * 2.5 +
  $form-select-indicator-padding !default;
$form-select-feedback-icon-position: center right $form-select-indicator-padding !default;
$form-select-feedback-icon-size: $input-height-inner-half
  $input-height-inner-half !default;

$form-select-border-width: $input-border-width !default;
$form-select-border-color: $input-border-color !default;
$form-select-border-radius: $input-border-radius !default;
$form-select-box-shadow: $box-shadow-inset !default;

$form-select-focus-border-color: $input-focus-border-color !default;
$form-select-focus-width: $input-focus-width !default;
$form-select-focus-box-shadow: 0 0 0 $form-select-focus-width
  $input-btn-focus-color !default;

$form-select-padding-y-sm: $input-padding-y-sm !default;
$form-select-padding-x-sm: $input-padding-x-sm !default;
$form-select-font-size-sm: $input-font-size-sm !default;
$form-select-border-radius-sm: $input-border-radius-sm !default;

$form-select-padding-y-lg: $input-padding-y-lg !default;
$form-select-padding-x-lg: $input-padding-x-lg !default;
$form-select-font-size-lg: $input-font-size-lg !default;
$form-select-border-radius-lg: $input-border-radius-lg !default;

$form-select-transition: $input-transition !default;
// scss-docs-end form-select-variables

// scss-docs-start form-range-variables
$form-range-track-width: 100% !default;
$form-range-track-height: 0.5rem !default;
$form-range-track-cursor: pointer !default;
$form-range-track-bg: var(--#{$prefix}tertiary-bg) !default;
$form-range-track-border-radius: 1rem !default;
$form-range-track-box-shadow: $box-shadow-inset !default;

$form-range-thumb-width: 1rem !default;
$form-range-thumb-height: $form-range-thumb-width !default;
$form-range-thumb-bg: $component-active-bg !default;
$form-range-thumb-border: 0 !default;
$form-range-thumb-border-radius: 1rem !default;
$form-range-thumb-box-shadow: 0 0.1rem 0.25rem rgba($black, 0.1) !default;
$form-range-thumb-focus-box-shadow: 0 0 0 1px $body-bg, $input-focus-box-shadow !default;
$form-range-thumb-focus-box-shadow-width: $input-focus-width !default; // For focus box shadow issue in Edge
$form-range-thumb-active-bg: tint-color($component-active-bg, 70%) !default;
$form-range-thumb-disabled-bg: var(--#{$prefix}secondary-color) !default;
$form-range-thumb-transition: background-color 0.15s ease-in-out,
  border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out !default;
// scss-docs-end form-range-variables

// scss-docs-start form-file-variables
$form-file-button-color: $input-color !default;
$form-file-button-bg: var(--#{$prefix}tertiary-bg) !default;
$form-file-button-hover-bg: var(--#{$prefix}secondary-bg) !default;
// scss-docs-end form-file-variables

// scss-docs-start form-floating-variables
$form-floating-height: add(3.5rem, $input-height-border) !default;
$form-floating-line-height: 1.25 !default;
$form-floating-padding-x: $input-padding-x !default;
$form-floating-padding-y: 1rem !default;
$form-floating-input-padding-t: 1.625rem !default;
$form-floating-input-padding-b: 0.625rem !default;
$form-floating-label-height: 1.5em !default;
$form-floating-label-opacity: 0.65 !default;
$form-floating-label-transform: scale(0.85) translateY(-0.5rem)
  translateX(0.15rem) !default;
$form-floating-label-disabled-color: $gray-600 !default;
$form-floating-transition: opacity 0.1s ease-in-out, transform 0.1s ease-in-out !default;
// scss-docs-end form-floating-variables

// Form validation

// scss-docs-start form-feedback-variables
$form-feedback-margin-top: $form-text-margin-top !default;
$form-feedback-font-size: $form-text-font-size !default;
$form-feedback-font-style: $form-text-font-style !default;
$form-feedback-valid-color: $success !default;
$form-feedback-invalid-color: $danger !default;

$form-feedback-icon-valid-color: $form-feedback-valid-color !default;
$form-feedback-icon-valid: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'><path fill='#{$form-feedback-icon-valid-color}' d='M2.3 6.73.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/></svg>") !default;
$form-feedback-icon-invalid-color: $form-feedback-invalid-color !default;
$form-feedback-icon-invalid: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='#{$form-feedback-icon-invalid-color}'><circle cx='6' cy='6' r='4.5'/><path stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/><circle cx='6' cy='8.2' r='.6' fill='#{$form-feedback-icon-invalid-color}' stroke='none'/></svg>") !default;
// scss-docs-end form-feedback-variables

// scss-docs-start form-validation-colors
$form-valid-color: $form-feedback-valid-color !default;
$form-valid-border-color: $form-feedback-valid-color !default;
$form-invalid-color: $form-feedback-invalid-color !default;
$form-invalid-border-color: $form-feedback-invalid-color !default;
// scss-docs-end form-validation-colors

// scss-docs-start form-validation-states
$form-validation-states: (
  "valid": (
    "color": var(--#{$prefix}form-valid-color),
    "icon": $form-feedback-icon-valid,
    "tooltip-color": #fff,
    "tooltip-bg-color": var(--#{$prefix}success),
    "focus-box-shadow": 0 0 $input-btn-focus-blur $input-focus-width
      rgba(var(--#{$prefix}success-rgb), $input-btn-focus-color-opacity),
    "border-color": var(--#{$prefix}form-valid-border-color),
  ),
  "invalid": (
    "color": var(--#{$prefix}form-invalid-color),
    "icon": $form-feedback-icon-invalid,
    "tooltip-color": #fff,
    "tooltip-bg-color": var(--#{$prefix}danger),
    "focus-box-shadow": 0 0 $input-btn-focus-blur $input-focus-width
      rgba(var(--#{$prefix}danger-rgb), $input-btn-focus-color-opacity),
    "border-color": var(--#{$prefix}form-invalid-border-color),
  ),
) !default;
// scss-docs-end form-validation-states

// Z-index master list
//
// Warning: Avoid customizing these values. They're used for a bird's eye view
// of components dependent on the z-axis and are designed to all work together.

// scss-docs-start zindex-stack
$zindex-dropdown: 1000 !default;
$zindex-sticky: 1020 !default;
$zindex-fixed: 1030 !default;
$zindex-offcanvas-backdrop: 1040 !default;
$zindex-offcanvas: 1045 !default;
$zindex-modal-backdrop: 1050 !default;
$zindex-modal: 1055 !default;
$zindex-popover: 1070 !default;
$zindex-tooltip: 1080 !default;
$zindex-toast: 1090 !default;
// scss-docs-end zindex-stack

// scss-docs-start zindex-levels-map
$zindex-levels: (
  n1: -1,
  0: 0,
  1: 1,
  2: 2,
  3: 3,
) !default;
// scss-docs-end zindex-levels-map

// Navs

// scss-docs-start nav-variables
$nav-link-padding-y: 0.5rem !default;
$nav-link-padding-x: 1rem !default;
$nav-link-font-size: null !default;
$nav-link-font-weight: null !default;
$nav-link-color: var(--#{$prefix}link-color) !default;
$nav-link-hover-color: var(--#{$prefix}link-hover-color) !default;
$nav-link-transition: color 0.15s ease-in-out,
  background-color 0.15s ease-in-out, border-color 0.15s ease-in-out !default;
$nav-link-disabled-color: var(--#{$prefix}secondary-color) !default;
$nav-link-focus-box-shadow: $focus-ring-box-shadow !default;

$nav-tabs-border-color: var(--#{$prefix}border-color) !default;
$nav-tabs-border-width: var(--#{$prefix}border-width) !default;
$nav-tabs-border-radius: var(--#{$prefix}border-radius) !default;
$nav-tabs-link-hover-border-color: var(--#{$prefix}secondary-bg)
  var(--#{$prefix}secondary-bg) $nav-tabs-border-color !default;
$nav-tabs-link-active-color: var(--#{$prefix}emphasis-color) !default;
$nav-tabs-link-active-bg: var(--#{$prefix}body-bg) !default;
$nav-tabs-link-active-border-color: var(--#{$prefix}border-color)
  var(--#{$prefix}border-color) $nav-tabs-link-active-bg !default;

$nav-pills-border-radius: var(--#{$prefix}border-radius) !default;
$nav-pills-link-active-color: $component-active-color !default;
$nav-pills-link-active-bg: $component-active-bg !default;

$nav-underline-gap: 1rem !default;
$nav-underline-border-width: 0.125rem !default;
$nav-underline-link-active-color: var(--#{$prefix}emphasis-color) !default;
// scss-docs-end nav-variables

// Navbar

// scss-docs-start navbar-variables
$navbar-padding-y: $spacer * 0.5 !default;
$navbar-padding-x: null !default;

$navbar-nav-link-padding-x: 0.5rem !default;

$navbar-brand-font-size: $font-size-lg !default;
// Compute the navbar-brand padding-y so the navbar-brand will have the same height as navbar-text and nav-link
$nav-link-height: $font-size-base * $line-height-base + $nav-link-padding-y * 2 !default;
$navbar-brand-height: $navbar-brand-font-size * $line-height-base !default;
$navbar-brand-padding-y: ($nav-link-height - $navbar-brand-height) * 0.5 !default;
$navbar-brand-margin-end: 1rem !default;

$navbar-toggler-padding-y: 0.25rem !default;
$navbar-toggler-padding-x: 0.75rem !default;
$navbar-toggler-font-size: $font-size-lg !default;
$navbar-toggler-border-radius: $btn-border-radius !default;
$navbar-toggler-focus-width: $btn-focus-width !default;
$navbar-toggler-transition: box-shadow 0.15s ease-in-out !default;

$navbar-light-color: rgba(var(--#{$prefix}emphasis-color-rgb), 0.65) !default;
$navbar-light-hover-color: rgba(
  var(--#{$prefix}emphasis-color-rgb),
  0.8
) !default;
$navbar-light-active-color: rgba(
  var(--#{$prefix}emphasis-color-rgb),
  1
) !default;
$navbar-light-disabled-color: rgba(
  var(--#{$prefix}emphasis-color-rgb),
  0.3
) !default;
$navbar-light-icon-color: rgba($body-color, 0.75) !default;
$navbar-light-toggler-icon-bg: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'><path stroke='#{$navbar-light-icon-color}' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/></svg>") !default;
$navbar-light-toggler-border-color: rgba(
  var(--#{$prefix}emphasis-color-rgb),
  0.15
) !default;
$navbar-light-brand-color: $navbar-light-active-color !default;
$navbar-light-brand-hover-color: $navbar-light-active-color !default;
// scss-docs-end navbar-variables

// scss-docs-start navbar-dark-variables
$navbar-dark-color: rgba($white, 0.55) !default;
$navbar-dark-hover-color: rgba($white, 0.75) !default;
$navbar-dark-active-color: $white !default;
$navbar-dark-disabled-color: rgba($white, 0.25) !default;
$navbar-dark-toggler-icon-bg: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'><path stroke='#{$navbar-dark-color}' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/></svg>") !default;
$navbar-dark-toggler-border-color: rgba($white, 0.1) !default;
$navbar-dark-brand-color: $navbar-dark-active-color !default;
$navbar-dark-brand-hover-color: $navbar-dark-active-color !default;
// scss-docs-end navbar-dark-variables

// Dropdowns
//
// Dropdown menu container and contents.

// scss-docs-start dropdown-variables
$dropdown-min-width: 10rem !default;
$dropdown-padding-x: 0 !default;
$dropdown-padding-y: 0.5rem !default;
$dropdown-spacer: 0.125rem !default;
$dropdown-font-size: $font-size-base !default;
$dropdown-color: var(--#{$prefix}body-color) !default;
$dropdown-bg: var(--#{$prefix}body-bg) !default;
$dropdown-border-color: var(--#{$prefix}border-color-translucent) !default;
$dropdown-border-radius: var(--#{$prefix}border-radius) !default;
$dropdown-border-width: var(--#{$prefix}border-width) !default;
$dropdown-inner-border-radius: calc(
  #{$dropdown-border-radius} - #{$dropdown-border-width}
) !default; // stylelint-disable-line function-disallowed-list
$dropdown-divider-bg: $dropdown-border-color !default;
$dropdown-divider-margin-y: $spacer * 0.5 !default;
$dropdown-box-shadow: $box-shadow !default;

$dropdown-link-color: var(--#{$prefix}body-color) !default;
$dropdown-link-hover-color: $dropdown-link-color !default;
$dropdown-link-hover-bg: var(--#{$prefix}tertiary-bg) !default;

$dropdown-link-active-color: $component-active-color !default;
$dropdown-link-active-bg: $component-active-bg !default;

$dropdown-link-disabled-color: var(--#{$prefix}tertiary-color) !default;

$dropdown-item-padding-y: $spacer * 0.25 !default;
$dropdown-item-padding-x: $spacer !default;

$dropdown-header-color: $gray-600 !default;
$dropdown-header-padding-x: $dropdown-item-padding-x !default;
$dropdown-header-padding-y: $dropdown-padding-y !default;
// fusv-disable
$dropdown-header-padding: $dropdown-header-padding-y $dropdown-header-padding-x !default; // Deprecated in v5.2.0
// fusv-enable
// scss-docs-end dropdown-variables

// scss-docs-start dropdown-dark-variables
$dropdown-dark-color: $gray-300 !default;
$dropdown-dark-bg: $gray-800 !default;
$dropdown-dark-border-color: $dropdown-border-color !default;
$dropdown-dark-divider-bg: $dropdown-divider-bg !default;
$dropdown-dark-box-shadow: null !default;
$dropdown-dark-link-color: $dropdown-dark-color !default;
$dropdown-dark-link-hover-color: $white !default;
$dropdown-dark-link-hover-bg: rgba($white, 0.15) !default;
$dropdown-dark-link-active-color: $dropdown-link-active-color !default;
$dropdown-dark-link-active-bg: $dropdown-link-active-bg !default;
$dropdown-dark-link-disabled-color: $gray-500 !default;
$dropdown-dark-header-color: $gray-500 !default;
// scss-docs-end dropdown-dark-variables

// Pagination

// scss-docs-start pagination-variables
$pagination-padding-y: 0.375rem !default;
$pagination-padding-x: 0.75rem !default;
$pagination-padding-y-sm: 0.25rem !default;
$pagination-padding-x-sm: 0.5rem !default;
$pagination-padding-y-lg: 0.75rem !default;
$pagination-padding-x-lg: 1.5rem !default;

$pagination-font-size: $font-size-base !default;

$pagination-color: var(--#{$prefix}link-color) !default;
$pagination-bg: var(--#{$prefix}body-bg) !default;
$pagination-border-radius: var(--#{$prefix}border-radius) !default;
$pagination-border-width: var(--#{$prefix}border-width) !default;
$pagination-margin-start: calc(
  #{$pagination-border-width} * -1
) !default; // stylelint-disable-line function-disallowed-list
$pagination-border-color: var(--#{$prefix}border-color) !default;

$pagination-focus-color: var(--#{$prefix}link-hover-color) !default;
$pagination-focus-bg: var(--#{$prefix}secondary-bg) !default;
$pagination-focus-box-shadow: $focus-ring-box-shadow !default;
$pagination-focus-outline: 0 !default;

$pagination-hover-color: var(--#{$prefix}link-hover-color) !default;
$pagination-hover-bg: var(--#{$prefix}tertiary-bg) !default;
$pagination-hover-border-color: var(
  --#{$prefix}border-color
) !default; // Todo in v6: remove this?

$pagination-active-color: $component-active-color !default;
$pagination-active-bg: $component-active-bg !default;
$pagination-active-border-color: $component-active-bg !default;

$pagination-disabled-color: var(--#{$prefix}secondary-color) !default;
$pagination-disabled-bg: var(--#{$prefix}secondary-bg) !default;
$pagination-disabled-border-color: var(--#{$prefix}border-color) !default;

$pagination-transition: color 0.15s ease-in-out,
  background-color 0.15s ease-in-out, border-color 0.15s ease-in-out,
  box-shadow 0.15s ease-in-out !default;

$pagination-border-radius-sm: var(--#{$prefix}border-radius-sm) !default;
$pagination-border-radius-lg: var(--#{$prefix}border-radius-lg) !default;
// scss-docs-end pagination-variables

// Placeholders

// scss-docs-start placeholders
$placeholder-opacity-max: 0.5 !default;
$placeholder-opacity-min: 0.2 !default;
// scss-docs-end placeholders

// Cards

// scss-docs-start card-variables
$card-spacer-y: $spacer !default;
$card-spacer-x: $spacer !default;
$card-title-spacer-y: $spacer * 0.5 !default;
$card-title-color: null !default;
$card-subtitle-color: null !default;
$card-border-width: var(--#{$prefix}border-width) !default;
$card-border-color: var(--#{$prefix}border-color-translucent) !default;
$card-border-radius: var(--#{$prefix}border-radius) !default;
$card-box-shadow: null !default;
$card-inner-border-radius: subtract(
  $card-border-radius,
  $card-border-width
) !default;
$card-cap-padding-y: $card-spacer-y * 0.5 !default;
$card-cap-padding-x: $card-spacer-x !default;
$card-cap-bg: rgba(var(--#{$prefix}body-color-rgb), 0.03) !default;
$card-cap-color: null !default;
$card-height: null !default;
$card-color: null !default;
$card-bg: var(--#{$prefix}body-bg) !default;
$card-img-overlay-padding: $spacer !default;
$card-group-margin: $grid-gutter-width * 0.5 !default;
// scss-docs-end card-variables

// Accordion

// scss-docs-start accordion-variables
$accordion-padding-y: 1rem !default;
$accordion-padding-x: 1.25rem !default;
$accordion-color: var(--#{$prefix}body-color) !default;
$accordion-bg: var(--#{$prefix}body-bg) !default;
$accordion-border-width: var(--#{$prefix}border-width) !default;
$accordion-border-color: var(--#{$prefix}border-color) !default;
$accordion-border-radius: var(--#{$prefix}border-radius) !default;
$accordion-inner-border-radius: subtract(
  $accordion-border-radius,
  $accordion-border-width
) !default;

$accordion-body-padding-y: $accordion-padding-y !default;
$accordion-body-padding-x: $accordion-padding-x !default;

$accordion-button-padding-y: $accordion-padding-y !default;
$accordion-button-padding-x: $accordion-padding-x !default;
$accordion-button-color: var(--#{$prefix}body-color) !default;
$accordion-button-bg: var(--#{$prefix}accordion-bg) !default;
$accordion-transition: $btn-transition, border-radius 0.15s ease !default;
$accordion-button-active-bg: var(--#{$prefix}primary-bg-subtle) !default;
$accordion-button-active-color: var(--#{$prefix}primary-text-emphasis) !default;

$accordion-button-focus-border-color: $input-focus-border-color !default;
$accordion-button-focus-box-shadow: $btn-focus-box-shadow !default;

$accordion-icon-width: 1.25rem !default;
$accordion-icon-color: $body-color !default;
$accordion-icon-active-color: $primary-text-emphasis !default;
$accordion-icon-transition: transform 0.2s ease-in-out !default;
$accordion-icon-transform: rotate(-180deg) !default;

$accordion-button-icon: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='#{$accordion-icon-color}'><path fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/></svg>") !default;
$accordion-button-active-icon: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='#{$accordion-icon-active-color}'><path fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/></svg>") !default;
// scss-docs-end accordion-variables

// Tooltips

// scss-docs-start tooltip-variables
$tooltip-font-size: $font-size-sm !default;
$tooltip-max-width: 200px !default;
$tooltip-color: var(--#{$prefix}body-bg) !default;
$tooltip-bg: var(--#{$prefix}emphasis-color) !default;
$tooltip-border-radius: var(--#{$prefix}border-radius) !default;
$tooltip-opacity: 0.9 !default;
$tooltip-padding-y: $spacer * 0.25 !default;
$tooltip-padding-x: $spacer * 0.5 !default;
$tooltip-margin: null !default; // TODO: remove this in v6

$tooltip-arrow-width: 0.8rem !default;
$tooltip-arrow-height: 0.4rem !default;
// fusv-disable
$tooltip-arrow-color: null !default; // Deprecated in Bootstrap 5.2.0 for CSS variables
// fusv-enable
// scss-docs-end tooltip-variables

// Form tooltips must come after regular tooltips
// scss-docs-start tooltip-feedback-variables
$form-feedback-tooltip-padding-y: $tooltip-padding-y !default;
$form-feedback-tooltip-padding-x: $tooltip-padding-x !default;
$form-feedback-tooltip-font-size: $tooltip-font-size !default;
$form-feedback-tooltip-line-height: null !default;
$form-feedback-tooltip-opacity: $tooltip-opacity !default;
$form-feedback-tooltip-border-radius: $tooltip-border-radius !default;
// scss-docs-end tooltip-feedback-variables

// Popovers

// scss-docs-start popover-variables
$popover-font-size: $font-size-sm !default;
$popover-bg: var(--#{$prefix}body-bg) !default;
$popover-max-width: 276px !default;
$popover-border-width: var(--#{$prefix}border-width) !default;
$popover-border-color: var(--#{$prefix}border-color-translucent) !default;
$popover-border-radius: var(--#{$prefix}border-radius-lg) !default;
$popover-inner-border-radius: calc(
  #{$popover-border-radius} - #{$popover-border-width}
) !default; // stylelint-disable-line function-disallowed-list
$popover-box-shadow: $box-shadow !default;

$popover-header-font-size: $font-size-base !default;
$popover-header-bg: var(--#{$prefix}secondary-bg) !default;
$popover-header-color: $headings-color !default;
$popover-header-padding-y: 0.5rem !default;
$popover-header-padding-x: $spacer !default;

$popover-body-color: var(--#{$prefix}body-color) !default;
$popover-body-padding-y: $spacer !default;
$popover-body-padding-x: $spacer !default;

$popover-arrow-width: 1rem !default;
$popover-arrow-height: 0.5rem !default;
// scss-docs-end popover-variables

// fusv-disable
// Deprecated in Bootstrap 5.2.0 for CSS variables
$popover-arrow-color: $popover-bg !default;
$popover-arrow-outer-color: var(--#{$prefix}border-color-translucent) !default;
// fusv-enable

// Toasts

// scss-docs-start toast-variables
$toast-max-width: 350px !default;
$toast-padding-x: 0.75rem !default;
$toast-padding-y: 0.5rem !default;
$toast-font-size: 0.875rem !default;
$toast-color: null !default;
$toast-background-color: rgba(var(--#{$prefix}body-bg-rgb), 0.85) !default;
$toast-border-width: var(--#{$prefix}border-width) !default;
$toast-border-color: var(--#{$prefix}border-color-translucent) !default;
$toast-border-radius: var(--#{$prefix}border-radius) !default;
$toast-box-shadow: var(--#{$prefix}box-shadow) !default;
$toast-spacing: $container-padding-x !default;

$toast-header-color: var(--#{$prefix}secondary-color) !default;
$toast-header-background-color: rgba(
  var(--#{$prefix}body-bg-rgb),
  0.85
) !default;
$toast-header-border-color: $toast-border-color !default;
// scss-docs-end toast-variables

// Badges

// scss-docs-start badge-variables
$badge-font-size: 0.75em !default;
$badge-font-weight: $font-weight-bold !default;
$badge-color: $white !default;
$badge-padding-y: 0.35em !default;
$badge-padding-x: 0.65em !default;
$badge-border-radius: var(--#{$prefix}border-radius) !default;
// scss-docs-end badge-variables

// Modals

// scss-docs-start modal-variables
$modal-inner-padding: $spacer !default;

$modal-footer-margin-between: 0.5rem !default;

$modal-dialog-margin: 0.5rem !default;
$modal-dialog-margin-y-sm-up: 1.75rem !default;

$modal-title-line-height: $line-height-base !default;

$modal-content-color: null !default;
$modal-content-bg: var(--#{$prefix}body-bg) !default;
$modal-content-border-color: var(--#{$prefix}border-color-translucent) !default;
$modal-content-border-width: var(--#{$prefix}border-width) !default;
$modal-content-border-radius: var(--#{$prefix}border-radius-lg) !default;
$modal-content-inner-border-radius: subtract(
  $modal-content-border-radius,
  $modal-content-border-width
) !default;
$modal-content-box-shadow-xs: $box-shadow-sm !default;
$modal-content-box-shadow-sm-up: $box-shadow !default;

$modal-backdrop-bg: $black !default;
$modal-backdrop-opacity: 0.5 !default;

$modal-header-border-color: var(--#{$prefix}border-color) !default;
$modal-header-border-width: $modal-content-border-width !default;
$modal-header-padding-y: $modal-inner-padding !default;
$modal-header-padding-x: $modal-inner-padding !default;
$modal-header-padding: $modal-header-padding-y $modal-header-padding-x !default; // Keep this for backwards compatibility

$modal-footer-bg: null !default;
$modal-footer-border-color: $modal-header-border-color !default;
$modal-footer-border-width: $modal-header-border-width !default;

$modal-sm: 300px !default;
$modal-md: 500px !default;
$modal-lg: 800px !default;
$modal-xl: 1140px !default;

$modal-fade-transform: translate(0, -50px) !default;
$modal-show-transform: none !default;
$modal-transition: transform 0.3s ease-out !default;
$modal-scale-transform: scale(1.02) !default;
// scss-docs-end modal-variables

// Alerts
//
// Define alert colors, border radius, and padding.

// scss-docs-start alert-variables
$alert-padding-y: $spacer !default;
$alert-padding-x: $spacer !default;
$alert-margin-bottom: 1rem !default;
$alert-border-radius: var(--#{$prefix}border-radius) !default;
$alert-link-font-weight: $font-weight-bold !default;
$alert-border-width: var(--#{$prefix}border-width) !default;
$alert-bg-scale: -80% !default;
$alert-border-scale: -70% !default;
$alert-color-scale: 40% !default;
$alert-dismissible-padding-r: $alert-padding-x * 3 !default; // 3x covers width of x plus default padding on either side
// scss-docs-end alert-variables

// fusv-disable
$alert-bg-scale: -80% !default; // Deprecated in v5.2.0, to be removed in v6
$alert-border-scale: -70% !default; // Deprecated in v5.2.0, to be removed in v6
$alert-color-scale: 40% !default; // Deprecated in v5.2.0, to be removed in v6
// fusv-enable

// Progress bars

// scss-docs-start progress-variables
$progress-height: 1rem !default;
$progress-font-size: $font-size-base * 0.75 !default;
$progress-bg: var(--#{$prefix}secondary-bg) !default;
$progress-border-radius: var(--#{$prefix}border-radius) !default;
$progress-box-shadow: var(--#{$prefix}box-shadow-inset) !default;
$progress-bar-color: $white !default;
$progress-bar-bg: $primary !default;
$progress-bar-animation-timing: 1s linear infinite !default;
$progress-bar-transition: width 0.6s ease !default;
// scss-docs-end progress-variables

// List group

// scss-docs-start list-group-variables
$list-group-color: var(--#{$prefix}body-color) !default;
$list-group-bg: var(--#{$prefix}body-bg) !default;
$list-group-border-color: var(--#{$prefix}border-color) !default;
$list-group-border-width: var(--#{$prefix}border-width) !default;
$list-group-border-radius: var(--#{$prefix}border-radius) !default;

$list-group-item-padding-y: $spacer * 0.5 !default;
$list-group-item-padding-x: $spacer !default;
// fusv-disable
$list-group-item-bg-scale: -80% !default; // Deprecated in v5.3.0
$list-group-item-color-scale: 40% !default; // Deprecated in v5.3.0
// fusv-enable

$list-group-hover-bg: var(--#{$prefix}tertiary-bg) !default;
$list-group-active-color: $component-active-color !default;
$list-group-active-bg: $component-active-bg !default;
$list-group-active-border-color: $list-group-active-bg !default;

$list-group-disabled-color: var(--#{$prefix}secondary-color) !default;
$list-group-disabled-bg: $list-group-bg !default;

$list-group-action-color: var(--#{$prefix}secondary-color) !default;
$list-group-action-hover-color: var(--#{$prefix}emphasis-color) !default;

$list-group-action-active-color: var(--#{$prefix}body-color) !default;
$list-group-action-active-bg: var(--#{$prefix}secondary-bg) !default;
// scss-docs-end list-group-variables

// Image thumbnails

// scss-docs-start thumbnail-variables
$thumbnail-padding: 0.25rem !default;
$thumbnail-bg: var(--#{$prefix}body-bg) !default;
$thumbnail-border-width: var(--#{$prefix}border-width) !default;
$thumbnail-border-color: var(--#{$prefix}border-color) !default;
$thumbnail-border-radius: var(--#{$prefix}border-radius) !default;
$thumbnail-box-shadow: var(--#{$prefix}box-shadow-sm) !default;
// scss-docs-end thumbnail-variables

// Figures

// scss-docs-start figure-variables
$figure-caption-font-size: $small-font-size !default;
$figure-caption-color: var(--#{$prefix}secondary-color) !default;
// scss-docs-end figure-variables

// Breadcrumbs

// scss-docs-start breadcrumb-variables
$breadcrumb-font-size: null !default;
$breadcrumb-padding-y: 0 !default;
$breadcrumb-padding-x: 0 !default;
$breadcrumb-item-padding-x: 0.5rem !default;
$breadcrumb-margin-bottom: 1rem !default;
$breadcrumb-bg: null !default;
$breadcrumb-divider-color: var(--#{$prefix}secondary-color) !default;
$breadcrumb-active-color: var(--#{$prefix}secondary-color) !default;
$breadcrumb-divider: quote("/") !default;
$breadcrumb-divider-flipped: $breadcrumb-divider !default;
$breadcrumb-border-radius: null !default;
// scss-docs-end breadcrumb-variables

// Carousel

// scss-docs-start carousel-variables
$carousel-control-color: $white !default;
$carousel-control-width: 15% !default;
$carousel-control-opacity: 0.5 !default;
$carousel-control-hover-opacity: 0.9 !default;
$carousel-control-transition: opacity 0.15s ease !default;

$carousel-indicator-width: 30px !default;
$carousel-indicator-height: 3px !default;
$carousel-indicator-hit-area-height: 10px !default;
$carousel-indicator-spacer: 3px !default;
$carousel-indicator-opacity: 0.5 !default;
$carousel-indicator-active-bg: $white !default;
$carousel-indicator-active-opacity: 1 !default;
$carousel-indicator-transition: opacity 0.6s ease !default;

$carousel-caption-width: 70% !default;
$carousel-caption-color: $white !default;
$carousel-caption-padding-y: 1.25rem !default;
$carousel-caption-spacer: 1.25rem !default;

$carousel-control-icon-width: 2rem !default;

$carousel-control-prev-icon-bg: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='#{$carousel-control-color}'><path d='M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z'/></svg>") !default;
$carousel-control-next-icon-bg: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='#{$carousel-control-color}'><path d='M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z'/></svg>") !default;

$carousel-transition-duration: 0.6s !default;
$carousel-transition: transform $carousel-transition-duration ease-in-out !default; // Define transform transition first if using multiple transitions (e.g., `transform 2s ease, opacity .5s ease-out`)
// scss-docs-end carousel-variables

// scss-docs-start carousel-dark-variables
$carousel-dark-indicator-active-bg: $black !default;
$carousel-dark-caption-color: $black !default;
$carousel-dark-control-icon-filter: invert(1) grayscale(100) !default;
// scss-docs-end carousel-dark-variables

// Spinners

// scss-docs-start spinner-variables
$spinner-width: 2rem !default;
$spinner-height: $spinner-width !default;
$spinner-vertical-align: -0.125em !default;
$spinner-border-width: 0.25em !default;
$spinner-animation-speed: 0.75s !default;

$spinner-width-sm: 1rem !default;
$spinner-height-sm: $spinner-width-sm !default;
$spinner-border-width-sm: 0.2em !default;
// scss-docs-end spinner-variables

// Close

// scss-docs-start close-variables
$btn-close-width: 1em !default;
$btn-close-height: $btn-close-width !default;
$btn-close-padding-x: 0.25em !default;
$btn-close-padding-y: $btn-close-padding-x !default;
$btn-close-color: $black !default;
$btn-close-bg: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='#{$btn-close-color}'><path d='M.293.293a1 1 0 0 1 1.414 0L8 6.586 14.293.293a1 1 0 1 1 1.414 1.414L9.414 8l6.293 6.293a1 1 0 0 1-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 0 1-1.414-1.414L6.586 8 .293 1.707a1 1 0 0 1 0-1.414z'/></svg>") !default;
$btn-close-focus-shadow: $focus-ring-box-shadow !default;
$btn-close-opacity: 0.5 !default;
$btn-close-hover-opacity: 0.75 !default;
$btn-close-focus-opacity: 1 !default;
$btn-close-disabled-opacity: 0.25 !default;
$btn-close-white-filter: invert(1) grayscale(100%) brightness(200%) !default;
// scss-docs-end close-variables

// Offcanvas

// scss-docs-start offcanvas-variables
$offcanvas-padding-y: $modal-inner-padding !default;
$offcanvas-padding-x: $modal-inner-padding !default;
$offcanvas-horizontal-width: 400px !default;
$offcanvas-vertical-height: 30vh !default;
$offcanvas-transition-duration: 0.3s !default;
$offcanvas-border-color: $modal-content-border-color !default;
$offcanvas-border-width: $modal-content-border-width !default;
$offcanvas-title-line-height: $modal-title-line-height !default;
$offcanvas-bg-color: var(--#{$prefix}body-bg) !default;
$offcanvas-color: var(--#{$prefix}body-color) !default;
$offcanvas-box-shadow: $modal-content-box-shadow-xs !default;
$offcanvas-backdrop-bg: $modal-backdrop-bg !default;
$offcanvas-backdrop-opacity: $modal-backdrop-opacity !default;
// scss-docs-end offcanvas-variables

// Code

$code-font-size: $small-font-size !default;
$code-color: $pink !default;

$kbd-padding-y: 0.1875rem !default;
$kbd-padding-x: 0.375rem !default;
$kbd-font-size: $code-font-size !default;
$kbd-color: var(--#{$prefix}body-bg) !default;
$kbd-bg: var(--#{$prefix}body-color) !default;
$nested-kbd-font-weight: null !default; // Deprecated in v5.2.0, removing in v6

$pre-color: null !default;

// Dark color mode variables
//
// Custom variables for the `[data-bs-theme="dark"]` theme. Use this as a starting point for your own custom color modes by creating a new theme-specific file like `_variables-dark.scss` and adding the variables you need.

//
// Global colors
//

// scss-docs-start sass-dark-mode-vars
// scss-docs-start theme-text-dark-variables
$primary-text-emphasis-dark: tint-color($primary, 40%) !default;
$secondary-text-emphasis-dark: tint-color($secondary, 40%) !default;
$success-text-emphasis-dark: tint-color($success, 40%) !default;
$info-text-emphasis-dark: tint-color($info, 40%) !default;
$warning-text-emphasis-dark: tint-color($warning, 40%) !default;
$danger-text-emphasis-dark: tint-color($danger, 40%) !default;
$light-text-emphasis-dark: $gray-100 !default;
$dark-text-emphasis-dark: $gray-300 !default;
// scss-docs-end theme-text-dark-variables

// scss-docs-start theme-bg-subtle-dark-variables
$primary-bg-subtle-dark: shade-color($primary, 80%) !default;
$secondary-bg-subtle-dark: shade-color($secondary, 80%) !default;
$success-bg-subtle-dark: shade-color($success, 80%) !default;
$info-bg-subtle-dark: shade-color($info, 80%) !default;
$warning-bg-subtle-dark: shade-color($warning, 80%) !default;
$danger-bg-subtle-dark: shade-color($danger, 80%) !default;
$light-bg-subtle-dark: $gray-800 !default;
$dark-bg-subtle-dark: mix($gray-800, $black) !default;
// scss-docs-end theme-bg-subtle-dark-variables

// scss-docs-start theme-border-subtle-dark-variables
$primary-border-subtle-dark: shade-color($primary, 40%) !default;
$secondary-border-subtle-dark: shade-color($secondary, 40%) !default;
$success-border-subtle-dark: shade-color($success, 40%) !default;
$info-border-subtle-dark: shade-color($info, 40%) !default;
$warning-border-subtle-dark: shade-color($warning, 40%) !default;
$danger-border-subtle-dark: shade-color($danger, 40%) !default;
$light-border-subtle-dark: $gray-700 !default;
$dark-border-subtle-dark: $gray-800 !default;
// scss-docs-end theme-border-subtle-dark-variables

$body-color-dark: $gray-500 !default;
$body-bg-dark: $gray-900 !default;
$body-secondary-color-dark: rgba($body-color-dark, 0.75) !default;
$body-secondary-bg-dark: $gray-800 !default;
$body-tertiary-color-dark: rgba($body-color-dark, 0.5) !default;
$body-tertiary-bg-dark: mix($gray-800, $gray-900, 50%) !default;
$body-emphasis-color-dark: $white !default;
$border-color-dark: $gray-700 !default;
$border-color-translucent-dark: rgba($white, 0.15) !default;
$headings-color-dark: inherit !default;
$link-color-dark: tint-color($primary, 40%) !default;
$link-hover-color-dark: shift-color(
  $link-color-dark,
  -$link-shade-percentage
) !default;
$code-color-dark: tint-color($code-color, 40%) !default;

//
// Forms
//

$form-select-indicator-color-dark: $body-color-dark !default;
$form-select-indicator-dark: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'><path fill='none' stroke='#{$form-select-indicator-color-dark}' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m2 5 6 6 6-6'/></svg>") !default;

$form-switch-color-dark: rgba($white, 0.25) !default;
$form-switch-bg-image-dark: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'><circle r='3' fill='#{$form-switch-color-dark}'/></svg>") !default;

// scss-docs-start form-validation-colors-dark
$form-valid-color-dark: $green-300 !default;
$form-valid-border-color-dark: $green-300 !default;
$form-invalid-color-dark: $red-300 !default;
$form-invalid-border-color-dark: $red-300 !default;
// scss-docs-end form-validation-colors-dark

//
// Accordion
//

$accordion-icon-color-dark: $primary-text-emphasis-dark !default;
$accordion-icon-active-color-dark: $primary-text-emphasis-dark !default;

$accordion-button-icon-dark: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='#{$accordion-icon-color-dark}'><path fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/></svg>") !default;
$accordion-button-active-icon-dark: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='#{$accordion-icon-active-color-dark}'><path fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/></svg>") !default;
// scss-docs-end sass-dark-mode-vars

// Re-assigned maps
//
// Placed here so that others can override the default Sass maps and see automatic updates to utilities and more.

// scss-docs-start theme-colors-rgb
$theme-colors-rgb: map-loop($theme-colors, to-rgb, "$value") !default;

// scss-docs-end theme-colors-rgb

// scss-docs-start theme-text-map
$theme-colors-text: (
  "primary": $primary-text-emphasis,
  "secondary": $secondary-text-emphasis,
  "success": $success-text-emphasis,
  "info": $info-text-emphasis,
  "warning": $warning-text-emphasis,
  "danger": $danger-text-emphasis,
  "light": $light-text-emphasis,
  "dark": $dark-text-emphasis,
) !default;
// scss-docs-end theme-text-map

// scss-docs-start theme-bg-subtle-map
$theme-colors-bg-subtle: (
  "primary": $primary-bg-subtle,
  "secondary": $secondary-bg-subtle,
  "success": $success-bg-subtle,
  "info": $info-bg-subtle,
  "warning": $warning-bg-subtle,
  "danger": $danger-bg-subtle,
  "light": $light-bg-subtle,
  "dark": $dark-bg-subtle,
) !default;
// scss-docs-end theme-bg-subtle-map

// scss-docs-start theme-border-subtle-map
$theme-colors-border-subtle: (
  "primary": $primary-border-subtle,
  "secondary": $secondary-border-subtle,
  "success": $success-border-subtle,
  "info": $info-border-subtle,
  "warning": $warning-border-subtle,
  "danger": $danger-border-subtle,
  "light": $light-border-subtle,
  "dark": $dark-border-subtle,
) !default;
// scss-docs-end theme-border-subtle-map

$theme-colors-text-dark: null !default;
$theme-colors-bg-subtle-dark: null !default;
$theme-colors-border-subtle-dark: null !default;

@if $enable-dark-mode {
  // scss-docs-start theme-text-dark-map
  $theme-colors-text-dark: (
    "primary": $primary-text-emphasis-dark,
    "secondary": $secondary-text-emphasis-dark,
    "success": $success-text-emphasis-dark,
    "info": $info-text-emphasis-dark,
    "warning": $warning-text-emphasis-dark,
    "danger": $danger-text-emphasis-dark,
    "light": $light-text-emphasis-dark,
    "dark": $dark-text-emphasis-dark,
  ) !default;
  // scss-docs-end theme-text-dark-map

  // scss-docs-start theme-bg-subtle-dark-map
  $theme-colors-bg-subtle-dark: (
    "primary": $primary-bg-subtle-dark,
    "secondary": $secondary-bg-subtle-dark,
    "success": $success-bg-subtle-dark,
    "info": $info-bg-subtle-dark,
    "warning": $warning-bg-subtle-dark,
    "danger": $danger-bg-subtle-dark,
    "light": $light-bg-subtle-dark,
    "dark": $dark-bg-subtle-dark,
  ) !default;
  // scss-docs-end theme-bg-subtle-dark-map

  // scss-docs-start theme-border-subtle-dark-map
  $theme-colors-border-subtle-dark: (
    "primary": $primary-border-subtle-dark,
    "secondary": $secondary-border-subtle-dark,
    "success": $success-border-subtle-dark,
    "info": $info-border-subtle-dark,
    "warning": $warning-border-subtle-dark,
    "danger": $danger-border-subtle-dark,
    "light": $light-border-subtle-dark,
    "dark": $dark-border-subtle-dark,
  ) !default;
  // scss-docs-end theme-border-subtle-dark-map
}

// Utilities maps
//
// Extends the default `$theme-colors` maps to help create our utilities.

// Come v6, we'll de-dupe these variables. Until then, for backward compatibility, we keep them to reassign.
// scss-docs-start utilities-colors
$utilities-colors: $theme-colors-rgb !default;
// scss-docs-end utilities-colors

// scss-docs-start utilities-text-colors
$utilities-text: map-merge(
  $utilities-colors,
  (
    "black": to-rgb($black),
    "white": to-rgb($white),
    "body": to-rgb($body-color),
  )
) !default;
$utilities-text-colors: map-loop(
  $utilities-text,
  rgba-css-var,
  "$key",
  "text"
) !default;

$utilities-text-emphasis-colors: (
  "primary-emphasis": var(--#{$prefix}primary-text-emphasis),
  "secondary-emphasis": var(--#{$prefix}secondary-text-emphasis),
  "success-emphasis": var(--#{$prefix}success-text-emphasis),
  "info-emphasis": var(--#{$prefix}info-text-emphasis),
  "warning-emphasis": var(--#{$prefix}warning-text-emphasis),
  "danger-emphasis": var(--#{$prefix}danger-text-emphasis),
  "light-emphasis": var(--#{$prefix}light-text-emphasis),
  "dark-emphasis": var(--#{$prefix}dark-text-emphasis),
) !default;
// scss-docs-end utilities-text-colors

// scss-docs-start utilities-bg-colors
$utilities-bg: map-merge(
  $utilities-colors,
  (
    "black": to-rgb($black),
    "white": to-rgb($white),
    "body": to-rgb($body-bg),
  )
) !default;
$utilities-bg-colors: map-loop(
  $utilities-bg,
  rgba-css-var,
  "$key",
  "bg"
) !default;

$utilities-bg-subtle: (
  "primary-subtle": var(--#{$prefix}primary-bg-subtle),
  "secondary-subtle": var(--#{$prefix}secondary-bg-subtle),
  "success-subtle": var(--#{$prefix}success-bg-subtle),
  "info-subtle": var(--#{$prefix}info-bg-subtle),
  "warning-subtle": var(--#{$prefix}warning-bg-subtle),
  "danger-subtle": var(--#{$prefix}danger-bg-subtle),
  "light-subtle": var(--#{$prefix}light-bg-subtle),
  "dark-subtle": var(--#{$prefix}dark-bg-subtle),
) !default;
// scss-docs-end utilities-bg-colors

// scss-docs-start utilities-border-colors
$utilities-border: map-merge(
  $utilities-colors,
  (
    "black": to-rgb($black),
    "white": to-rgb($white),
  )
) !default;
$utilities-border-colors: map-loop(
  $utilities-border,
  rgba-css-var,
  "$key",
  "border"
) !default;

$utilities-border-subtle: (
  "primary-subtle": var(--#{$prefix}primary-border-subtle),
  "secondary-subtle": var(--#{$prefix}secondary-border-subtle),
  "success-subtle": var(--#{$prefix}success-border-subtle),
  "info-subtle": var(--#{$prefix}info-border-subtle),
  "warning-subtle": var(--#{$prefix}warning-border-subtle),
  "danger-subtle": var(--#{$prefix}danger-border-subtle),
  "light-subtle": var(--#{$prefix}light-border-subtle),
  "dark-subtle": var(--#{$prefix}dark-border-subtle),
) !default;
// scss-docs-end utilities-border-colors

$utilities-links-underline: map-loop(
  $utilities-colors,
  rgba-css-var,
  "$key",
  "link-underline"
) !default;

$negative-spacers: if(
  $enable-negative-margins,
  negativify-map($spacers),
  null
) !default;

$gutters: $spacers !default;

// stylelint-disable scss/dimension-no-non-numeric-values

// SCSS RFS mixin
//
// Automated responsive values for font sizes, paddings, margins and much more
//
// Licensed under MIT (https://github.com/twbs/rfs/blob/main/LICENSE)

// Configuration

// Base value
$rfs-base-value: 1.25rem !default;
$rfs-unit: rem !default;

@if $rfs-unit != rem and $rfs-unit != px {
  @error "`#{$rfs-unit}` is not a valid unit for $rfs-unit. Use `px` or `rem`.";
}

// Breakpoint at where values start decreasing if screen width is smaller
$rfs-breakpoint: 1200px !default;
$rfs-breakpoint-unit: px !default;

@if $rfs-breakpoint-unit !=
  px and
  $rfs-breakpoint-unit !=
  em and
  $rfs-breakpoint-unit !=
  rem
{
  @error "`#{$rfs-breakpoint-unit}` is not a valid unit for $rfs-breakpoint-unit. Use `px`, `em` or `rem`.";
}

// Resize values based on screen height and width
$rfs-two-dimensional: false !default;

// Factor of decrease
$rfs-factor: 10 !default;

@if type-of($rfs-factor) != number or $rfs-factor <= 1 {
  @error "`#{$rfs-factor}` is not a valid  $rfs-factor, it must be greater than 1.";
}

// Mode. Possibilities: "min-media-query", "max-media-query"
$rfs-mode: min-media-query !default;

// Generate enable or disable classes. Possibilities: false, "enable" or "disable"
$rfs-class: false !default;

// 1 rem = $rfs-rem-value px
$rfs-rem-value: 16 !default;

// Safari iframe resize bug: https://github.com/twbs/rfs/issues/14
$rfs-safari-iframe-resize-bug-fix: false !default;

// Disable RFS by setting $enable-rfs to false
$enable-rfs: true !default;

// Cache $rfs-base-value unit
$rfs-base-value-unit: unit($rfs-base-value);

@function divide($dividend, $divisor, $precision: 10) {
  $sign: if(
    $dividend > 0 and $divisor > 0 or $dividend < 0 and $divisor < 0,
    1,
    -1
  );
  $dividend: abs($dividend);
  $divisor: abs($divisor);
  @if $dividend == 0 {
    @return 0;
  }
  @if $divisor == 0 {
    @error "Cannot divide by 0";
  }
  $remainder: $dividend;
  $result: 0;
  $factor: 10;
  @while ($remainder > 0 and $precision >= 0) {
    $quotient: 0;
    @while ($remainder >= $divisor) {
      $remainder: $remainder - $divisor;
      $quotient: $quotient + 1;
    }
    $result: $result * 10 + $quotient;
    $factor: $factor * 0.1;
    $remainder: $remainder * 10;
    $precision: $precision - 1;
    @if ($precision < 0 and $remainder >= $divisor * 5) {
      $result: $result + 1;
    }
  }
  $result: $result * $factor * $sign;
  $dividend-unit: unit($dividend);
  $divisor-unit: unit($divisor);
  $unit-map: (
    "px": 1px,
    "rem": 1rem,
    "em": 1em,
    "%": 1%,
  );
  @if (
    $dividend-unit != $divisor-unit and map-has-key($unit-map, $dividend-unit)
  ) {
    $result: $result * map-get($unit-map, $dividend-unit);
  }
  @return $result;
}

// Remove px-unit from $rfs-base-value for calculations
@if $rfs-base-value-unit == px {
  $rfs-base-value: divide($rfs-base-value, $rfs-base-value * 0 + 1);
} @else if $rfs-base-value-unit == rem {
  $rfs-base-value: divide(
    $rfs-base-value,
    divide($rfs-base-value * 0 + 1, $rfs-rem-value)
  );
}

// Cache $rfs-breakpoint unit to prevent multiple calls
$rfs-breakpoint-unit-cache: unit($rfs-breakpoint);

// Remove unit from $rfs-breakpoint for calculations
@if $rfs-breakpoint-unit-cache == px {
  $rfs-breakpoint: divide($rfs-breakpoint, $rfs-breakpoint * 0 + 1);
} @else if
  $rfs-breakpoint-unit-cache ==
  rem or
  $rfs-breakpoint-unit-cache ==
  "em"
{
  $rfs-breakpoint: divide(
    $rfs-breakpoint,
    divide($rfs-breakpoint * 0 + 1, $rfs-rem-value)
  );
}

// Calculate the media query value
$rfs-mq-value: if(
  $rfs-breakpoint-unit == px,
  #{$rfs-breakpoint}px,
  #{divide($rfs-breakpoint, $rfs-rem-value)}#{$rfs-breakpoint-unit}
);
$rfs-mq-property-width: if($rfs-mode == max-media-query, max-width, min-width);
$rfs-mq-property-height: if(
  $rfs-mode == max-media-query,
  max-height,
  min-height
);

// Internal mixin used to determine which media query needs to be used
@mixin _rfs-media-query {
  @if $rfs-two-dimensional {
    @if $rfs-mode == max-media-query {
      @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}), (#{$rfs-mq-property-height}: #{$rfs-mq-value}) {
        @content;
      }
    } @else {
      @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}) and (#{$rfs-mq-property-height}: #{$rfs-mq-value}) {
        @content;
      }
    }
  } @else {
    @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}) {
      @content;
    }
  }
}

// Internal mixin that adds disable classes to the selector if needed.
@mixin _rfs-rule {
  @if $rfs-class == disable and $rfs-mode == max-media-query {
    // Adding an extra class increases specificity, which prevents the media query to override the property
    &,
    .disable-rfs &,
    &.disable-rfs {
      @content;
    }
  } @else if $rfs-class == enable and $rfs-mode == min-media-query {
    .enable-rfs &,
    &.enable-rfs {
      @content;
    }
  } @else {
    @content;
  }
}

// Internal mixin that adds enable classes to the selector if needed.
@mixin _rfs-media-query-rule {
  @if $rfs-class == enable {
    @if $rfs-mode == min-media-query {
      @content;
    }

    @include _rfs-media-query() {
      .enable-rfs &,
      &.enable-rfs {
        @content;
      }
    }
  } @else {
    @if $rfs-class == disable and $rfs-mode == min-media-query {
      .disable-rfs &,
      &.disable-rfs {
        @content;
      }
    }
    @include _rfs-media-query() {
      @content;
    }
  }
}

// Helper function to get the formatted non-responsive value
@function rfs-value($values) {
  // Convert to list
  $values: if(type-of($values) != list, ($values), $values);

  $val: "";

  // Loop over each value and calculate value
  @each $value in $values {
    @if $value == 0 {
      $val: $val + " 0";
    } @else {
      // Cache $value unit
      $unit: if(type-of($value) == "number", unit($value), false);

      @if $unit == px {
        // Convert to rem if needed
        $val: $val +
          " " +
          if(
            $rfs-unit == rem,
            #{divide($value, $value * 0 + $rfs-rem-value)}rem,
            $value
          );
      } @else if $unit == rem {
        // Convert to px if needed
        $val: $val +
          " " +
          if(
            $rfs-unit == px,
            #{divide($value, $value * 0 + 1) * $rfs-rem-value}px,
            $value
          );
      } @else {
        // If $value isn't a number (like inherit) or $value has a unit (not px or rem, like 1.5em) or $ is 0, just print the value
        $val: $val + " " + $value;
      }
    }
  }

  // Remove first space
  @return unquote(str-slice($val, 2));
}

// Helper function to get the responsive value calculated by RFS
@function rfs-fluid-value($values) {
  // Convert to list
  $values: if(type-of($values) != list, ($values), $values);

  $val: "";

  // Loop over each value and calculate value
  @each $value in $values {
    @if $value == 0 {
      $val: $val + " 0";
    } @else {
      // Cache $value unit
      $unit: if(type-of($value) == "number", unit($value), false);

      // If $value isn't a number (like inherit) or $value has a unit (not px or rem, like 1.5em) or $ is 0, just print the value
      @if not $unit or $unit != px and $unit != rem {
        $val: $val + " " + $value;
      } @else {
        // Remove unit from $value for calculations
        $value: divide(
          $value,
          $value * 0 + if($unit == px, 1, divide(1, $rfs-rem-value))
        );

        // Only add the media query if the value is greater than the minimum value
        @if abs($value) <= $rfs-base-value or not $enable-rfs {
          $val: $val +
            " " +
            if(
              $rfs-unit == rem,
              #{divide($value, $rfs-rem-value)}rem,
              #{$value}px
            );
        } @else {
          // Calculate the minimum value
          $value-min: $rfs-base-value +
            divide(abs($value) - $rfs-base-value, $rfs-factor);

          // Calculate difference between $value and the minimum value
          $value-diff: abs($value) - $value-min;

          // Base value formatting
          $min-width: if(
            $rfs-unit == rem,
            #{divide($value-min, $rfs-rem-value)}rem,
            #{$value-min}px
          );

          // Use negative value if needed
          $min-width: if($value < 0, -$min-width, $min-width);

          // Use `vmin` if two-dimensional is enabled
          $variable-unit: if($rfs-two-dimensional, vmin, vw);

          // Calculate the variable width between 0 and $rfs-breakpoint
          $variable-width: #{divide(
              $value-diff * 100,
              $rfs-breakpoint
            )}#{$variable-unit};

          // Return the calculated value
          $val: $val +
            " calc(" +
            $min-width +
            if($value < 0, " - ", " + ") +
            $variable-width +
            ")";
        }
      }
    }
  }

  // Remove first space
  @return unquote(str-slice($val, 2));
}

// RFS mixin
@mixin rfs($values, $property: font-size) {
  @if $values != null {
    $val: rfs-value($values);
    $fluid-val: rfs-fluid-value($values);

    // Do not print the media query if responsive & non-responsive values are the same
    @if $val == $fluid-val {
      #{$property}: $val;
    } @else {
      @include _rfs-rule() {
        #{$property}: if($rfs-mode == max-media-query, $val, $fluid-val);

        // Include safari iframe resize fix if needed
        min-width: if($rfs-safari-iframe-resize-bug-fix, (0 * 1vw), null);
      }

      @include _rfs-media-query-rule() {
        #{$property}: if($rfs-mode == max-media-query, $fluid-val, $val);
      }
    }
  }
}

// Shorthand helper mixins
@mixin font-size($value) {
  @include rfs($value);
}

@mixin padding($value) {
  @include rfs($value, padding);
}

@mixin padding-top($value) {
  @include rfs($value, padding-top);
}

@mixin padding-right($value) {
  @include rfs($value, padding-right);
}

@mixin padding-bottom($value) {
  @include rfs($value, padding-bottom);
}

@mixin padding-left($value) {
  @include rfs($value, padding-left);
}

@mixin margin($value) {
  @include rfs($value, margin);
}

@mixin margin-top($value) {
  @include rfs($value, margin-top);
}

@mixin margin-right($value) {
  @include rfs($value, margin-right);
}

@mixin margin-bottom($value) {
  @include rfs($value, margin-bottom);
}

@mixin margin-left($value) {
  @include rfs($value, margin-left);
}

// Deprecate mixin
//
// This mixin can be used to deprecate mixins or functions.
// `$enable-deprecation-messages` is a global variable, `$ignore-warning` is a variable that can be passed to
// some deprecated mixins to suppress the warning (for example if the mixin is still be used in the current version of Bootstrap)
@mixin deprecate(
  $name,
  $deprecate-version,
  $remove-version,
  $ignore-warning: false
) {
  @if ($enable-deprecation-messages != false and $ignore-warning != true) {
    @warn "#{$name} has been deprecated as of #{$deprecate-version}. It will be removed entirely in #{$remove-version}.";
  }
}

// Breakpoint viewport sizes and media queries.
//
// Breakpoints are defined as a map of (name: minimum width), order from small to large:
//
//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px)
//
// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.

// Name of the next breakpoint, or null for the last breakpoint.
//
//    >> breakpoint-next(sm)
//    md
//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))
//    md
//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl xxl))
//    md
@function breakpoint-next(
  $name,
  $breakpoints: $grid-breakpoints,
  $breakpoint-names: map-keys($breakpoints)
) {
  $n: index($breakpoint-names, $name);
  @if not $n {
    @error "breakpoint `#{$name}` not found in `#{$breakpoints}`";
  }
  @return if(
    $n < length($breakpoint-names),
    nth($breakpoint-names, $n + 1),
    null
  );
}

// Minimum breakpoint width. Null for the smallest (first) breakpoint.
//
//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))
//    576px
@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {
  $min: map-get($breakpoints, $name);
  @return if($min != 0, $min, null);
}

// Maximum breakpoint width.
// The maximum value is reduced by 0.02px to work around the limitations of
// `min-` and `max-` prefixes and viewports with fractional widths.
// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max
// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.
// See https://bugs.webkit.org/show_bug.cgi?id=178261
//
//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))
//    767.98px
@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {
  $max: map-get($breakpoints, $name);
  @return if($max and $max > 0, $max - 0.02, null);
}

// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.
// Useful for making responsive utilities.
//
//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))
//    ""  (Returns a blank string)
//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))
//    "-sm"
@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {
  @return if(breakpoint-min($name, $breakpoints) == null, "", "-#{$name}");
}

// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.
// Makes the @content apply to the given breakpoint and wider.
@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($name, $breakpoints);
  @if $min {
    @media (min-width: $min) {
      @content;
    }
  } @else {
    @content;
  }
}

// Media of at most the maximum breakpoint width. No query for the largest breakpoint.
// Makes the @content apply to the given breakpoint and narrower.
@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {
  $max: breakpoint-max($name, $breakpoints);
  @if $max {
    @media (max-width: $max) {
      @content;
    }
  } @else {
    @content;
  }
}

// Media that spans multiple breakpoint widths.
// Makes the @content apply between the min and max breakpoints
@mixin media-breakpoint-between(
  $lower,
  $upper,
  $breakpoints: $grid-breakpoints
) {
  $min: breakpoint-min($lower, $breakpoints);
  $max: breakpoint-max($upper, $breakpoints);

  @if $min != null and $max != null {
    @media (min-width: $min) and (max-width: $max) {
      @content;
    }
  } @else if $max == null {
    @include media-breakpoint-up($lower, $breakpoints) {
      @content;
    }
  } @else if $min == null {
    @include media-breakpoint-down($upper, $breakpoints) {
      @content;
    }
  }
}

// Media between the breakpoint's minimum and maximum widths.
// No minimum for the smallest breakpoint, and no maximum for the largest one.
// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.
@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($name, $breakpoints);
  $next: breakpoint-next($name, $breakpoints);
  $max: breakpoint-max($next, $breakpoints);

  @if $min != null and $max != null {
    @media (min-width: $min) and (max-width: $max) {
      @content;
    }
  } @else if $max == null {
    @include media-breakpoint-up($name, $breakpoints) {
      @content;
    }
  } @else if $min == null {
    @include media-breakpoint-down($next, $breakpoints) {
      @content;
    }
  }
}
// scss-docs-start color-mode-mixin
@mixin color-mode($mode: light, $root: false) {
  @if $color-mode-type == "media-query" {
    @if $root == true {
      @media (prefers-color-scheme: $mode) {
        :root {
          @content;
        }
      }
    } @else {
      @media (prefers-color-scheme: $mode) {
        @content;
      }
    }
  } @else {
    [data-bs-theme="#{$mode}"] {
      @content;
    }
  }
}
// scss-docs-end color-mode-mixin
// scss-docs-start mixin-color-scheme
@mixin color-scheme($name) {
  @media (prefers-color-scheme: #{$name}) {
    @content;
  }
}
// scss-docs-end mixin-color-scheme
// Image Mixins
// - Responsive image
// - Retina image

// Responsive image
//
// Keep images from scaling beyond the width of their parents.

@mixin img-fluid {
  // Part 1: Set a maximum relative to the parent
  max-width: 100%;
  // Part 2: Override the height to auto, otherwise images will be stretched
  // when setting a width and height attribute on the img element.
  height: auto;
}
// Resize anything

@mixin resizable($direction) {
  overflow: auto; // Per CSS3 UI, `resize` only applies when `overflow` isn't `visible`
  resize: $direction; // Options: horizontal, vertical, both
}
// stylelint-disable declaration-no-important

// Hide content visually while keeping it accessible to assistive technologies
//
// See: https://www.a11yproject.com/posts/2013-01-11-how-to-hide-content/
// See: https://kittygiraudel.com/2016/10/13/css-hide-and-seek/

@mixin visually-hidden() {
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important; // Fix for https://github.com/twbs/bootstrap/issues/25686
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;

  // Fix for positioned table caption that could become anonymous cells
  &:not(caption) {
    position: absolute !important;
  }
}

// Use to only display content when it's focused, or one of its child elements is focused
// (i.e. when focus is within the element/container that the class was applied to)
//
// Useful for "Skip to main content" links; see https://www.w3.org/TR/2013/NOTE-WCAG20-TECHS-20130905/G1

@mixin visually-hidden-focusable() {
  &:not(:focus):not(:focus-within) {
    @include visually-hidden();
  }
}
@mixin reset-text {
  font-family: $font-family-base;
  // We deliberately do NOT reset font-size or overflow-wrap / word-wrap.
  font-style: normal;
  font-weight: $font-weight-normal;
  line-height: $line-height-base;
  text-align: left; // Fallback for where `start` is not supported
  text-align: start;
  text-decoration: none;
  text-shadow: none;
  text-transform: none;
  letter-spacing: normal;
  word-break: normal;
  white-space: normal;
  word-spacing: normal;
  line-break: auto;
}
// Text truncate
// Requires inline-block or block for proper styling

@mixin text-truncate() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
// Utility generator
// Used to generate utilities & print utilities
@mixin generate-utility($utility, $infix: "", $is-rfs-media-query: false) {
  $values: map-get($utility, values);

  // If the values are a list or string, convert it into a map
  @if type-of($values) == "string" or type-of(nth($values, 1)) != "list" {
    $values: zip($values, $values);
  }

  @each $key, $value in $values {
    $properties: map-get($utility, property);

    // Multiple properties are possible, for example with vertical or horizontal margins or paddings
    @if type-of($properties) == "string" {
      $properties: append((), $properties);
    }

    // Use custom class if present
    $property-class: if(
      map-has-key($utility, class),
      map-get($utility, class),
      nth($properties, 1)
    );
    $property-class: if($property-class == null, "", $property-class);

    // Use custom CSS variable name if present, otherwise default to `class`
    $css-variable-name: if(
      map-has-key($utility, css-variable-name),
      map-get($utility, css-variable-name),
      map-get($utility, class)
    );

    // State params to generate pseudo-classes
    $state: if(map-has-key($utility, state), map-get($utility, state), ());

    $infix: if(
      $property-class == "" and str-slice($infix, 1, 1) == "-",
      str-slice($infix, 2),
      $infix
    );

    // Don't prefix if value key is null (e.g. with shadow class)
    $property-class-modifier: if(
      $key,
      if($property-class == "" and $infix == "", "", "-") + $key,
      ""
    );

    @if map-get($utility, rfs) {
      // Inside the media query
      @if $is-rfs-media-query {
        $val: rfs-value($value);

        // Do not render anything if fluid and non fluid values are the same
        $value: if($val == rfs-fluid-value($value), null, $val);
      } @else {
        $value: rfs-fluid-value($value);
      }
    }

    $is-css-var: map-get($utility, css-var);
    $is-local-vars: map-get($utility, local-vars);
    $is-rtl: map-get($utility, rtl);

    @if $value != null {
      @if $is-rtl == false {
        /* rtl:begin:remove */
      }

      @if $is-css-var {
        .#{$property-class + $infix + $property-class-modifier} {
          --#{$prefix}#{$css-variable-name}: #{$value};
        }

        @each $pseudo in $state {
          .#{$property-class
            + $infix
            + $property-class-modifier}-#{$pseudo}:#{$pseudo} {
            --#{$prefix}#{$css-variable-name}: #{$value};
          }
        }
      } @else {
        .#{$property-class + $infix + $property-class-modifier} {
          @each $property in $properties {
            @if $is-local-vars {
              @each $local-var, $variable in $is-local-vars {
                --#{$prefix}#{$local-var}: #{$variable};
              }
            }
            #{$property}: $value
              if($enable-important-utilities, !important, null);
          }
        }

        @each $pseudo in $state {
          .#{$property-class
            + $infix
            + $property-class-modifier}-#{$pseudo}:#{$pseudo} {
            @each $property in $properties {
              @if $is-local-vars {
                @each $local-var, $variable in $is-local-vars {
                  --#{$prefix}#{$local-var}: #{$variable};
                }
              }
              #{$property}: $value
                if($enable-important-utilities, !important, null);
            }
          }
        }
      }

      @if $is-rtl == false {
        /* rtl:end:remove */
      }
    }
  }
}
// Shared between modals and offcanvases
@mixin overlay-backdrop($zindex, $backdrop-bg, $backdrop-opacity) {
  position: fixed;
  top: 0;
  left: 0;
  z-index: $zindex;
  width: 100vw;
  height: 100vh;
  background-color: $backdrop-bg;

  // Fade for backdrop
  &.fade {
    opacity: 0;
  }
  &.show {
    opacity: $backdrop-opacity;
  }
}
// Button variants
//
// Easily pump out default styles, as well as :hover, :focus, :active,
// and disabled options for all buttons

// scss-docs-start btn-variant-mixin
@mixin button-variant(
  $background,
  $border,
  $color: color-contrast($background),
  $hover-background:
    if(
      $color == $color-contrast-light,
      shade-color($background, $btn-hover-bg-shade-amount),
      tint-color($background, $btn-hover-bg-tint-amount)
    ),
  $hover-border:
    if(
      $color == $color-contrast-light,
      shade-color($border, $btn-hover-border-shade-amount),
      tint-color($border, $btn-hover-border-tint-amount)
    ),
  $hover-color: color-contrast($hover-background),
  $active-background:
    if(
      $color == $color-contrast-light,
      shade-color($background, $btn-active-bg-shade-amount),
      tint-color($background, $btn-active-bg-tint-amount)
    ),
  $active-border:
    if(
      $color == $color-contrast-light,
      shade-color($border, $btn-active-border-shade-amount),
      tint-color($border, $btn-active-border-tint-amount)
    ),
  $active-color: color-contrast($active-background),
  $disabled-background: $background,
  $disabled-border: $border,
  $disabled-color: color-contrast($disabled-background)
) {
  --#{$prefix}btn-color: #{$color};
  --#{$prefix}btn-bg: #{$background};
  --#{$prefix}btn-border-color: #{$border};
  --#{$prefix}btn-hover-color: #{$hover-color};
  --#{$prefix}btn-hover-bg: #{$hover-background};
  --#{$prefix}btn-hover-border-color: #{$hover-border};
  --#{$prefix}btn-focus-shadow-rgb: #{to-rgb(mix($color, $border, 15%))};
  --#{$prefix}btn-active-color: #{$active-color};
  --#{$prefix}btn-active-bg: #{$active-background};
  --#{$prefix}btn-active-border-color: #{$active-border};
  --#{$prefix}btn-active-shadow: #{$btn-active-box-shadow};
  --#{$prefix}btn-disabled-color: #{$disabled-color};
  --#{$prefix}btn-disabled-bg: #{$disabled-background};
  --#{$prefix}btn-disabled-border-color: #{$disabled-border};
}
// scss-docs-end btn-variant-mixin

// scss-docs-start btn-outline-variant-mixin
@mixin button-outline-variant(
  $color,
  $color-hover: color-contrast($color),
  $active-background: $color,
  $active-border: $color,
  $active-color: color-contrast($active-background)
) {
  --#{$prefix}btn-color: #{$color};
  --#{$prefix}btn-border-color: #{$color};
  --#{$prefix}btn-hover-color: #{$color-hover};
  --#{$prefix}btn-hover-bg: #{$active-background};
  --#{$prefix}btn-hover-border-color: #{$active-border};
  --#{$prefix}btn-focus-shadow-rgb: #{to-rgb($color)};
  --#{$prefix}btn-active-color: #{$active-color};
  --#{$prefix}btn-active-bg: #{$active-background};
  --#{$prefix}btn-active-border-color: #{$active-border};
  --#{$prefix}btn-active-shadow: #{$btn-active-box-shadow};
  --#{$prefix}btn-disabled-color: #{$color};
  --#{$prefix}btn-disabled-bg: transparent;
  --#{$prefix}btn-disabled-border-color: #{$color};
  --#{$prefix}gradient: none;
}
// scss-docs-end btn-outline-variant-mixin

// scss-docs-start btn-size-mixin
@mixin button-size($padding-y, $padding-x, $font-size, $border-radius) {
  --#{$prefix}btn-padding-y: #{$padding-y};
  --#{$prefix}btn-padding-x: #{$padding-x};
  @include rfs($font-size, --#{$prefix}btn-font-size);
  --#{$prefix}btn-border-radius: #{$border-radius};
}
// scss-docs-end btn-size-mixin
// scss-docs-start caret-mixins
@mixin caret-down($width: $caret-width) {
  border-top: $width solid;
  border-right: $width solid transparent;
  border-bottom: 0;
  border-left: $width solid transparent;
}

@mixin caret-up($width: $caret-width) {
  border-top: 0;
  border-right: $width solid transparent;
  border-bottom: $width solid;
  border-left: $width solid transparent;
}

@mixin caret-end($width: $caret-width) {
  border-top: $width solid transparent;
  border-right: 0;
  border-bottom: $width solid transparent;
  border-left: $width solid;
}

@mixin caret-start($width: $caret-width) {
  border-top: $width solid transparent;
  border-right: $width solid;
  border-bottom: $width solid transparent;
}

@mixin caret(
  $direction: down,
  $width: $caret-width,
  $spacing: $caret-spacing,
  $vertical-align: $caret-vertical-align
) {
  @if $enable-caret {
    &::after {
      display: inline-block;
      margin-left: $spacing;
      vertical-align: $vertical-align;
      content: "";
      @if $direction == down {
        @include caret-down($width);
      } @else if $direction == up {
        @include caret-up($width);
      } @else if $direction == end {
        @include caret-end($width);
      }
    }

    @if $direction == start {
      &::after {
        display: none;
      }

      &::before {
        display: inline-block;
        margin-right: $spacing;
        vertical-align: $vertical-align;
        content: "";
        @include caret-start($width);
      }
    }

    &:empty::after {
      margin-left: 0;
    }
  }
}
// scss-docs-end caret-mixins
// Pagination

// scss-docs-start pagination-mixin
@mixin pagination-size($padding-y, $padding-x, $font-size, $border-radius) {
  --#{$prefix}pagination-padding-x: #{$padding-x};
  --#{$prefix}pagination-padding-y: #{$padding-y};
  @include rfs($font-size, --#{$prefix}pagination-font-size);
  --#{$prefix}pagination-border-radius: #{$border-radius};
}
// scss-docs-end pagination-mixin
// Lists

// Unstyled keeps list items block level, just removes default browser padding and list-style
@mixin list-unstyled {
  padding-left: 0;
  list-style: none;
}
// This mixin uses an `if()` technique to be compatible with Dart Sass
// See https://github.com/sass/sass/issues/1873#issuecomment-152293725 for more details

// scss-docs-start form-validation-mixins
@mixin form-validation-state-selector($state) {
  @if ($state == "valid" or $state == "invalid") {
    .was-validated #{if(&, "&", "")}:#{$state},
    #{if(&, "&", "")}.is-#{$state} {
      @content;
    }
  } @else {
    #{if(&, "&", "")}.is-#{$state} {
      @content;
    }
  }
}

@mixin form-validation-state(
  $state,
  $color,
  $icon,
  $tooltip-color: color-contrast($color),
  $tooltip-bg-color: rgba($color, $form-feedback-tooltip-opacity),
  $focus-box-shadow: 0 0 $input-btn-focus-blur $input-focus-width
    rgba($color, $input-btn-focus-color-opacity),
  $border-color: $color
) {
  .#{$state}-feedback {
    display: none;
    width: 100%;
    margin-top: $form-feedback-margin-top;
    @include font-size($form-feedback-font-size);
    font-style: $form-feedback-font-style;
    color: $color;
  }

  .#{$state}-tooltip {
    position: absolute;
    top: 100%;
    z-index: 5;
    display: none;
    max-width: 100%; // Contain to parent when possible
    padding: $form-feedback-tooltip-padding-y $form-feedback-tooltip-padding-x;
    margin-top: 0.1rem;
    @include font-size($form-feedback-tooltip-font-size);
    line-height: $form-feedback-tooltip-line-height;
    color: $tooltip-color;
    background-color: $tooltip-bg-color;
    @include border-radius($form-feedback-tooltip-border-radius);
  }

  @include form-validation-state-selector($state) {
    ~ .#{$state}-feedback,
    ~ .#{$state}-tooltip {
      display: block;
    }
  }

  .form-control {
    @include form-validation-state-selector($state) {
      border-color: $border-color;

      @if $enable-validation-icons {
        padding-right: $input-height-inner;
        background-image: escape-svg($icon);
        background-repeat: no-repeat;
        background-position: right $input-height-inner-quarter center;
        background-size: $input-height-inner-half $input-height-inner-half;
      }

      &:focus {
        border-color: $border-color;
        box-shadow: $focus-box-shadow;
      }
    }
  }

  // stylelint-disable-next-line selector-no-qualifying-type
  textarea.form-control {
    @include form-validation-state-selector($state) {
      @if $enable-validation-icons {
        padding-right: $input-height-inner;
        background-position: top
          $input-height-inner-quarter
          right
          $input-height-inner-quarter;
      }
    }
  }

  .form-select {
    @include form-validation-state-selector($state) {
      border-color: $border-color;

      @if $enable-validation-icons {
        &:not([multiple]):not([size]),
        &:not([multiple])[size="1"] {
          --#{$prefix}form-select-bg-icon: #{escape-svg($icon)};
          padding-right: $form-select-feedback-icon-padding-end;
          background-position: $form-select-bg-position,
            $form-select-feedback-icon-position;
          background-size: $form-select-bg-size, $form-select-feedback-icon-size;
        }
      }

      &:focus {
        border-color: $border-color;
        box-shadow: $focus-box-shadow;
      }
    }
  }

  .form-control-color {
    @include form-validation-state-selector($state) {
      @if $enable-validation-icons {
        width: add($form-color-width, $input-height-inner);
      }
    }
  }

  .form-check-input {
    @include form-validation-state-selector($state) {
      border-color: $border-color;

      &:checked {
        background-color: $color;
      }

      &:focus {
        box-shadow: $focus-box-shadow;
      }

      ~ .form-check-label {
        color: $color;
      }
    }
  }
  .form-check-inline .form-check-input {
    ~ .#{$state}-feedback {
      margin-left: 0.5em;
    }
  }

  .input-group {
    > .form-control:not(:focus),
    > .form-select:not(:focus),
    > .form-floating:not(:focus-within) {
      @include form-validation-state-selector($state) {
        @if $state == "valid" {
          z-index: 3;
        } @else if $state == "invalid" {
          z-index: 4;
        }
      }
    }
  }
}
// scss-docs-end form-validation-mixins
// scss-docs-start table-variant
@mixin table-variant($state, $background) {
  .table-#{$state} {
    $color: color-contrast(opaque($body-bg, $background));
    $hover-bg: mix($color, $background, percentage($table-hover-bg-factor));
    $striped-bg: mix($color, $background, percentage($table-striped-bg-factor));
    $active-bg: mix($color, $background, percentage($table-active-bg-factor));
    $table-border-color: mix(
      $color,
      $background,
      percentage($table-border-factor)
    );

    --#{$prefix}table-color: #{$color};
    --#{$prefix}table-bg: #{$background};
    --#{$prefix}table-border-color: #{$table-border-color};
    --#{$prefix}table-striped-bg: #{$striped-bg};
    --#{$prefix}table-striped-color: #{color-contrast($striped-bg)};
    --#{$prefix}table-active-bg: #{$active-bg};
    --#{$prefix}table-active-color: #{color-contrast($active-bg)};
    --#{$prefix}table-hover-bg: #{$hover-bg};
    --#{$prefix}table-hover-color: #{color-contrast($hover-bg)};

    color: var(--#{$prefix}table-color);
    border-color: var(--#{$prefix}table-border-color);
  }
}
// scss-docs-end table-variant
// stylelint-disable property-disallowed-list
// Single side border-radius

// Helper function to replace negative values with 0
@function valid-radius($radius) {
  $return: ();
  @each $value in $radius {
    @if type-of($value) == number {
      $return: append($return, max($value, 0));
    } @else {
      $return: append($return, $value);
    }
  }
  @return $return;
}

// scss-docs-start border-radius-mixins
@mixin border-radius($radius: $border-radius, $fallback-border-radius: false) {
  @if $enable-rounded {
    border-radius: valid-radius($radius);
  } @else if $fallback-border-radius != false {
    border-radius: $fallback-border-radius;
  }
}

@mixin border-top-radius($radius: $border-radius) {
  @if $enable-rounded {
    border-top-left-radius: valid-radius($radius);
    border-top-right-radius: valid-radius($radius);
  }
}

@mixin border-end-radius($radius: $border-radius) {
  @if $enable-rounded {
    border-top-right-radius: valid-radius($radius);
    border-bottom-right-radius: valid-radius($radius);
  }
}

@mixin border-bottom-radius($radius: $border-radius) {
  @if $enable-rounded {
    border-bottom-right-radius: valid-radius($radius);
    border-bottom-left-radius: valid-radius($radius);
  }
}

@mixin border-start-radius($radius: $border-radius) {
  @if $enable-rounded {
    border-top-left-radius: valid-radius($radius);
    border-bottom-left-radius: valid-radius($radius);
  }
}

@mixin border-top-start-radius($radius: $border-radius) {
  @if $enable-rounded {
    border-top-left-radius: valid-radius($radius);
  }
}

@mixin border-top-end-radius($radius: $border-radius) {
  @if $enable-rounded {
    border-top-right-radius: valid-radius($radius);
  }
}

@mixin border-bottom-end-radius($radius: $border-radius) {
  @if $enable-rounded {
    border-bottom-right-radius: valid-radius($radius);
  }
}

@mixin border-bottom-start-radius($radius: $border-radius) {
  @if $enable-rounded {
    border-bottom-left-radius: valid-radius($radius);
  }
}
// scss-docs-end border-radius-mixins
@mixin box-shadow($shadow...) {
  @if $enable-shadows {
    $result: ();

    @each $value in $shadow {
      @if $value != null {
        $result: append($result, $value, "comma");
      }
      @if $value == none and length($shadow) > 1 {
        @warn "The keyword 'none' must be used as a single argument.";
      }
    }

    @if (length($result) > 0) {
      box-shadow: $result;
    }
  }
}
// Gradients

// scss-docs-start gradient-bg-mixin
@mixin gradient-bg($color: null) {
  background-color: $color;

  @if $enable-gradients {
    background-image: var(--#{$prefix}gradient);
  }
}
// scss-docs-end gradient-bg-mixin

// scss-docs-start gradient-mixins
// Horizontal gradient, from left to right
//
// Creates two color stops, start and end, by specifying a color and position for each color stop.
@mixin gradient-x(
  $start-color: $gray-700,
  $end-color: $gray-800,
  $start-percent: 0%,
  $end-percent: 100%
) {
  background-image: linear-gradient(
    to right,
    $start-color $start-percent,
    $end-color $end-percent
  );
}

// Vertical gradient, from top to bottom
//
// Creates two color stops, start and end, by specifying a color and position for each color stop.
@mixin gradient-y(
  $start-color: $gray-700,
  $end-color: $gray-800,
  $start-percent: null,
  $end-percent: null
) {
  background-image: linear-gradient(
    to bottom,
    $start-color $start-percent,
    $end-color $end-percent
  );
}

@mixin gradient-directional(
  $start-color: $gray-700,
  $end-color: $gray-800,
  $deg: 45deg
) {
  background-image: linear-gradient($deg, $start-color, $end-color);
}

@mixin gradient-x-three-colors(
  $start-color: $blue,
  $mid-color: $purple,
  $color-stop: 50%,
  $end-color: $red
) {
  background-image: linear-gradient(
    to right,
    $start-color,
    $mid-color $color-stop,
    $end-color
  );
}

@mixin gradient-y-three-colors(
  $start-color: $blue,
  $mid-color: $purple,
  $color-stop: 50%,
  $end-color: $red
) {
  background-image: linear-gradient(
    $start-color,
    $mid-color $color-stop,
    $end-color
  );
}

@mixin gradient-radial($inner-color: $gray-700, $outer-color: $gray-800) {
  background-image: radial-gradient(circle, $inner-color, $outer-color);
}

@mixin gradient-striped($color: rgba($white, 0.15), $angle: 45deg) {
  background-image: linear-gradient(
    $angle,
    $color 25%,
    transparent 25%,
    transparent 50%,
    $color 50%,
    $color 75%,
    transparent 75%,
    transparent
  );
}
// scss-docs-end gradient-mixins
// stylelint-disable property-disallowed-list
@mixin transition($transition...) {
  @if length($transition) == 0 {
    $transition: $transition-base;
  }

  @if length($transition) > 1 {
    @each $value in $transition {
      @if $value == null or $value == none {
        @warn "The keyword 'none' or 'null' must be used as a single argument.";
      }
    }
  }

  @if $enable-transitions {
    @if nth($transition, 1) != null {
      transition: $transition;
    }

    @if $enable-reduced-motion and
      nth($transition, 1) !=
      null and
      nth($transition, 1) !=
      none
    {
      @media (prefers-reduced-motion: reduce) {
        transition: none;
      }
    }
  }
}
// scss-docs-start clearfix
@mixin clearfix() {
  &::after {
    display: block;
    clear: both;
    content: "";
  }
}
// scss-docs-end clearfix
// Container mixins

@mixin make-container($gutter: $container-padding-x) {
  --#{$prefix}gutter-x: #{$gutter};
  --#{$prefix}gutter-y: 0;
  width: 100%;
  padding-right: calc(
    var(--#{$prefix}gutter-x) * 0.5
  ); // stylelint-disable-line function-disallowed-list
  padding-left: calc(
    var(--#{$prefix}gutter-x) * 0.5
  ); // stylelint-disable-line function-disallowed-list
  margin-right: auto;
  margin-left: auto;
}
// Grid system
//
// Generate semantic grid columns with these mixins.

@mixin make-row($gutter: $grid-gutter-width) {
  --#{$prefix}gutter-x: #{$gutter};
  --#{$prefix}gutter-y: 0;
  display: flex;
  flex-wrap: wrap;
  // TODO: Revisit calc order after https://github.com/react-bootstrap/react-bootstrap/issues/6039 is fixed
  margin-top: calc(
    -1 * var(--#{$prefix}gutter-y)
  ); // stylelint-disable-line function-disallowed-list
  margin-right: calc(
    -0.5 * var(--#{$prefix}gutter-x)
  ); // stylelint-disable-line function-disallowed-list
  margin-left: calc(
    -0.5 * var(--#{$prefix}gutter-x)
  ); // stylelint-disable-line function-disallowed-list
}

@mixin make-col-ready() {
  // Add box sizing if only the grid is loaded
  box-sizing: if(
    variable-exists(include-column-box-sizing) and $include-column-box-sizing,
    border-box,
    null
  );
  // Prevent columns from becoming too narrow when at smaller grid tiers by
  // always setting `width: 100%;`. This works because we set the width
  // later on to override this initial width.
  flex-shrink: 0;
  width: 100%;
  max-width: 100%; // Prevent `.col-auto`, `.col` (& responsive variants) from breaking out the grid
  padding-right: calc(
    var(--#{$prefix}gutter-x) * 0.5
  ); // stylelint-disable-line function-disallowed-list
  padding-left: calc(
    var(--#{$prefix}gutter-x) * 0.5
  ); // stylelint-disable-line function-disallowed-list
  margin-top: var(--#{$prefix}gutter-y);
}

@mixin make-col($size: false, $columns: $grid-columns) {
  @if $size {
    flex: 0 0 auto;
    width: percentage(divide($size, $columns));
  } @else {
    flex: 1 1 0;
    max-width: 100%;
  }
}

@mixin make-col-auto() {
  flex: 0 0 auto;
  width: auto;
}

@mixin make-col-offset($size, $columns: $grid-columns) {
  $num: divide($size, $columns);
  margin-left: if($num == 0, 0, percentage($num));
}

// Row columns
//
// Specify on a parent element(e.g., .row) to force immediate children into NN
// number of columns. Supports wrapping to new lines, but does not do a Masonry
// style grid.
@mixin row-cols($count) {
  > * {
    flex: 0 0 auto;
    width: divide(100%, $count);
  }
}

// Framework grid generation
//
// Used only by Bootstrap to generate the correct number of grid classes given
// any value of `$grid-columns`.

@mixin make-grid-columns(
  $columns: $grid-columns,
  $gutter: $grid-gutter-width,
  $breakpoints: $grid-breakpoints
) {
  @each $breakpoint in map-keys($breakpoints) {
    $infix: breakpoint-infix($breakpoint, $breakpoints);

    @include media-breakpoint-up($breakpoint, $breakpoints) {
      // Provide basic `.col-{bp}` classes for equal-width flexbox columns
      .col#{$infix} {
        flex: 1 0 0%; // Flexbugs #4: https://github.com/philipwalton/flexbugs#flexbug-4
      }

      .row-cols#{$infix}-auto > * {
        @include make-col-auto();
      }

      @if $grid-row-columns > 0 {
        @for $i from 1 through $grid-row-columns {
          .row-cols#{$infix}-#{$i} {
            @include row-cols($i);
          }
        }
      }

      .col#{$infix}-auto {
        @include make-col-auto();
      }

      @if $columns > 0 {
        @for $i from 1 through $columns {
          .col#{$infix}-#{$i} {
            @include make-col($i, $columns);
          }
        }

        // `$columns - 1` because offsetting by the width of an entire row isn't possible
        @for $i from 0 through ($columns - 1) {
          @if not($infix == "" and $i == 0) {
            // Avoid emitting useless .offset-0
            .offset#{$infix}-#{$i} {
              @include make-col-offset($i, $columns);
            }
          }
        }
      }

      // Gutters
      //
      // Make use of `.g-*`, `.gx-*` or `.gy-*` utilities to change spacing between the columns.
      @each $key, $value in $gutters {
        .g#{$infix}-#{$key},
        .gx#{$infix}-#{$key} {
          --#{$prefix}gutter-x: #{$value};
        }

        .g#{$infix}-#{$key},
        .gy#{$infix}-#{$key} {
          --#{$prefix}gutter-y: #{$value};
        }
      }
    }
  }
}

@mixin make-cssgrid($columns: $grid-columns, $breakpoints: $grid-breakpoints) {
  @each $breakpoint in map-keys($breakpoints) {
    $infix: breakpoint-infix($breakpoint, $breakpoints);

    @include media-breakpoint-up($breakpoint, $breakpoints) {
      @if $columns > 0 {
        @for $i from 1 through $columns {
          .g-col#{$infix}-#{$i} {
            grid-column: auto / span $i;
          }
        }

        // Start with `1` because `0` is and invalid value.
        // Ends with `$columns - 1` because offsetting by the width of an entire row isn't possible.
        @for $i from 1 through ($columns - 1) {
          .g-start#{$infix}-#{$i} {
            grid-column-start: $i;
          }
        }
      }
    }
  }
}

// Utilities

$utilities: () !default;
// stylelint-disable-next-line scss/dollar-variable-default
$utilities: map-merge(
  (
    // scss-docs-start utils-vertical-align
    "align":
      (
        property: vertical-align,
        class: align,
        values: baseline top middle bottom text-bottom text-top,
      ),
    // scss-docs-end utils-vertical-align
    // scss-docs-start utils-float
    "float":
      (
        responsive: true,
        property: float,
        values: (
          start: left,
          end: right,
          none: none,
        ),
      ),
    // scss-docs-end utils-float
    // Object Fit utilities
    // scss-docs-start utils-object-fit
    "object-fit":
      (
        responsive: true,
        property: object-fit,
        values: (
          contain: contain,
          cover: cover,
          fill: fill,
          scale: scale-down,
          none: none,
        ),
      ),
    // scss-docs-end utils-object-fit
    // Opacity utilities
    // scss-docs-start utils-opacity
    "opacity":
      (
        property: opacity,
        values: (
          0: 0,
          25: 0.25,
          50: 0.5,
          75: 0.75,
          100: 1,
        ),
      ),
    // scss-docs-end utils-opacity
    // scss-docs-start utils-overflow
    "overflow":
      (
        property: overflow,
        values: auto hidden visible scroll,
      ),
    "overflow-x": (
      property: overflow-x,
      values: auto hidden visible scroll,
    ),
    "overflow-y": (
      property: overflow-y,
      values: auto hidden visible scroll,
    ),
    // scss-docs-end utils-overflow
    // scss-docs-start utils-display
    "display":
      (
        responsive: true,
        print: true,
        property: display,
        class: d,
        values: inline inline-block block grid inline-grid table table-row
          table-cell flex inline-flex none,
      ),
    // scss-docs-end utils-display
    // scss-docs-start utils-shadow
    "shadow":
      (
        property: box-shadow,
        class: shadow,
        values: (
          null: $box-shadow,
          sm: $box-shadow-sm,
          lg: $box-shadow-lg,
          none: none,
        ),
      ),
    // scss-docs-end utils-shadow
    // scss-docs-start utils-focus-ring
    "focus-ring":
      (
        css-var: true,
        css-variable-name: focus-ring-color,
        class: focus-ring,
        values: map-loop($theme-colors-rgb, rgba-css-var, "$key", "focus-ring"),
      ),
    // scss-docs-end utils-focus-ring
    // scss-docs-start utils-position
    "position":
      (
        property: position,
        values: static relative absolute fixed sticky,
      ),
    "top": (
      property: top,
      values: $position-values,
    ),
    "bottom": (
      property: bottom,
      values: $position-values,
    ),
    "start": (
      property: left,
      class: start,
      values: $position-values,
    ),
    "end": (
      property: right,
      class: end,
      values: $position-values,
    ),
    "translate-middle": (
      property: transform,
      class: translate-middle,
      values: (
        null: translate(-50%, -50%),
        x: translateX(-50%),
        y: translateY(-50%),
      ),
    ),
    // scss-docs-end utils-position
    // scss-docs-start utils-borders
    "border":
      (
        property: border,
        values: (
          null: var(--#{$prefix}border-width) var(--#{$prefix}border-style)
            var(--#{$prefix}border-color),
          0: 0,
        ),
      ),
    "border-top": (
      property: border-top,
      values: (
        null: var(--#{$prefix}border-width) var(--#{$prefix}border-style)
          var(--#{$prefix}border-color),
        0: 0,
      ),
    ),
    "border-end": (
      property: border-right,
      class: border-end,
      values: (
        null: var(--#{$prefix}border-width) var(--#{$prefix}border-style)
          var(--#{$prefix}border-color),
        0: 0,
      ),
    ),
    "border-bottom": (
      property: border-bottom,
      values: (
        null: var(--#{$prefix}border-width) var(--#{$prefix}border-style)
          var(--#{$prefix}border-color),
        0: 0,
      ),
    ),
    "border-start": (
      property: border-left,
      class: border-start,
      values: (
        null: var(--#{$prefix}border-width) var(--#{$prefix}border-style)
          var(--#{$prefix}border-color),
        0: 0,
      ),
    ),
    "border-color": (
      property: border-color,
      class: border,
      local-vars: (
        "border-opacity": 1,
      ),
      values: $utilities-border-colors,
    ),
    "subtle-border-color": (
      property: border-color,
      class: border,
      values: $utilities-border-subtle,
    ),
    "border-width": (
      property: border-width,
      class: border,
      values: $border-widths,
    ),
    "border-opacity": (
      css-var: true,
      class: border-opacity,
      values: (
        10: 0.1,
        25: 0.25,
        50: 0.5,
        75: 0.75,
        100: 1,
      ),
    ),
    // scss-docs-end utils-borders
    // Sizing utilities
    // scss-docs-start utils-sizing
    "width":
      (
        property: width,
        class: w,
        values: (
          25: 25%,
          50: 50%,
          75: 75%,
          100: 100%,
          auto: auto,
        ),
      ),
    "max-width": (
      property: max-width,
      class: mw,
      values: (
        100: 100%,
      ),
    ),
    "viewport-width": (
      property: width,
      class: vw,
      values: (
        100: 100vw,
      ),
    ),
    "min-viewport-width": (
      property: min-width,
      class: min-vw,
      values: (
        100: 100vw,
      ),
    ),
    "height": (
      property: height,
      class: h,
      values: (
        25: 25%,
        50: 50%,
        75: 75%,
        100: 100%,
        auto: auto,
      ),
    ),
    "max-height": (
      property: max-height,
      class: mh,
      values: (
        100: 100%,
      ),
    ),
    "viewport-height": (
      property: height,
      class: vh,
      values: (
        100: 100vh,
      ),
    ),
    "min-viewport-height": (
      property: min-height,
      class: min-vh,
      values: (
        100: 100vh,
      ),
    ),
    // scss-docs-end utils-sizing
    // Flex utilities
    // scss-docs-start utils-flex
    "flex":
      (
        responsive: true,
        property: flex,
        values: (
          fill: 1 1 auto,
        ),
      ),
    "flex-direction": (
      responsive: true,
      property: flex-direction,
      class: flex,
      values: row column row-reverse column-reverse,
    ),
    "flex-grow": (
      responsive: true,
      property: flex-grow,
      class: flex,
      values: (
        grow-0: 0,
        grow-1: 1,
      ),
    ),
    "flex-shrink": (
      responsive: true,
      property: flex-shrink,
      class: flex,
      values: (
        shrink-0: 0,
        shrink-1: 1,
      ),
    ),
    "flex-wrap": (
      responsive: true,
      property: flex-wrap,
      class: flex,
      values: wrap nowrap wrap-reverse,
    ),
    "justify-content": (
      responsive: true,
      property: justify-content,
      values: (
        start: flex-start,
        end: flex-end,
        center: center,
        between: space-between,
        around: space-around,
        evenly: space-evenly,
      ),
    ),
    "align-items": (
      responsive: true,
      property: align-items,
      values: (
        start: flex-start,
        end: flex-end,
        center: center,
        baseline: baseline,
        stretch: stretch,
      ),
    ),
    "align-content": (
      responsive: true,
      property: align-content,
      values: (
        start: flex-start,
        end: flex-end,
        center: center,
        between: space-between,
        around: space-around,
        stretch: stretch,
      ),
    ),
    "align-self": (
      responsive: true,
      property: align-self,
      values: (
        auto: auto,
        start: flex-start,
        end: flex-end,
        center: center,
        baseline: baseline,
        stretch: stretch,
      ),
    ),
    "order": (
      responsive: true,
      property: order,
      values: (
        first: -1,
        0: 0,
        1: 1,
        2: 2,
        3: 3,
        4: 4,
        5: 5,
        last: 6,
      ),
    ),
    // scss-docs-end utils-flex
    // Margin utilities
    // scss-docs-start utils-spacing
    "margin":
      (
        responsive: true,
        property: margin,
        class: m,
        values:
          map-merge(
            $spacers,
            (
              auto: auto,
            )
          ),
      ),
    "margin-x": (
      responsive: true,
      property: margin-right margin-left,
      class: mx,
      values:
        map-merge(
          $spacers,
          (
            auto: auto,
          )
        ),
    ),
    "margin-y": (
      responsive: true,
      property: margin-top margin-bottom,
      class: my,
      values:
        map-merge(
          $spacers,
          (
            auto: auto,
          )
        ),
    ),
    "margin-top": (
      responsive: true,
      property: margin-top,
      class: mt,
      values:
        map-merge(
          $spacers,
          (
            auto: auto,
          )
        ),
    ),
    "margin-end": (
      responsive: true,
      property: margin-right,
      class: me,
      values:
        map-merge(
          $spacers,
          (
            auto: auto,
          )
        ),
    ),
    "margin-bottom": (
      responsive: true,
      property: margin-bottom,
      class: mb,
      values:
        map-merge(
          $spacers,
          (
            auto: auto,
          )
        ),
    ),
    "margin-start": (
      responsive: true,
      property: margin-left,
      class: ms,
      values:
        map-merge(
          $spacers,
          (
            auto: auto,
          )
        ),
    ),
    // Negative margin utilities
    "negative-margin":
      (
        responsive: true,
        property: margin,
        class: m,
        values: $negative-spacers,
      ),
    "negative-margin-x": (
      responsive: true,
      property: margin-right margin-left,
      class: mx,
      values: $negative-spacers,
    ),
    "negative-margin-y": (
      responsive: true,
      property: margin-top margin-bottom,
      class: my,
      values: $negative-spacers,
    ),
    "negative-margin-top": (
      responsive: true,
      property: margin-top,
      class: mt,
      values: $negative-spacers,
    ),
    "negative-margin-end": (
      responsive: true,
      property: margin-right,
      class: me,
      values: $negative-spacers,
    ),
    "negative-margin-bottom": (
      responsive: true,
      property: margin-bottom,
      class: mb,
      values: $negative-spacers,
    ),
    "negative-margin-start": (
      responsive: true,
      property: margin-left,
      class: ms,
      values: $negative-spacers,
    ),
    // Padding utilities
    "padding":
      (
        responsive: true,
        property: padding,
        class: p,
        values: $spacers,
      ),
    "padding-x": (
      responsive: true,
      property: padding-right padding-left,
      class: px,
      values: $spacers,
    ),
    "padding-y": (
      responsive: true,
      property: padding-top padding-bottom,
      class: py,
      values: $spacers,
    ),
    "padding-top": (
      responsive: true,
      property: padding-top,
      class: pt,
      values: $spacers,
    ),
    "padding-end": (
      responsive: true,
      property: padding-right,
      class: pe,
      values: $spacers,
    ),
    "padding-bottom": (
      responsive: true,
      property: padding-bottom,
      class: pb,
      values: $spacers,
    ),
    "padding-start": (
      responsive: true,
      property: padding-left,
      class: ps,
      values: $spacers,
    ),
    // Gap utility
    "gap":
      (
        responsive: true,
        property: gap,
        class: gap,
        values: $spacers,
      ),
    "row-gap": (
      responsive: true,
      property: row-gap,
      class: row-gap,
      values: $spacers,
    ),
    "column-gap": (
      responsive: true,
      property: column-gap,
      class: column-gap,
      values: $spacers,
    ),
    // scss-docs-end utils-spacing
    // Text
    // scss-docs-start utils-text
    "font-family":
      (
        property: font-family,
        class: font,
        values: (
          monospace: var(--#{$prefix}font-monospace),
        ),
      ),
    "font-size": (
      rfs: true,
      property: font-size,
      class: fs,
      values: $font-sizes,
    ),
    "font-style": (
      property: font-style,
      class: fst,
      values: italic normal,
    ),
    "font-weight": (
      property: font-weight,
      class: fw,
      values: (
        lighter: $font-weight-lighter,
        light: $font-weight-light,
        normal: $font-weight-normal,
        medium: $font-weight-medium,
        semibold: $font-weight-semibold,
        bold: $font-weight-bold,
        bolder: $font-weight-bolder,
      ),
    ),
    "line-height": (
      property: line-height,
      class: lh,
      values: (
        1: 1,
        sm: $line-height-sm,
        base: $line-height-base,
        lg: $line-height-lg,
      ),
    ),
    "text-align": (
      responsive: true,
      property: text-align,
      class: text,
      values: (
        start: left,
        end: right,
        center: center,
      ),
    ),
    "text-decoration": (
      property: text-decoration,
      values: none underline line-through,
    ),
    "text-transform": (
      property: text-transform,
      class: text,
      values: lowercase uppercase capitalize,
    ),
    "white-space": (
      property: white-space,
      class: text,
      values: (
        wrap: normal,
        nowrap: nowrap,
      ),
    ),
    "word-wrap": (
      property: word-wrap word-break,
      class: text,
      values: (
        break: break-word,
      ),
      rtl: false,
    ),
    // scss-docs-end utils-text
    // scss-docs-start utils-color
    "color":
      (
        property: color,
        class: text,
        local-vars: (
          "text-opacity": 1,
        ),
        values:
          map-merge(
            $utilities-text-colors,
            (
              "muted": var(--#{$prefix}secondary-color),
              // deprecated
              "black-50": rgba($black, 0.5),
              // deprecated
              "white-50": rgba($white, 0.5),
              // deprecated
              "body-secondary": var(--#{$prefix}secondary-color),
              "body-tertiary": var(--#{$prefix}tertiary-color),
              "body-emphasis": var(--#{$prefix}emphasis-color),
              "reset": inherit,
            )
          ),
      ),
    "text-opacity": (
      css-var: true,
      class: text-opacity,
      values: (
        25: 0.25,
        50: 0.5,
        75: 0.75,
        100: 1,
      ),
    ),
    "text-color": (
      property: color,
      class: text,
      values: $utilities-text-emphasis-colors,
    ),
    // scss-docs-end utils-color
    // scss-docs-start utils-links
    "link-opacity":
      (
        css-var: true,
        class: link-opacity,
        state: hover,
        values: (
          10: 0.1,
          25: 0.25,
          50: 0.5,
          75: 0.75,
          100: 1,
        ),
      ),
    "link-offset": (
      property: text-underline-offset,
      class: link-offset,
      state: hover,
      values: (
        1: 0.125em,
        2: 0.25em,
        3: 0.375em,
      ),
    ),
    "link-underline": (
      property: text-decoration-color,
      class: link-underline,
      local-vars: (
        "link-underline-opacity": 1,
      ),
      values:
        map-merge(
          $utilities-links-underline,
          (
            null:
              rgba(
                var(--#{$prefix}link-color-rgb),
                var(--#{$prefix}link-underline-opacity, 1)
              ),
          )
        ),
    ),
    "link-underline-opacity": (
      css-var: true,
      class: link-underline-opacity,
      state: hover,
      values: (
        0: 0,
        10: 0.1,
        25: 0.25,
        50: 0.5,
        75: 0.75,
        100: 1,
      ),
    ),
    // scss-docs-end utils-links
    // scss-docs-start utils-bg-color
    "background-color":
      (
        property: background-color,
        class: bg,
        local-vars: (
          "bg-opacity": 1,
        ),
        values:
          map-merge(
            $utilities-bg-colors,
            (
              "transparent": transparent,
              "body-secondary":
                rgba(
                  var(--#{$prefix}secondary-bg-rgb),
                  var(--#{$prefix}bg-opacity)
                ),
              "body-tertiary":
                rgba(
                  var(--#{$prefix}tertiary-bg-rgb),
                  var(--#{$prefix}bg-opacity)
                ),
            )
          ),
      ),
    "bg-opacity": (
      css-var: true,
      class: bg-opacity,
      values: (
        10: 0.1,
        25: 0.25,
        50: 0.5,
        75: 0.75,
        100: 1,
      ),
    ),
    "subtle-background-color": (
      property: background-color,
      class: bg,
      values: $utilities-bg-subtle,
    ),
    // scss-docs-end utils-bg-color
    "gradient":
      (
        property: background-image,
        class: bg,
        values: (
          gradient: var(--#{$prefix}gradient),
        ),
      ),
    // scss-docs-start utils-interaction
    "user-select":
      (
        property: user-select,
        values: all auto none,
      ),
    "pointer-events": (
      property: pointer-events,
      class: pe,
      values: none auto,
    ),
    // scss-docs-end utils-interaction
    // scss-docs-start utils-border-radius
    "rounded":
      (
        property: border-radius,
        class: rounded,
        values: (
          null: var(--#{$prefix}border-radius),
          0: 0,
          1: var(--#{$prefix}border-radius-sm),
          2: var(--#{$prefix}border-radius),
          3: var(--#{$prefix}border-radius-lg),
          4: var(--#{$prefix}border-radius-xl),
          5: var(--#{$prefix}border-radius-xxl),
          circle: 50%,
          pill: var(--#{$prefix}border-radius-pill),
        ),
      ),
    "rounded-top": (
      property: border-top-left-radius border-top-right-radius,
      class: rounded-top,
      values: (
        null: var(--#{$prefix}border-radius),
        0: 0,
        1: var(--#{$prefix}border-radius-sm),
        2: var(--#{$prefix}border-radius),
        3: var(--#{$prefix}border-radius-lg),
        4: var(--#{$prefix}border-radius-xl),
        5: var(--#{$prefix}border-radius-xxl),
        circle: 50%,
        pill: var(--#{$prefix}border-radius-pill),
      ),
    ),
    "rounded-end": (
      property: border-top-right-radius border-bottom-right-radius,
      class: rounded-end,
      values: (
        null: var(--#{$prefix}border-radius),
        0: 0,
        1: var(--#{$prefix}border-radius-sm),
        2: var(--#{$prefix}border-radius),
        3: var(--#{$prefix}border-radius-lg),
        4: var(--#{$prefix}border-radius-xl),
        5: var(--#{$prefix}border-radius-xxl),
        circle: 50%,
        pill: var(--#{$prefix}border-radius-pill),
      ),
    ),
    "rounded-bottom": (
      property: border-bottom-right-radius border-bottom-left-radius,
      class: rounded-bottom,
      values: (
        null: var(--#{$prefix}border-radius),
        0: 0,
        1: var(--#{$prefix}border-radius-sm),
        2: var(--#{$prefix}border-radius),
        3: var(--#{$prefix}border-radius-lg),
        4: var(--#{$prefix}border-radius-xl),
        5: var(--#{$prefix}border-radius-xxl),
        circle: 50%,
        pill: var(--#{$prefix}border-radius-pill),
      ),
    ),
    "rounded-start": (
      property: border-bottom-left-radius border-top-left-radius,
      class: rounded-start,
      values: (
        null: var(--#{$prefix}border-radius),
        0: 0,
        1: var(--#{$prefix}border-radius-sm),
        2: var(--#{$prefix}border-radius),
        3: var(--#{$prefix}border-radius-lg),
        4: var(--#{$prefix}border-radius-xl),
        5: var(--#{$prefix}border-radius-xxl),
        circle: 50%,
        pill: var(--#{$prefix}border-radius-pill),
      ),
    ),
    // scss-docs-end utils-border-radius
    // scss-docs-start utils-visibility
    "visibility":
      (
        property: visibility,
        class: null,
        values: (
          visible: visible,
          invisible: hidden,
        ),
      ),
    // scss-docs-end utils-visibility
    // scss-docs-start utils-zindex
    "z-index":
      (
        property: z-index,
        class: z,
        values: $zindex-levels,
      )
      // scss-docs-end utils-zindex
  ),
  $utilities
);
//
// 3rd-party config
//

// Prismjs
$prismjs-bg: #1e1e3f;

$prismjs-border: rgba($white, 0.1);

$prismjs-btn-bg: lighten($prismjs-bg, 9%);
$prismjs-btn-bg-hover: lighten($prismjs-bg, 9%);

$prismjs-btn-color: rgba($white, 0.75);
$prismjs-btn-color-hover: $primary;

$prismjs-scrollbar-color: lighten($prismjs-bg, 12%);
$prismjs-scrollbar-color-hover: lighten($prismjs-bg, 15%);

// Bootstrap Maxlength
$bootstrap-maxlength-z-index: 1040;

// Daterangepicker
$daterangepicker-ranges-list-height: 260px;
$daterangepicker-ranges-list-width: 150px;

//
// 3rd-party config
//

// Prismjs
$prismjs-bg-dark: #151521;

$prismjs-border-dark: rgba($white, 0.1);

$prismjs-btn-bg-dark: lighten($prismjs-bg-dark, 9%);
$prismjs-btn-bg-hover-dark: lighten($prismjs-bg-dark, 9%);

$prismjs-btn-color-dark: rgba($white, 0.75);
$prismjs-btn-color-hover-dark: $primary;

$prismjs-scrollbar-color-dark: lighten($prismjs-bg-dark, 12%);
$prismjs-scrollbar-color-hover-dark: lighten($prismjs-bg-dark, 15%);

// Custom layout variables
//
// Variables
//

// Reboot
$app-bg-color: #f5f8fa !default;
$app-bg-color-dark: #151521 !default;
$app-blank-bg-color: $white;
$app-blank-bg-color-dark: $app-bg-color-dark;

// General
$app-general-transition-duration: 0.3s !default;
$app-general-transition-timing: ease !default;
$app-general-root-font-size-desktop: 13px !default;
$app-general-root-font-size-tablet: 12px !default;
$app-general-root-font-size-mobile: 12px !default;

// Container
$app-container-padding-x: 30px !default;
$app-container-padding-x-mobile: 20px !default;

// Page
$app-page-bg-color: null !default;
$app-page-bg-color-dark: null !default;

// Main
$app-main-transition: margin $app-general-transition-duration
  $app-general-transition-timing;
$app-main-padding-y: null !default;
$app-main-padding-y-mobile: null !default;
$app-main-padding-x: null !default;
$app-main-padding-x-mobile: 0 !default;
$app-main-margin-y: null !default;
$app-main-margin-y-mobile: null !default;
$app-main-margin-x: null !default;
$app-main-margin-x-mobile: null !default;

// Wrapper
$app-wrapper-transition: margin-left $app-general-transition-duration
    $app-general-transition-timing,
  margin-right $app-general-transition-duration $app-general-transition-timing;
$app-wrapper-bg-color: null !default;
$app-wrapper-bg-color-dark: null !default;

// Content
$app-content-padding-y: 30px !default;
$app-content-padding-y-mobile: 20px !default;
$app-content-padding-x: 0 !default;
$app-content-padding-x-mobile: 0 !default;

// Header base
$app-header-base-transition: none !default;
$app-header-base-height: 70px !default;
$app-header-base-height-mobile: 70px !default;
$app-header-base-z-index: null !default;
$app-header-base-z-index-mobile: null !default;
$app-header-base-bg-color: null !default;
$app-header-base-bg-color-dark: null !default;
$app-header-base-box-shadow: null !default;
$app-header-base-box-shadow-dark: null !default;
$app-header-base-border-bottom: null !default;
$app-header-base-border-bottom-dark: null !default;

// Header fixed
$app-header-fixed-z-index: 100 !default;
$app-header-fixed-z-index-mobile: 100 !default;

// Header minimize
$app-header-minimize-height: 70px !default;
$app-header-minimize-height-mobile: 70px !default;
$app-header-minimize-z-index: 100 !default;
$app-header-minimize-z-index-mobile: 100 !default;
$app-header-minimize-backdrop-filter: null !default;
$app-header-minimize-backdrop-filter-mobile: null !default;
$app-header-minimize-bg-color: null !default;
$app-header-minimize-bg-color-dark: null !default;
$app-header-minimize-box-shadow: null !default;
$app-header-minimize-box-shadow-dark: null !default;
$app-header-minimize-border-bottom: null !default;
$app-header-minimize-border-bottom-dark: null !default;

// Header sticky
$app-header-sticky-height: 70px !default;
$app-header-sticky-height-mobile: 70px !default;
$app-header-sticky-z-index: 100 !default;
$app-header-sticky-z-index-mobile: 100 !default;
$app-header-sticky-backdrop-filter: null !default;
$app-header-sticky-backdrop-filter-mobile: null !default;
$app-header-sticky-bg-color: null !default;
$app-header-sticky-bg-color-dark: null !default;
$app-header-sticky-box-shadow: null !default;
$app-header-sticky-box-shadow-dark: null !default;
$app-header-sticky-border-bottom: null !default;
$app-header-sticky-border-bottom-dark: null !default;

// Header primary
$app-header-primary-base-transition: none !default;
$app-header-primary-base-height: 70px !default;
$app-header-primary-base-height-mobile: 60px !default;
$app-header-primary-base-z-index: null !default;
$app-header-primary-base-z-index-mobile: null !default;
$app-header-primary-base-bg-color: null !default;
$app-header-primary-base-bg-color-dark: null !default;
$app-header-primary-base-box-shadow: null !default;
$app-header-primary-base-box-shadow-dark: null !default;
$app-header-primary-base-border-bottom: null !default;
$app-header-primary-base-border-bottom-dark: null !default;

$app-header-primary-fixed-z-index: 100 !default;

$app-header-primary-minimize-height: 70px !default;
$app-header-primary-minimize-height-mobile: 60px !default;
$app-header-primary-minimize-z-index: 100 !default;
$app-header-primary-minimize-bg-color: null !default;
$app-header-primary-minimize-bg-color-dark: null !default;
$app-header-primary-minimize-box-shadow: null !default;
$app-header-primary-minimize-box-shadow-dark: null !default;
$app-header-primary-minimize-border-top: null !default;
$app-header-primary-minimize-border-top-dark: null !default;
$app-header-primary-minimize-border-bottom: null !default;
$app-header-primary-minimize-border-bottom-dark: null !default;

$app-header-primary-sticky-height: 70px !default;
$app-header-primary-sticky-height-mobile: 60px !default;
$app-header-primary-sticky-z-index: 100 !default;
$app-header-primary-sticky-bg-color: null !default;
$app-header-primary-sticky-bg-color-dark: null !default;
$app-header-primary-sticky-box-shadow: null !default;
$app-header-primary-sticky-box-shadow-dark: null !default;
$app-header-primary-sticky-border-top: null !default;
$app-header-primary-sticky-border-top-dark: null !default;
$app-header-primary-sticky-border-bottom: null !default;
$app-header-primary-sticky-border-bottom-dark: null !default;

// Header secondary
$app-header-secondary-base-transition: none !default;
$app-header-secondary-base-height: 70px !default;
$app-header-secondary-base-height-mobile: 60px !default;
$app-header-secondary-base-z-index: null !default;
$app-header-secondary-base-z-index-mobile: null !default;
$app-header-secondary-base-bg-color: null !default;
$app-header-secondary-base-bg-color-dark: null !default;
$app-header-secondary-base-box-shadow: null !default;
$app-header-secondary-base-box-shadow-dark: null !default;
$app-header-secondary-base-border-top: null !default;
$app-header-secondary-base-border-top-dark: null !default;
$app-header-secondary-base-border-bottom: null !default;
$app-header-secondary-base-border-bottom-dark: null !default;

$app-header-secondary-fixed-z-index: 100 !default;

$app-header-secondary-minimize-height: 70px !default;
$app-header-secondary-minimize-height-mobile: 60px !default;
$app-header-secondary-minimize-z-index: 100 !default;
$app-header-secondary-minimize-bg-color: null !default;
$app-header-secondary-minimize-bg-color-dark: null !default;
$app-header-secondary-minimize-box-shadow: null !default;
$app-header-secondary-minimize-box-shadow-dark: null !default;
$app-header-secondary-minimize-border-top: null !default;
$app-header-secondary-minimize-border-top-dark: null !default;
$app-header-secondary-minimize-border-bottom: null !default;
$app-header-secondary-minimize-border-bottom-dark: null !default;

$app-header-secondary-sticky-height: 70px !default;
$app-header-secondary-sticky-height-mobile: 60px !default;
$app-header-secondary-sticky-z-index: 100 !default;
$app-header-secondary-sticky-bg-color: null !default;
$app-header-secondary-sticky-bg-color-dark: null !default;
$app-header-secondary-sticky-box-shadow: null !default;
$app-header-secondary-sticky-box-shadow-dark: null !default;
$app-header-secondary-sticky-border-top: null !default;
$app-header-secondary-sticky-border-top-dark: null !default;
$app-header-secondary-sticky-border-bottom: null !default;
$app-header-secondary-sticky-border-bottom-dark: null !default;

// Header tertiary
$app-header-tertiary-base-transition: none !default;
$app-header-tertiary-base-height: 70px !default;
$app-header-tertiary-base-height-mobile: 70px !default;
$app-header-tertiary-base-z-index: null !default;
$app-header-tertiary-base-z-index-mobile: null !default;
$app-header-tertiary-base-bg-color: null !default;
$app-header-tertiary-base-bg-color-dark: null !default;
$app-header-tertiary-base-box-shadow: null !default;
$app-header-tertiary-base-box-shadow-dark: null !default;
$app-header-tertiary-base-border-top: null !default;
$app-header-tertiary-base-border-top-dark: null !default;
$app-header-tertiary-base-border-bottom: null !default;
$app-header-tertiary-base-border-bottom-dark: null !default;

$app-header-tertiary-fixed-z-index: 100 !default;

$app-header-tertiary-minimize-height: 70px !default;
$app-header-tertiary-minimize-height-mobile: 60px !default;
$app-header-tertiary-minimize-z-index: 100 !default;
$app-header-tertiary-minimize-bg-color: null !default;
$app-header-tertiary-minimize-bg-color-dark: null !default;
$app-header-tertiary-minimize-box-shadow: null !default;
$app-header-tertiary-minimize-box-shadow-dark: null !default;
$app-header-tertiary-minimize-border-top: null !default;
$app-header-tertiary-minimize-border-top-dark: null !default;
$app-header-tertiary-minimize-border-bottom: null !default;
$app-header-tertiary-minimize-border-bottom-dark: null !default;

$app-header-tertiary-sticky-height: 70px !default;
$app-header-tertiary-sticky-height-mobile: 60px !default;
$app-header-tertiary-sticky-z-index: 100 !default;
$app-header-tertiary-sticky-bg-color: null !default;
$app-header-tertiary-sticky-bg-color-dark: null !default;
$app-header-tertiary-sticky-box-shadow: null !default;
$app-header-tertiary-sticky-box-shadow-dark: null !default;
$app-header-tertiary-sticky-border-top: null !default;
$app-header-tertiary-sticky-border-top-dark: null !default;
$app-header-tertiary-sticky-border-bottom: null !default;
$app-header-tertiary-sticky-border-bottom-dark: null !default;

// Toolbar base
$app-toolbar-base-transition: none !default;
$app-toolbar-base-height: null !default;
$app-toolbar-base-height-mobile: null !default;
$app-toolbar-base-z-index: 99 !default;
$app-toolbar-base-z-index-mobile: 99 !default;
$app-toolbar-base-bg-color: null !default;
$app-toolbar-base-bg-color-dark: null !default;
$app-toolbar-base-box-shadow: null !default;
$app-toolbar-base-box-shadow-dark: null !default;
$app-toolbar-base-border-top: null !default;
$app-toolbar-base-border-top-dark: null !default;
$app-toolbar-base-border-bottom: null !default;
$app-toolbar-base-border-bottom-dark: null !default;

// Toolbar minimize
$app-toolbar-minimize-height: 70px !default;
$app-toolbar-minimize-height-mobile: 70px !default;
$app-toolbar-minimize-z-index: 99 !default;
$app-toolbar-minimize-z-index-mobile: 99 !default;
$app-toolbar-minimize-backdrop-filter: null !default;
$app-toolbar-minimize-backdrop-filter-mobile: null !default;
$app-toolbar-minimize-bg-color: null !default;
$app-toolbar-minimize-bg-color-dark: null !default;
$app-toolbar-minimize-box-shadow: null !default;
$app-toolbar-minimize-box-shadow-dark: null !default;
$app-toolbar-minimize-border-top: null !default;
$app-toolbar-minimize-border-top-dark: null !default;
$app-toolbar-minimize-border-bottom: null !default;
$app-toolbar-minimize-border-bottom-dark: null !default;

// Toolbar sticky
$app-toolbar-sticky-height: 70px !default;
$app-toolbar-sticky-height-mobile: 70px !default;
$app-toolbar-sticky-z-index: 99 !default;
$app-toolbar-sticky-z-index-mobile: 99 !default;
$app-toolbar-sticky-backdrop-filter: null !default;
$app-toolbar-sticky-backdrop-filter-mobile: null !default;
$app-toolbar-sticky-bg-color: null !default;
$app-toolbar-sticky-bg-color-dark: null !default;
$app-toolbar-sticky-box-shadow: null !default;
$app-toolbar-sticky-box-shadow-dark: null !default;
$app-toolbar-sticky-border-top: null !default;
$app-toolbar-sticky-border-top-dark: null !default;
$app-toolbar-sticky-border-bottom: null !default;
$app-toolbar-sticky-border-bottom-dark: null !default;

// Hero
$app-hero-bg-color: null !default;
$app-hero-bg-color-dark: null !default;
$app-hero-box-shadow: null !default;
$app-hero-box-shadow-dark: null !default;
$app-hero-border-top: null !default;
$app-hero-border-top-dark: null !default;
$app-hero-border-bottom: null !default;
$app-hero-border-bottom-dark: null !default;

// Sidebar base
$app-sidebar-base-transition: width $app-general-transition-duration
  $app-general-transition-timing !default;
$app-sidebar-base-width: 300px !default;
$app-sidebar-base-width-mobile: 275px !default;
$app-sidebar-base-z-index: null !default;
$app-sidebar-base-z-index-mobile: 106 !default;
$app-sidebar-base-bg-color: null !default;
$app-sidebar-base-bg-color-dark: null !default;
$app-sidebar-base-box-shadow: null !default;
$app-sidebar-base-box-shadow-dark: null !default;
$app-sidebar-base-border-start: null !default;
$app-sidebar-base-border-start-dark: null !default;
$app-sidebar-base-border-end: null !default;
$app-sidebar-base-border-end-dark: null !default;
$app-sidebar-base-gap-start: 0px !default;
$app-sidebar-base-gap-end: 0px !default;
$app-sidebar-base-gap-top: 0px !default;
$app-sidebar-base-gap-bottom: 0px !default;
$app-sidebar-base-gap-start-mobile: 0px !default;
$app-sidebar-base-gap-end-mobile: 0px !default;
$app-sidebar-base-gap-top-mobile: 0px !default;
$app-sidebar-base-gap-bottom-mobile: 0px !default;

// Sidebar fixed
$app-sidebar-fixed-z-index: 105 !default;
$app-sidebar-fixed-left: 0 !default;
$app-sidebar-fixed-top: 0 !default;
$app-sidebar-fixed-bottom: 0 !default;

// Sidebar sticky
$app-sidebar-sticky-top: auto !default;
$app-sidebar-sticky-bottom: auto !default;
$app-sidebar-sticky-left: auto !default;
$app-sidebar-sticky-width: 300px !default;
$app-sidebar-sticky-z-index: 105 !default;
$app-sidebar-sticky-bg-color: null !default;
$app-sidebar-sticky-bg-color-dark: null !default;
$app-sidebar-sticky-box-shadow: null !default;
$app-sidebar-sticky-box-shadow-dark: null !default;
$app-sidebar-sticky-border-start: null !default;
$app-sidebar-sticky-border-start-dark: null !default;
$app-sidebar-sticky-border-end: null !default;
$app-sidebar-sticky-border-end-dark: null !default;
$app-sidebar-sticky-gap-start: 0px !default;
$app-sidebar-sticky-gap-end: 0px !default;
$app-sidebar-sticky-gap-top: 0px !default;
$app-sidebar-sticky-gap-bottom: 0px !default;
$app-sidebar-sticky-gap-start-mobile: 0px !default;
$app-sidebar-sticky-gap-end-mobile: 0px !default;
$app-sidebar-sticky-gap-top-mobile: 0px !default;
$app-sidebar-sticky-gap-bottom-mobile: 0px !default;

// Sidebar minimize
$app-sidebar-minimize-width: 75px !default;
$app-sidebar-minimize-width-mobile: 75px !default;
$app-sidebar-minimize-bg-color: null !default;
$app-sidebar-minimize-bg-color-dark: null !default;
$app-sidebar-minimize-box-shadow: null !default;
$app-sidebar-minimize-box-shadow-dark: null !default;
$app-sidebar-minimize-hover-box-shadow: null !default;
$app-sidebar-minimize-hover-box-shadow-dark: null !default;
$app-sidebar-minimize-border-start: null !default;
$app-sidebar-minimize-border-start-dark: null !default;
$app-sidebar-minimize-border-end: null !default;
$app-sidebar-minimize-border-end-dark: null !default;
$app-sidebar-minimize-gap-start: 0px !default;
$app-sidebar-minimize-gap-end: 0px !default;
$app-sidebar-minimize-gap-top: 0px !default;
$app-sidebar-minimize-gap-bottom: 0px !default;
$app-sidebar-minimize-gap-start-mobile: 0px !default;
$app-sidebar-minimize-gap-end-mobile: 0px !default;
$app-sidebar-minimize-gap-top-mobile: 0px !default;
$app-sidebar-minimize-gap-bottom-mobile: 0px !default;

// Sidebar primary
$app-sidebar-primary-base-transition: none !default;
$app-sidebar-primary-base-width: 100px !default;
$app-sidebar-primary-base-width-mobile: 100px !default;
$app-sidebar-primary-base-z-index: 1 !default;
$app-sidebar-primary-base-z-index-mobile: 1 !default;
$app-sidebar-primary-base-bg-color: null !default;
$app-sidebar-primary-base-bg-color-dark: null !default;
$app-sidebar-primary-base-box-shadow: null !default;
$app-sidebar-primary-base-box-shadow-dark: null !default;
$app-sidebar-primary-base-border-start: null !default;
$app-sidebar-primary-base-border-start-dark: null !default;
$app-sidebar-primary-base-border-end: null !default;
$app-sidebar-primary-base-border-end-dark: null !default;
$app-sidebar-primary-base-gap-start: 0px !default;
$app-sidebar-primary-base-gap-end: 0px !default;
$app-sidebar-primary-base-gap-top: 0px !default;
$app-sidebar-primary-base-gap-bottom: 0px !default;
$app-sidebar-primary-base-gap-start-mobile: 0px !default;
$app-sidebar-primary-base-gap-end-mobile: 0px !default;
$app-sidebar-primary-base-gap-top-mobile: 0px !default;
$app-sidebar-primary-base-gap-bottom-mobile: 0px !default;

$app-sidebar-primary-minimize-width: 75px !default;
$app-sidebar-primary-minimize-width-mobile: 75px !default;
$app-sidebar-primary-minimize-z-index: null !default;
$app-sidebar-primary-minimize-bg-color: null !default;
$app-sidebar-primary-minimize-bg-color-dark: null !default;
$app-sidebar-primary-minimize-box-shadow: null !default;
$app-sidebar-primary-minimize-box-shadow-dark: null !default;
$app-sidebar-primary-minimize-hover-box-shadow: null !default;
$app-sidebar-primary-minimize-hover-box-shadow-dark: null !default;
$app-sidebar-primary-minimize-border-start: null !default;
$app-sidebar-primary-minimize-border-start-dark: null !default;
$app-sidebar-primary-minimize-border-end: null !default;
$app-sidebar-primary-minimize-border-end-dark: null !default;
$app-sidebar-primary-minimize-gap-start: 0px !default;
$app-sidebar-primary-minimize-gap-end: 0px !default;
$app-sidebar-primary-minimize-gap-top: 0px !default;
$app-sidebar-primary-minimize-gap-bottom: 0px !default;
$app-sidebar-primary-minimize-gap-start-mobile: 0px !default;
$app-sidebar-primary-minimize-gap-end-mobile: 0px !default;
$app-sidebar-primary-minimize-gap-top-mobile: 0px !default;
$app-sidebar-primary-minimize-gap-bottom-mobile: 0px !default;

// Sidebar secondary
$app-sidebar-secondary-base-transition: width $app-general-transition-duration
    $app-general-transition-timing,
  margin $app-general-transition-duration $app-general-transition-timing !default;
$app-sidebar-secondary-base-z-index: null !default;
$app-sidebar-secondary-base-z-index-mobile: null !default;
$app-sidebar-secondary-base-bg-color: null !default;
$app-sidebar-secondary-base-bg-color-dark: null !default;
$app-sidebar-secondary-base-box-shadow: null !default;
$app-sidebar-secondary-base-box-shadow-dark: null !default;
$app-sidebar-secondary-base-border-start: null !default;
$app-sidebar-secondary-base-border-start-dark: null !default;
$app-sidebar-secondary-base-border-end: null !default;
$app-sidebar-secondary-base-border-end-dark: null !default;
$app-sidebar-secondary-base-gap-start: 0px !default;
$app-sidebar-secondary-base-gap-end: 0px !default;
$app-sidebar-secondary-base-gap-top: 0px !default;
$app-sidebar-secondary-base-gap-bottom: 0px !default;
$app-sidebar-secondary-base-gap-start-mobile: 0px !default;
$app-sidebar-secondary-base-gap-end-mobile: 0px !default;
$app-sidebar-secondary-base-gap-top-mobile: 0px !default;
$app-sidebar-secondary-base-gap-bottom-mobile: 0px !default;

$app-sidebar-secondary-minimize-width: 75px !default;
$app-sidebar-secondary-minimize-width-mobile: 75px !default;
$app-sidebar-secondary-minimize-z-index: null !default;
$app-sidebar-secondary-minimize-bg-color: null !default;
$app-sidebar-secondary-minimize-bg-color-dark: null !default;
$app-sidebar-secondary-minimize-box-shadow: null !default;
$app-sidebar-secondary-minimize-box-shadow-dark: null !default;
$app-sidebar-secondary-minimize-hover-box-shadow: null !default;
$app-sidebar-secondary-minimize-hover-box-shadow-dark: null !default;
$app-sidebar-secondary-minimize-border-start: null !default;
$app-sidebar-secondary-minimize-border-start-dark: null !default;
$app-sidebar-secondary-minimize-border-end: null !default;
$app-sidebar-secondary-minimize-border-end-dark: null !default;
$app-sidebar-secondary-minimize-gap-start: 0px !default;
$app-sidebar-secondary-minimize-gap-end: 0px !default;
$app-sidebar-secondary-minimize-gap-top: 0px !default;
$app-sidebar-secondary-minimize-gap-bottom: 0px !default;
$app-sidebar-secondary-minimize-gap-start-mobile: 0px !default;
$app-sidebar-secondary-minimize-gap-end-mobile: 0px !default;
$app-sidebar-secondary-minimize-gap-top-mobile: 0px !default;
$app-sidebar-secondary-minimize-gap-bottom-mobile: 0px !default;

// Sidebar panel base
$app-sidebar-panel-base-transition: none !default;
$app-sidebar-panel-base-width: 300px !default;
$app-sidebar-panel-base-width-mobile: 300px !default;
$app-sidebar-panel-base-z-index: null !default;
$app-sidebar-panel-base-z-index-mobile: null !default;
$app-sidebar-panel-base-bg-color: null !default;
$app-sidebar-panel-base-bg-color-dark: null !default;
$app-sidebar-panel-base-bg-color-mobile: null !default;
$app-sidebar-panel-base-bg-color-mobile-dark: null !default;
$app-sidebar-panel-base-box-shadow: null !default;
$app-sidebar-panel-base-box-shadow-dark: null !default;
$app-sidebar-panel-base-box-shadow-mobile: null !default;
$app-sidebar-panel-base-box-shadow-mobile-dark: null !default;
$app-sidebar-panel-base-border-start: null !default;
$app-sidebar-panel-base-border-start-dark: null !default;
$app-sidebar-panel-base-border-start-mobile: null !default;
$app-sidebar-panel-base-border-start-mobile-dark: null !default;
$app-sidebar-panel-base-border-end: null !default;
$app-sidebar-panel-base-border-end-dark: null !default;
$app-sidebar-panel-base-border-end-mobile: null !default;
$app-sidebar-panel-base-border-end-mobile-dark: null !default;
$app-sidebar-panel-base-gap-start: 0px !default;
$app-sidebar-panel-base-gap-end: 0px !default;
$app-sidebar-panel-base-gap-top: 0px !default;
$app-sidebar-panel-base-gap-bottom: 0px !default;
$app-sidebar-panel-base-gap-start-mobile: 0px !default;
$app-sidebar-panel-base-gap-end-mobile: 0px !default;
$app-sidebar-panel-base-gap-top-mobile: 0px !default;
$app-sidebar-panel-base-gap-bottom-mobile: 0px !default;

// Sidebar panel fixed
$app-sidebar-panel-fixed-z-index: 104 !default;
$app-sidebar-panel-fixed-z-index-mobile: 105 !default;

// Sidebar panel sticky
$app-sidebar-panel-sticky-top: auto !default;
$app-sidebar-panel-sticky-bottom: auto !default;
$app-sidebar-panel-sticky-width: 300px !default;
$app-sidebar-panel-sticky-z-index: 104 !default;
$app-sidebar-panel-sticky-bg-color: null !default;
$app-sidebar-panel-sticky-bg-color-dark: null !default;
$app-sidebar-panel-sticky-box-shadow: null !default;
$app-sidebar-panel-sticky-box-shadow-dark: null !default;
$app-sidebar-panel-sticky-border-start: null !default;
$app-sidebar-panel-sticky-border-start-dark: null !default;
$app-sidebar-panel-sticky-border-end: null !default;
$app-sidebar-panel-sticky-border-end-dark: null !default;
$app-sidebar-panel-sticky-gap-start: 0px !default;
$app-sidebar-panel-sticky-gap-end: 0px !default;
$app-sidebar-panel-sticky-gap-top: 0px !default;
$app-sidebar-panel-sticky-gap-bottom: 0px !default;
$app-sidebar-panel-sticky-gap-start-mobile: 0px !default;
$app-sidebar-panel-sticky-gap-end-mobile: 0px !default;
$app-sidebar-panel-sticky-gap-top-mobile: 0px !default;
$app-sidebar-panel-sticky-gap-bottom-mobile: 0px !default;

// Sidebar panel minimize
$app-sidebar-panel-minimize-width: 75px !default;
$app-sidebar-panel-minimize-width-mobile: 75px !default;
$app-sidebar-panel-minimize-bg-color: null !default;
$app-sidebar-panel-minimize-bg-color-dark: null !default;
$app-sidebar-panel-minimize-bg-color-mobile: null !default;
$app-sidebar-panel-minimize-bg-color-mobile-dark: null !default;
$app-sidebar-panel-minimize-box-shadow: null !default;
$app-sidebar-panel-minimize-box-shadow-dark: null !default;
$app-sidebar-panel-minimize-box-shadow-mobile: null !default;
$app-sidebar-panel-minimize-box-shadow-mobile-dark: null !default;
$app-sidebar-panel-minimize-hover-box-shadow: null !default;
$app-sidebar-panel-minimize-hover-box-shadow-dark: null !default;
$app-sidebar-panel-minimize-hover-box-shadow-mobile: null !default;
$app-sidebar-panel-minimize-hover-box-shadow-mobile-dark: null !default;
$app-sidebar-panel-minimize-border-start: null !default;
$app-sidebar-panel-minimize-border-start-dark: null !default;
$app-sidebar-panel-minimize-border-start-mobile: null !default;
$app-sidebar-panel-minimize-border-start-mobile-dark: null !default;
$app-sidebar-panel-minimize-border-end: null !default;
$app-sidebar-panel-minimize-border-end-dark: null !default;
$app-sidebar-panel-minimize-border-end-mobile: null !default;
$app-sidebar-panel-minimize-border-end-mobile-dark: null !default;
$app-sidebar-panel-minimize-gap-start: 0px !default;
$app-sidebar-panel-minimize-gap-end: 0px !default;
$app-sidebar-panel-minimize-gap-top: 0px !default;
$app-sidebar-panel-minimize-gap-bottom: 0px !default;
$app-sidebar-panel-minimize-gap-start-mobile: 0px !default;
$app-sidebar-panel-minimize-gap-end-mobile: 0px !default;
$app-sidebar-panel-minimize-gap-top-mobile: 0px !default;
$app-sidebar-panel-minimize-gap-bottom-mobile: 0px !default;

// Aside base
$app-aside-base-transition: none;
$app-aside-base-width: 300px !default;
$app-aside-base-width-mobile: 275px !default;
$app-aside-base-z-index: null !default;
$app-aside-base-z-index-mobile: 106 !default;
$app-aside-base-bg-color: null !default;
$app-aside-base-bg-color-dark: null !default;
$app-aside-base-box-shadow: null !default;
$app-aside-base-box-shadow-dark: null !default;
$app-aside-base-gap-start: 0px !default;
$app-aside-base-gap-end: 0px !default;
$app-aside-base-gap-top: 0px !default;
$app-aside-base-gap-bottom: 0px !default;
$app-aside-base-gap-start-mobile: 0px !default;
$app-aside-base-gap-end-mobile: 0px !default;
$app-aside-base-gap-top-mobile: 0px !default;
$app-aside-base-gap-bottom-mobile: 0px !default;

// Aside fixed
$app-aside-fixed-z-index: 99 !default;
$app-aside-fixed-right: 0 !default;
$app-aside-fixed-top: 0 !default;
$app-aside-fixed-bottom: 0 !default;

// Aside sticky
$app-aside-sticky-top: auto !default;
$app-aside-sticky-bottom: auto !default;
$app-aside-sticky-left: auto !default;
$app-aside-sticky-width: 300px !default;
$app-aside-sticky-z-index: 99 !default;
$app-aside-sticky-bg-color: null !default;
$app-aside-sticky-bg-color-dark: null !default;
$app-aside-sticky-box-shadow: null !default;
$app-aside-sticky-box-shadow-dark: null !default;
$app-aside-sticky-gap-start: 0px !default;
$app-aside-sticky-gap-end: 0px !default;
$app-aside-sticky-gap-top: 0px !default;
$app-aside-sticky-gap-bottom: 0px !default;
$app-aside-sticky-gap-start-mobile: 0px !default;
$app-aside-sticky-gap-end-mobile: 0px !default;
$app-aside-sticky-gap-top-mobile: 0px !default;
$app-aside-sticky-gap-bottom-mobile: 0px !default;

// Aside minimize
$app-aside-minimize-width: 75px !default;
$app-aside-minimize-width-mobile: 75px !default;
$app-aside-minimize-bg-color: null !default;
$app-aside-minimize-bg-color-dark: null !default;
$app-aside-minimize-bg-color-mobile: null !default;
$app-aside-minimize-bg-color-mobile-dark: null !default;
$app-aside-minimize-box-shadow: null !default;
$app-aside-minimize-box-shadow-dark: null !default;
$app-aside-minimize-box-shadow-mobile: null !default;
$app-aside-minimize-box-shadow-mobile-dark: null !default;
$app-aside-minimize-hover-box-shadow: null !default;
$app-aside-minimize-hover-box-shadow-dark: null !default;
$app-aside-minimize-border-start: null !default;
$app-aside-minimize-border-start-dark: null !default;
$app-aside-minimize-border-end: null !default;
$app-aside-minimize-border-end-dark: null !default;
$app-aside-minimize-gap-start: 0px !default;
$app-aside-minimize-gap-end: 0px !default;
$app-aside-minimize-gap-top: 0px !default;
$app-aside-minimize-gap-bottom: 0px !default;
$app-aside-minimize-gap-start-mobile: 0px !default;
$app-aside-minimize-gap-end-mobile: 0px !default;
$app-aside-minimize-gap-top-mobile: 0px !default;
$app-aside-minimize-gap-bottom-mobile: 0px !default;

// Footer
$app-footer-transition: left $app-general-transition-duration
    $app-general-transition-timing,
  right $app-general-transition-duration $app-general-transition-timing;
$app-footer-height: auto !default;
$app-footer-height-mobile: auto !default;
$app-footer-z-index: null !default;
$app-footer-z-index-mobile: null !default;
$app-footer-bg-color: null !default;
$app-footer-bg-color-dark: null !default;
$app-footer-box-shadow: null !default;
$app-footer-box-shadow-dark: null !default;
$app-footer-border-top: null !default;
$app-footer-border-top-dark: null !default;

// Footer fixed
$app-footer-fixed-z-index: 100 !default;
$app-footer-fixed-z-index-mobile: 100 !default;

// Layout Builder
$app-layout-builder-toggle-z-index: 105 !default;
$app-layout-builder-toggle-bottom: 40px !default;
$app-layout-builder-toggle-bottom-mobile: 15px !default;
$app-layout-builder-toggle-end: 40px !default;
$app-layout-builder-toggle-end-mobile: 15px !default;

//
// Variables
//

// Reboot
$app-bg-color: #fcfcfc;
$app-bg-color-dark: transparent;
$app-blank-bg-color: $app-bg-color;
$app-blank-bg-color-dark: $app-bg-color-dark;

// General
$app-general-root-font-size-desktop: 13px;
$app-general-root-font-size-tablet: 12px;
$app-general-root-font-size-mobile: 12px;

// Container
$app-container-padding-x: 30px;
$app-container-padding-x-mobile: 20px;

// Header base
$app-header-base-height: 74px;
$app-header-base-height-mobile: 60px;
$app-header-base-bg-color: transparent;
$app-header-base-bg-color-dark: #131313;
$app-header-base-bg-color-mobile: $app-header-base-bg-color;
$app-header-base-bg-color-mobile-dark: $app-header-base-bg-color-dark;
$app-header-base-box-shadow: none;
$app-header-base-box-shadow-dark: none;

// Header minimize
$app-header-minimize-height: 74px;
$app-header-minimize-height-mobile: 60px;
$app-header-minimize-bg-color: $body-bg;
$app-header-minimize-bg-color-dark: $app-header-base-bg-color-dark;
$app-header-minimize-box-shadow: 0px 10px 30px 0px rgba(82, 63, 105, 0.05);
$app-header-minimize-box-shadow-dark: $box-shadow-sm-dark;

// Header light
$app-header-light-separator-color: #e4e6ef;
$app-header-light-separator-color-dark: $border-color-dark;

// Header dark
$app-header-dark-bg-color: #131313;
$app-header-dark-separator-color: #282a3d;
$app-header-dark-scrollbar-color: #3b3b64;
$app-header-dark-scrollbar-color-hover: lighten(
  $app-header-dark-scrollbar-color,
  3%
);
$app-header-dark-menu-active-link-bg-color: #242424;

// Sidebar base
$app-sidebar-base-width: 265px;
$app-sidebar-base-width-mobile: 250px;

$app-sidebar-base-toggle-btn-box-shadow: 0px 8px 14px rgba(15, 42, 81, 0.04);
$app-sidebar-base-toggle-btn-box-shadow-dark: none;
$app-sidebar-base-toggle-btn-bg-color: $body-bg;
$app-sidebar-base-toggle-btn-bg-color-dark: $gray-200-dark;
$app-sidebar-base-toggle-btn-border-color: #f1f1f2;
$app-sidebar-base-toggle-btn-border-color-dark: none;
$app-sidebar-base-border-color: #f1f1f2;
$app-sidebar-base-border-color-dark: none;

// Sidebar minimize
$app-sidebar-minimize-width: 75px;

// Sidebar light
$app-sidebar-light-bg-color: $body-bg;
$app-sidebar-light-bg-color-dark: #131313;

$app-sidebar-light-box-shadow: 0 0 28px 0 rgba(82, 63, 105, 0.05);
$app-sidebar-light-box-shadow-dark: none;

$app-sidebar-light-separator-color: $app-header-light-separator-color;
$app-sidebar-light-separator-color-dark: $app-header-light-separator-color-dark;

$app-sidebar-light-scrollbar-color-hover: $gray-200;
$app-sidebar-light-scrollbar-color-hover-dark: $gray-200-dark;
$app-sidebar-light-menu-heading-color: #b5b5c3;
$app-sidebar-light-menu-heading-color-dark: $gray-500-dark;
$app-sidebar-light-menu-link-bg-color-active: #f7f8fb;
$app-sidebar-light-menu-link-bg-color-active-dark: #2a2a3c;
$app-sidebar-light-menu-link-color: #252f4a;
$app-sidebar-light-menu-link-color-dark: $gray-300;
$app-sidebar-light-menu-link-icon-color: #99a1b7;
$app-sidebar-light-menu-link-icon-color-dark: #7f8194;
$app-sidebar-light-header-menu-link-bg-color-active: #f7f8fb;
$app-sidebar-light-header-menu-link-bg-color-active-dark: $gray-100-dark;

// Sidebar dark
$app-sidebar-dark-bg-color: #131313;
$app-sidebar-dark-separator-color: #393945;
$app-sidebar-dark-scrollbar-color-hover: lighten(
  $app-sidebar-dark-separator-color,
  2%
);
$app-sidebar-dark-menu-heading-color: #626671;
$app-sidebar-dark-menu-sub-link-color: #888a8e;
$app-sidebar-dark-menu-link-bg-color-active: #1c1c21;

// Aside base
$app-aside-base-width: 320px;
$app-aside-base-width-mobile: 300px;
$app-aside-base-bg-color: $body-bg;
$app-aside-base-bg-color-dark: #131313;
$app-aside-base-gap-end: $app-container-padding-x;
$app-aside-base-gap-top: $app-container-padding-x;
$app-aside-base-gap-bottom: $app-container-padding-x;

// Toolbar base
$app-toolbar-base-height: 55px;
$app-toolbar-base-bg-color: $body-bg;
$app-toolbar-base-bg-color-dark: #131313;
$app-toolbar-base-box-shadow: 0px 10px 30px 0px rgba(82, 63, 105, 0.05);
$app-toolbar-base-box-shadow-dark: none;
$app-toolbar-base-border-top: 1px dashed $border-dashed-color;
$app-toolbar-base-border-top-dark: 1px dashed $border-dashed-color-dark;

// Footer
$app-footer-height: 60px;
$app-footer-height-mobile: auto;
$app-footer-bg-color: transparent;
$app-footer-bg-color-dark: transparent;
$app-footer-box-shadow: 0px 10px 30px 0px rgba(82, 63, 105, 0.05);
$app-footer-box-shadow-dark: none;

// Scrolltop
$scrolltop-bottom: 43px;
$scrolltop-bottom-mobile: 23px;
$scrolltop-end: 7px;
$scrolltop-end-mobile: 5px;

// Layout builder toggle(used for Demo purposes only)
$app-layout-builder-toggle-end: 50px;
$app-layout-builder-toggle-end-mobile: 40px;
$app-layout-builder-toggle-bottom: 40px;
$app-layout-builder-toggle-bottom-mobile: 20px;

// Components
// Extended bootstrap utilities
//
// Custom utilities
//

$utilities: map-merge(
  $utilities,
  (
    "position": (
      property: position,
      responsive: true,
      values: static relative absolute fixed sticky,
    ),
    "overflow": (
      property: overflow,
      responsive: true,
      values: auto hidden visible scroll,
    ),
    "opacity": (
      property: opacity,
      class: opacity,
      values: $opacity-values,
    ),
    "opacity-hover": (
      property: opacity,
      state: hover,
      class: opacity,
      values: $opacity-values,
    ),
    "font-size": (
      rfs: true,
      responsive: true,
      property: font-size,
      class: fs,
      values: $font-sizes,
    ),
    "width": (
      responsive: true,
      property: width,
      class: w,
      values: $custom-sizes,
    ),
    "max-width": (
      responsive: true,
      property: max-width,
      class: mw,
      values: $custom-sizes,
    ),
    "min-width": (
      responsive: true,
      property: min-width,
      class: min-w,
      values: $custom-sizes,
    ),
    "height": (
      responsive: true,
      property: height,
      class: h,
      values: $custom-sizes,
    ),
    "max-height": (
      responsive: true,
      property: max-height,
      class: mh,
      values: $custom-sizes,
    ),
    "min-height": (
      responsive: true,
      property: min-height,
      class: min-h,
      values: $custom-sizes,
    ),
    "z-index": (
      property: z-index,
      class: z-index,
      values: $zindex-values,
    ),
    "border-top-width": (
      property: border-top-width,
      class: border-top,
      values: $border-widths,
    ),
    "border-bottom-width": (
      property: border-bottom-width,
      class: border-bottom,
      values: $border-widths,
    ),
    "border-right-width": (
      property: border-right-width,
      class: border-right,
      values: $border-widths,
    ),
    "border-left-width": (
      property: border-left-width,
      class: border-left,
      values: $border-widths,
    ),
    "line-height": (
      property: line-height,
      class: lh,
      values: (
        0: 0,
        1: 1,
        sm: $line-height-sm,
        base: $line-height-base,
        lg: $line-height-lg,
        xl: $line-height-xl,
        xxl: $line-height-xxl,
      ),
    ),
    "letter-spacing": (
      property: letter-spacing,
      class: ls,
      values: $letter-spacing-values,
    ),
    "rounded": (
      property: border-radius,
      class: rounded,
      values: (
        null: $border-radius,
        0: 0,
        1: $border-radius-sm,
        2: $border-radius,
        3: $border-radius-lg,
        4: $border-radius-xl,
        circle: 50%,
        pill: $border-radius-pill,
      ),
    ),
  )
);

// Bootstrap components
@import "../../../node_modules/bootstrap/scss/bootstrap";
//
// CSS Variables
//

:root {
  // Breakpoints
  @each $breakpoint, $value in $grid-breakpoints {
    --#{$prefix}#{$breakpoint}: #{$value};
  }

  // Keenthemes scrollbar component
  --#{$prefix}scrollbar-size: #{$scrollbar-size};
  --#{$prefix}scrollbar-overlay-size: #{$scrollbar-overlay-size};
  --#{$prefix}scrollbar-overlay-space: #{$scrollbar-overlay-space};

  // Bootstrap general
  @debug to-rgb($white);
  
  --#{$prefix}white-bg-rgb: #{to-rgb($white)};
  --#{$prefix}black-bg-rgb: #{to-rgb($black)};
}

@include color-mode(light) {
  // Bootstrap muted color
  --#{$prefix}text-muted: #{$text-muted};

  // Grey colors
  @each $name, $value in $grays {
    --#{$prefix}gray-#{$name}: #{$value};
    --#{$prefix}gray-#{$name}-rgb: #{to-rgb($value)};
  }

  // Contextual colors
  @each $name, $value in $theme-colors {
    --#{$prefix}#{$name}: #{$value};
  }

  // Contextual active state colors
  @each $name, $value in $theme-active-colors {
    --#{$prefix}#{$name}-active: #{$value};
  }

  // Contextual light state colors
  @each $name, $value in $theme-light-colors {
    --#{$prefix}#{$name}-light: #{$value};
  }

  // Contextual inverse state colors
  @each $name, $value in $theme-inverse-colors {
    --#{$prefix}#{$name}-inverse: #{$value};
  }

  // Contextual rbg colors
  @each $name, $value in $theme-colors {
    --#{$prefix}#{$name}-rgb: #{to-rgb($value)};
  }

  // Text colors
  @each $name, $value in $theme-text-colors {
    --#{$prefix}text-#{$name}: #{$value};
  }

  // Components
  --#{$prefix}border-color: #{$border-color};
  --#{$prefix}border-dashed-color: #{$border-dashed-color};

  --#{$prefix}component-active-color: #{$component-active-color};
  --#{$prefix}component-active-bg: #{$component-active-bg};
  --#{$prefix}component-hover-color: #{$component-hover-color};
  --#{$prefix}component-hover-bg: #{$component-hover-bg};
  --#{$prefix}component-checked-color: #{$component-checked-color};
  --#{$prefix}component-checked-bg: #{$component-checked-bg};

  // Box shadow
  --#{$prefix}box-shadow-xs: #{$box-shadow-xs};
  --#{$prefix}box-shadow-sm: #{$box-shadow-sm};
  --#{$prefix}box-shadow: #{$box-shadow};
  --#{$prefix}box-shadow-lg: #{$box-shadow-lg};

  // Forms
  --#{$prefix}input-bg: #{$input-bg};
  --#{$prefix}input-color: #{$input-color};
  --#{$prefix}input-solid-color: #{$input-solid-color};
  --#{$prefix}input-solid-bg: #{$input-solid-bg};
  --#{$prefix}input-solid-bg-focus: #{$input-solid-bg-focus};
  --#{$prefix}input-solid-placeholder-color: #{$input-solid-placeholder-color};

  // Tooltip
  --#{$prefix}tooltip-box-shadow: #{$tooltip-box-shadow-dark};

  // Table
  --#{$prefix}table-striped-bg: #{$table-striped-bg};
  --#{$prefix}table-loading-message-box-shadow: #{$table-loading-message-box-shadow};

  // Dropdowns
  --#{$prefix}dropdown-bg: #{$dropdown-bg};
  --#{$prefix}dropdown-box-shadow: #{$dropdown-box-shadow};

  // Code
  --#{$prefix}code-bg: #{$code-bg};
  --#{$prefix}code-box-shadow: #{$code-box-shadow};
  --#{$prefix}code-color: #{$code-color};

  // Symbol
  --#{$prefix}symbol-label-color: #{$symbol-label-color};
  --#{$prefix}symbol-label-bg: #{$symbol-label-bg};
  --#{$prefix}symbol-border-color: #{$symbol-border-color};

  // Bullet
  --#{$prefix}bullet-bg-color: #{$bullet-bg-color};

  // Scrolltop
  --#{$prefix}scrolltop-opacity: #{$scrolltop-opacity};
  --#{$prefix}scrolltop-opacity-on: #{$scrolltop-opacity-on};
  --#{$prefix}scrolltop-opacity-hover: #{$scrolltop-opacity-hover};
  --#{$prefix}scrolltop-box-shadow: #{$scrolltop-box-shadow};
  --#{$prefix}scrolltop-bg-color: #{$scrolltop-bg-color};
  --#{$prefix}scrolltop-bg-color-hover: #{$scrolltop-bg-color-hover};
  --#{$prefix}scrolltop-icon-color: #{$scrolltop-icon-color};
  --#{$prefix}scrolltop-icon-color-hover: #{$scrolltop-icon-color-hover};

  // Keenthemes drawer component
  --#{$prefix}drawer-box-shadow: #{$drawer-box-shadow};
  --#{$prefix}drawer-bg-color: #{$drawer-bg-color};
  --#{$prefix}drawer-overlay-bg-color: #{$drawer-overlay-bg-color};

  // Keenthemes menu component
  --#{$prefix}menu-dropdown-box-shadow: #{$menu-dropdown-box-shadow};
  --#{$prefix}menu-dropdown-bg-color: #{$menu-dropdown-bg-color};
  --#{$prefix}menu-heading-color: #{$menu-heading-color};
  --#{$prefix}menu-link-color-hover: #{$menu-link-color-hover};
  --#{$prefix}menu-link-color-show: #{$menu-link-color-show};
  --#{$prefix}menu-link-color-here: #{$menu-link-color-here};
  --#{$prefix}menu-link-color-active: #{$menu-link-color-active};
  --#{$prefix}menu-link-bg-color-hover: #{$menu-link-bg-color-hover};
  --#{$prefix}menu-link-bg-color-show: #{$menu-link-bg-color-show};
  --#{$prefix}menu-link-bg-color-here: #{$menu-link-bg-color-here};
  --#{$prefix}menu-link-bg-color-active: #{$menu-link-bg-color-active};

  // Keenthemes scrollbar component
  --#{$prefix}scrollbar-color: #{$scrollbar-color};
  --#{$prefix}scrollbar-hover-color: #{$scrollbar-hover-color};

  // Keenthemes overlay component
  --#{$prefix}overlay-bg: #{$overlay-bg};

  // Keenthemes blockui component
  --#{$prefix}blockui-overlay-bg: #{$blockui-overlay-bg};

  // Keenthemes rating component
  --#{$prefix}rating-color-default: #{$rating-color-default};
  --#{$prefix}rating-color-active: #{$rating-color-active};

  // Keenthemes ribbon component
  --#{$prefix}ribbon-label-box-shadow: #{$ribbon-label-box-shadow};
  --#{$prefix}ribbon-label-bg: #{$ribbon-label-bg};
  --#{$prefix}ribbon-label-border-color: #{$ribbon-label-border-color};
  --#{$prefix}ribbon-clip-bg: #{$ribbon-clip-bg};

  // Engage panel
  --#{$prefix}engage-btn-bg: #{$engage-btn-bg};
  --#{$prefix}engage-btn-box-shadow: #{$engage-btn-box-shadow};
  --#{$prefix}engage-btn-border-color: #{$engage-btn-border-color};
  --#{$prefix}engage-btn-color: #{$engage-btn-color};
  --#{$prefix}engage-btn-icon-color: #{$engage-btn-icon-color};
  --#{$prefix}engage-btn-color-active: #{$engage-btn-color-active};
}

@include color-mode(dark) {
  // Bootstrap muted color
  --#{$prefix}text-muted: #{$text-muted-dark};

  // Grey colors
  @each $name, $value in $grays-dark {
    --#{$prefix}gray-#{$name}: #{$value};
    --#{$prefix}gray-#{$name}-rgb: #{to-rgb($value)};
  }

  // Contextual colors
  @each $name, $value in $theme-colors-dark {
    --#{$prefix}#{$name}: #{$value};
  }

  // Contextual active state colors
  @each $name, $value in $theme-active-colors-dark {
    --#{$prefix}#{$name}-active: #{$value};
  }

  // Contextual light state colors
  @each $name, $value in $theme-light-colors-dark {
    --#{$prefix}#{$name}-light: #{$value};
  }

  // Contextual inverse state colors
  @each $name, $value in $theme-inverse-colors-dark {
    --#{$prefix}#{$name}-inverse: #{$value};
  }

  // Contextual rbg colors
  @each $name, $value in $theme-colors-dark {
    --#{$prefix}#{$name}-rgb: #{to-rgb($value)};
  }

  // Text colors
  @each $name, $value in $theme-text-colors-dark {
    --#{$prefix}text-#{$name}: #{$value};
  }

  // Components
  --#{$prefix}border-color: #{$border-color-dark};
  --#{$prefix}border-dashed-color: #{$border-dashed-color-dark};

  --#{$prefix}component-active-color: #{$component-active-color-dark};
  --#{$prefix}component-active-bg: #{$component-active-bg-dark};
  --#{$prefix}component-hover-color: #{$component-hover-color-dark};
  --#{$prefix}component-hover-bg: #{$component-hover-bg-dark};
  --#{$prefix}component-checked-color: #{$component-checked-color-dark};
  --#{$prefix}component-checked-bg: #{$component-checked-bg-dark};

  // Box shadow
  --#{$prefix}box-shadow-xs: #{$box-shadow-xs-dark};
  --#{$prefix}box-shadow-sm: #{$box-shadow-sm-dark};
  --#{$prefix}box-shadow: #{$box-shadow-dark};
  --#{$prefix}box-shadow-lg: #{$box-shadow-lg-dark};

  // Forms
  --#{$prefix}input-color: #{$input-color};
  --#{$prefix}input-bg: #{$input-bg};
  --#{$prefix}input-solid-color: #{$input-solid-color};
  --#{$prefix}input-solid-bg: #{$input-solid-bg};
  --#{$prefix}input-solid-bg-focus: #{$input-solid-bg-focus};
  --#{$prefix}input-solid-placeholder-color: #{$input-solid-placeholder-color};

  // Tooltip
  --#{$prefix}tooltip-box-shadow: #{$tooltip-box-shadow-dark};

  // Card
  --#{$prefix}card-box-shadow: #{$card-box-shadow-dark};

  // Table
  --#{$prefix}table-striped-bg: #{$table-striped-bg-dark};
  --#{$prefix}table-loading-message-box-shadow: #{$table-loading-message-box-shadow-dark};

  // Dropdowns
  --#{$prefix}dropdown-bg: #{$dropdown-bg-dark};
  --#{$prefix}dropdown-box-shadow: #{$dropdown-box-shadow-dark};

  // Code
  --#{$prefix}code-bg: #{$code-bg-dark};
  --#{$prefix}code-box-shadow: #{$code-box-shadow-dark};
  --#{$prefix}code-color: #{$code-color-dark};

  // Symbol
  --#{$prefix}symbol-label-color: #{$symbol-label-color-dark};
  --#{$prefix}symbol-label-bg: #{$symbol-label-bg-dark};
  --#{$prefix}symbol-border-color: #{$symbol-border-color-dark};

  // Bullet
  --#{$prefix}bullet-bg-color: #{$bullet-bg-color-dark};

  // Scrolltop
  --#{$prefix}scrolltop-opacity: #{$scrolltop-opacity-dark};
  --#{$prefix}scrolltop-opacity-on: #{$scrolltop-opacity-on-dark};
  --#{$prefix}scrolltop-opacity-hover: #{$scrolltop-opacity-hover-dark};
  --#{$prefix}scrolltop-box-shadow: #{$scrolltop-box-shadow-dark};
  --#{$prefix}scrolltop-bg-color: #{$scrolltop-bg-color-dark};
  --#{$prefix}scrolltop-bg-color-hover: #{$scrolltop-bg-color-hover-dark};
  --#{$prefix}scrolltop-icon-color: #{$scrolltop-icon-color-dark};
  --#{$prefix}scrolltop-icon-color-hover: #{$scrolltop-icon-color-hover-dark};

  // Keenthemes drawer component
  --#{$prefix}drawer-box-shadow: #{$drawer-box-shadow-dark};
  --#{$prefix}drawer-bg-color: #{$drawer-bg-color-dark};
  --#{$prefix}drawer-overlay-bg-color: #{$drawer-overlay-bg-color-dark};

  // Keenthemes menu component
  --#{$prefix}menu-dropdown-box-shadow: #{$menu-dropdown-box-shadow-dark};
  --#{$prefix}menu-dropdown-bg-color: #{$menu-dropdown-bg-color-dark};
  --#{$prefix}menu-heading-color: #{$menu-heading-color-dark};

  --#{$prefix}menu-link-color-hover: #{$menu-link-color-hover-dark};
  --#{$prefix}menu-link-color-show: #{$menu-link-color-show-dark};
  --#{$prefix}menu-link-color-here: #{$menu-link-color-here-dark};
  --#{$prefix}menu-link-color-active: #{$menu-link-color-active-dark};
  --#{$prefix}menu-link-bg-color-hover: #{$menu-link-bg-color-hover-dark};
  --#{$prefix}menu-link-bg-color-show: #{$menu-link-bg-color-show-dark};
  --#{$prefix}menu-link-bg-color-here: #{$menu-link-bg-color-here-dark};
  --#{$prefix}menu-link-bg-color-active: #{$menu-link-bg-color-active-dark};

  // Keenthemes scrollbar component
  --#{$prefix}scrollbar-color: #{$scrollbar-color-dark};
  --#{$prefix}scrollbar-hover-color: #{$scrollbar-hover-color-dark};

  // Keenthemes overlay component
  --#{$prefix}overlay-bg: #{$overlay-bg-dark};

  // Keenthemes blockui component
  --#{$prefix}blockui-overlay-bg: #{$blockui-overlay-bg-dark};

  // Keenthemes rating component
  --#{$prefix}rating-color-default: #{$rating-color-default-dark};
  --#{$prefix}rating-color-active: #{$rating-color-active-dark};

  // Keenthemes ribbon component
  --#{$prefix}ribbon-label-box-shadow: #{$ribbon-label-box-shadow-dark};
  --#{$prefix}ribbon-label-bg: #{$ribbon-label-bg-dark};
  --#{$prefix}ribbon-label-border-color: #{$ribbon-label-border-color-dark};
  --#{$prefix}ribbon-clip-bg: #{$ribbon-clip-bg-dark};

  // Engage panel
  --#{$prefix}engage-btn-bg: #{$engage-btn-bg-dark};
  --#{$prefix}engage-btn-box-shadow: #{$engage-btn-box-shadow-dark};
  --#{$prefix}engage-btn-border-color: #{$engage-btn-border-color-dark};
  --#{$prefix}engage-btn-color: #{$engage-btn-color-dark};
  --#{$prefix}engage-btn-icon-color: #{$engage-btn-icon-color-dark};
  --#{$prefix}engage-btn-color-active: #{$engage-btn-color-active-dark};
}
//
// Reboot
//

h1,
h2,
h3,
h4,
h5,
h6 {
  outline: 0;
}

.blockquote-footer {
  color: var(--#{$prefix}blockquote-footer-color);
}

.list-style-none {
  list-style: none;
}
//
// Theme Modes
//

// Used for theme mode switching via JS
[data-kt-theme-mode-switching="true"] * {
  transition: none !important;
}

// Light mode
@include color-mode(light) {
  .theme-dark-show {
    display: none !important;
  }

  .theme-light-bg-transparent {
    background-color: transparent !important;
  }

  .theme-light-bg-body {
    background-color: var(--#{$prefix}body-bg) !important;
  }
}

// Dark mode
@include color-mode(dark) {
  .theme-light-show {
    display: none !important;
  }

  .theme-dark-bg-transparent {
    background-color: transparent !important;
  }

  .theme-dark-bg-body {
    background-color: var(--#{$prefix}body-bg) !important;
  }
}
//
// Animation
//

// Base
.animation {
  animation-duration: 1s;
  animation-fill-mode: both;
}

// Slide In Down
@keyframes animationSlideInDown {
    from {
        transform: translate3d(0, -100%, 0);
        visibility: visible;
    }

    to {
        transform: translate3d(0, 0, 0);
    }
}

.animation-slide-in-down {
    animation-name: animationSlideInDown;
}

// Slide In Up
@keyframes animationSlideInUp {
    from {
        transform: translate3d(0, 100%, 0);
        visibility: visible;
    }

    to {
        transform: translate3d(0, 0, 0);
    }
}

.animation-slide-in-up {
    animation-name: animationSlideInUp;
}

// Fade In
@keyframes animationFadeIn {
    from {
        opacity: 0;
    }

    to {
        opacity: 1;
    }
}

.animation-fade-in {
    animation-name: animationFadeIn;
}

// Fade Out
@keyframes animationFadeOut {
    from {
        opacity: 1;
    }

    to {
        opacity: 0;
    }
}
.animation-fade-out {
    animation-name: animationFadeOut;
}

// Blink
.animation-blink {
    animation: animationBlink 1s steps(5, start) infinite;
}

@keyframes animationBlink {
    to {
        visibility: hidden;
    }
}
//
// Alert
//
	
@each $name, $value in $theme-colors {
	.alert-#{$name} {
		color: var(--#{$prefix}#{$name});
		border-color: var(--#{$prefix}#{$name});
		background-color: var(--#{$prefix}#{$name}-light);

		.alert-link {
    		color: var(--#{$prefix}#{$name});
  		}
	}
}

//
// Dropdown
//

@if $enable-dark-mode {
  @include color-mode(dark) {
      .dropdown-menu {
          @include box-shadow($dropdown-box-shadow-dark);
      }
  }
}
.toast {
	.toast-header {
		.btn-close {
			margin-right: 0;	
		}	
	}
}

@if $enable-dark-mode {
    @include color-mode(dark) {
        .toast {
			--#{$prefix}toast-bg: #{$toast-background-color-dark};
			--#{$prefix}toast-header-bg: #{$toast-header-background-color-dark};
			--#{$prefix}toast-header-border-color: #{$toast-header-border-color-dark};
        }
    }
}
//
// Nav
//

// Nav pills
.nav-pills {
	.nav-item {
		margin-right: 0.5rem;

		&:last-child {
			margin-right: 0;
		}
	}
}

// Stretch items
.nav-stretch {
	align-items: stretch;
	padding-top: 0 !important;
	padding-bottom: 0 !important;

	.nav-item {
		display: flex;
		align-items: stretch;
		padding-top: 0 !important;
		padding-bottom: 0 !important;
	}

	.nav-link {
		display: flex;
		align-items: center;
	}
}

// Nav group
.nav-group {
	padding: 0.35rem;
	@include border-radius($border-radius);
	background-color: var(--#{$prefix}gray-100);

	// Outline nav group
	&.nav-group-outline {	
		background-color: transparent;
		border: 1px solid var(--#{$prefix}border-color);	
	}

	// Fluid option
	&.nav-group-fluid {
		display: flex;

		> label,
		> .btn {
			position: relative;
			flex-shrink: 0;
			flex-grow: 1;
			flex-basis: 0;
		}

		> label {
			margin-right: 0.1rem;

			> .btn {
				width: 100%;
			}

			&:last-child {
				margin-right: 0;
			}
		}
	}
}
//
// Nav
//

// Line tabs
.nav-line-tabs {
	border-bottom-width: 1px;
	border-bottom-style: solid;
	border-bottom-color: var(--#{$prefix}border-color);

	.nav-item {
		margin-bottom: -1px;

		// Base link
		.nav-link {
			color: var(--#{$prefix}gray-500);
			border: 0;
			border-bottom: 1px solid transparent;
			transition: $transition-link;
			padding: 0.5rem 0;
			margin: 0 1rem;
		}

		// First Item
		&:first-child {
			.nav-link {
				margin-left: 0;
			}
		}

		// Last Item
		&:last-child {
			.nav-link {
				margin-right: 0;
			}
		}
	}

	// Active & Hover States
	.nav-item .nav-link.active,
  	.nav-item.show .nav-link,
	.nav-item .nav-link:hover:not(.disabled) {
		background-color: transparent;
		border: 0;
		border-bottom: 1px solid var(--#{$prefix}primary);
		transition: $transition-link;
  	}

	// 2x Line
	&.nav-line-tabs-2x {
		border-bottom-width: 2px;

		.nav-item {
			margin-bottom: -2px;

			.nav-link {
				border-bottom-width: 2px;
			}
		}

		// Active & Hover States
		.nav-item .nav-link.active,
	  	.nav-item.show .nav-link,
		.nav-item .nav-link:hover:not(.disabled) {
			border-bottom-width: 2px;
		}
	}
}
//
// Custom Nav Pills
//

.nav.nav-pills.nav-pills-custom {
	// States
	.show > .nav-link,
	.nav-link{		
		border: 1px dashed var(--#{$prefix}border-dashed-color);
		@include border-radius($border-radius-lg);
		
		&.nav-link-border-solid {
			border: 3px solid var(--#{$prefix}border-dashed-color);

			&.active {					 		
				border: 3px solid var(--#{$prefix}primary);	 
			}
		}
		
        .nav-icon {
            img {
                width: 30px;
                transition: $transition-link;

                &.default {
                    display: inline-block;
                }

                &.active {
                    display: none;
                }
            }
        }

        &.active {	
			background-color: transparent;		
			border: 1px solid var(--#{$prefix}border-dashed-color);
			transition-duration: 1ms;			
			position: relative;

			.nav-text {
				color: var(--#{$prefix}gray-800) !important;
				transition: $transition-link;
			}
			
			.bullet-custom {
				display: block;			  	
			}
		}

		.bullet-custom {
			display: none;			  	
		}
	}

	&.nav-pills-active-custom {
		.nav-item {				 
			.nav-link {
				&:not(:active) {				 
					span:nth-child(1) {
						color: #B5B5C3;
					}
	
					span:nth-child(2) {
						color: #3F4254;
					}						 	 
				}		

				&:hover {				 
					span:nth-child(1) {
						color: $white !important;
					}
	
					span:nth-child(2) {
						color: $white !important;
					}						 	 
				}
				
				&.active {				 
					span:nth-child(1) {
						color: $white !important;
					}
	
					span:nth-child(2) {
						color: $white !important;
					}						 	 
				}	
			}				 		 
		}		 
	}
}
//
// Pagination
//

.pagination {
	display:flex;
	flex-wrap: wrap;
	justify-content: center;
	margin: 0;

	// Pagination circle
	&.pagination-circle {
		.page-link {
			border-radius: 50%;
		}
	}

	// Pagination outline
	&.pagination-outline {
		.page-link {
			border: 1px solid var(--#{$prefix}border-color);
		}

		.page-item {
			&:hover:not(.disabled),
		    &.active {
			    .page-link {
			        border-color: var(--#{$prefix}primary-light);
				}	
			}
		}
	}		
}

.page-item {
    margin-right: $pagination-item-space;

	&:last-child {
        margin-right: 0;
    }

	.page-link {
		display:flex;
		justify-content: center;
		align-items: center;
		border-radius: $btn-border-radius;
		height: $pagination-item-height;
		min-width: $pagination-item-height;
		font-weight: $pagination-font-weight;
		font-size: $pagination-font-size;

		i {
			font-size: $pagination-icon-font-size;
		}

		/*rtl:options:{"autoRename":false}*/
		.previous,
		.next {
			display: block;
			height: $pagination-icon-height;
			width: $pagination-icon-height;

			/*rtl:raw:transform: rotateZ(-180deg);*/
		}
		/*rtl:end:ignore*/

		.previous {
			@include svg-bg-icon(arrow-start, $pagination-color);
		}

		/*rtl:options:{"autoRename":false}*/
		.next {
			@include svg-bg-icon(arrow-end, $pagination-color);
		}
	}

	&:focus {
		.page-link {
			color: var(--#{$prefix}pagination-focus-color);

			.svg-icon,
			i {
				color: var(--#{$prefix}pagination-focus-color);
			}

			.previous {
				@include svg-bg-icon(arrow-start, var(--#{$prefix}pagination-focus-color));
			}

			/*rtl:options:{"autoRename":false}*/
			.next {
				@include svg-bg-icon(arrow-end, var(--#{$prefix}pagination-focus-color));
			}
		}
	}

	&:hover:not(.active):not(.offset):not(.disabled) {
		.page-link {
			color: var(--#{$prefix}pagination-hover-color);
			
			&.page-text {
				background-color: transparent;	
			}

			.svg-icon,
			i {
				color: var(--#{$prefix}pagination-hover-color);
			}

			.previous {
				@include svg-bg-icon(arrow-start, var(--#{$prefix}pagination-hover-color));
			}

			/*rtl:options:{"autoRename":false}*/
			.next {
				@include svg-bg-icon(arrow-end, var(--#{$prefix}pagination-hover-color));
			}
		}
	}

	&.active {
		.page-link {
			color: var(--#{$prefix}pagination-active-color);

			&.page-text {
				background-color: transparent;	
			}

			.svg-icon,
			i {
				color: var(--#{$prefix}pagination-active-color);;
			}
				
			.previous {
				@include svg-bg-icon(arrow-start, var(--#{$prefix}pagination-active-color));
			}

			/*rtl:options:{"autoRename":false}*/
			.next {
				@include svg-bg-icon(arrow-end, var(--#{$prefix}pagination-active-color));
			}
		}
	}

	&.disabled {
		.page-link {
			color: var(--#{$prefix}pagination-disabled-color);

			.svg-icon,
			i {
				color: var(--#{$prefix}pagination-disabled-color);
			}

			.previous {
				@include svg-bg-icon(arrow-start, var(--#{$prefix}pagination-disabled-color));
			}

			/*rtl:options:{"autoRename":false}*/
			.next {
				@include svg-bg-icon(arrow-end, var(--#{$prefix}pagination-disabled-color));
			}
		}
	}
	/*rtl:end:ignore*/
}

// Tablet & mobile modes
@include media-breakpoint-down(lg) {
	.page-item {
		margin-right: $pagination-item-space-tablet-and-mobile;

		&:last-child {
			margin-right: 0;
		}
	}
}
//
// Separator
//

.separator {
  display: block;
  height: 0;
  border-bottom: 1px solid var(--#{$prefix}border-color);

  &.separator-dotted {
      border-bottom-style: dotted;
      border-bottom-color: var(--#{$prefix}border-dashed-color);
  }

  &.separator-dashed {
      border-bottom-style: dashed;
      border-bottom-color: var(--#{$prefix}border-dashed-color);
  }

  &.separator-content {
      display: flex;
      align-items: center;
      border-bottom: 0;
      text-align: center;

      &::before,
      &::after {
          content: " ";
          width: 50%;
          border-bottom: 1px solid var(--#{$prefix}border-color);
      }

      &::before{
          margin-right: 1.25rem;
      }

      &::after{
          margin-left: 1.25rem;
      }

      &.separator-dotted {
          &::before,
          &::after {
              border-bottom-style: dotted;
              border-bottom-color: var(--#{$prefix}border-dashed-color);
          }
      }

      &.separator-dashed {
          &::before,
          &::after {
              border-bottom-style: dashed;
              border-bottom-color: var(--#{$prefix}border-dashed-color);
          }
      }

      @each $color, $value in $theme-colors {
          &.border-#{$color}{
              &::before,
              &::after {
                  border-color: $value !important; 
              }
          }
      }
  }
}

// Layout
//
// Hoverable
//

@mixin app-layout-minimize($class) {
  // Desktop mode
  @include media-breakpoint-up(lg) {
    [data-kt-#{$class}-minimize="on"]:not(
        [data-kt-#{$class}-hoverable="true"]
      ) {
      .#{$class} {
        @content;
      }
    }

    [data-kt-#{$class}-minimize="on"][data-kt-#{$class}-hoverable="true"] {
      .#{$class} {
        &:not(:hover) {
          @content;
        }
      }
    }
  }
}

@mixin app-layout-minimize-mobile($class) {
  // Tablet & mobile modes
  @include media-breakpoint-down(lg) {
    [data-kt-#{$class}-minimize-mobile="on"]:not[data-kt-#{$class}-hoverable-mobile="true"] {
      .#{$class} {
        @content;
      }
    }

    [data-kt-#{$class}-minimize-mobile="on"][data-kt-#{$class}-hoverable-mobile="true"] {
      .#{$class} {
        &:not(:hover) {
          @content;
        }
      }
    }
  }
}

//
// Layout Transition Mixin
//

@mixin app-layout-transition($properties: all) {
  transition: $properties $app-general-transition-duration
    $app-general-transition-timing !important;
}
//
// Root
//

@include color-mode(light) {
  // Layouts
  @include property(--#{$prefix}app-bg-color, $app-bg-color);
  @include property(--#{$prefix}app-blank-bg-color, $app-blank-bg-color);

  // Header base
  @include property(
    --#{$prefix}app-header-base-bg-color,
    $app-header-base-bg-color
  );
  @include property(
    --#{$prefix}app-header-base-box-shadow,
    $app-header-base-box-shadow
  );
  @include property(
    --#{$prefix}app-header-base-border-bottom,
    $app-header-base-border-bottom
  );

  // Header minimize
  @include property(
    --#{$prefix}app-header-minimize-bg-color,
    $app-header-minimize-bg-color
  );
  @include property(
    --#{$prefix}app-header-minimize-box-shadow,
    $app-header-minimize-box-shadow
  );
  @include property(
    --#{$prefix}app-header-minimize-border-bottom,
    $app-header-minimize-border-bottom
  );

  // Header sticky
  @include property(
    --#{$prefix}app-header-sticky-bg-color,
    $app-header-sticky-bg-color
  );
  @include property(
    --#{$prefix}app-header-sticky-box-shadow,
    $app-header-sticky-box-shadow
  );
  @include property(
    --#{$prefix}app-header-sticky-border-bottom,
    $app-header-sticky-border-bottom
  );

  // Header primary
  @include property(
    --#{$prefix}app-header-primary-base-bg-color,
    $app-header-primary-base-bg-color
  );
  @include property(
    --#{$prefix}app-header-primary-base-box-shadow,
    $app-header-primary-base-box-shadow
  );
  @include property(
    --#{$prefix}app-header-primary-base-border-bottom,
    $app-header-primary-base-border-bottom
  );

  @include property(
    --#{$prefix}app-header-primary-minimize-bg-color,
    $app-header-primary-minimize-bg-color
  );
  @include property(
    --#{$prefix}app-header-primary-minimize-box-shadow,
    $app-header-primary-minimize-box-shadow
  );
  @include property(
    --#{$prefix}app-header-primary-minimize-border-top,
    $app-header-primary-minimize-border-top
  );
  @include property(
    --#{$prefix}app-header-primary-minimize-border-bottom,
    $app-header-primary-minimize-border-bottom
  );

  @include property(
    --#{$prefix}app-header-primary-sticky-bg-color,
    $app-header-primary-sticky-bg-color
  );
  @include property(
    --#{$prefix}app-header-primary-sticky-box-shadow,
    $app-header-primary-sticky-box-shadow
  );
  @include property(
    --#{$prefix}app-header-primary-sticky-border-top,
    $app-header-primary-sticky-border-top
  );
  @include property(
    --#{$prefix}app-header-primary-sticky-border-bottom,
    $app-header-primary-sticky-border-bottom
  );

  // Header secondary base
  @include property(
    --#{$prefix}app-header-secondary-base-bg-color,
    $app-header-secondary-base-bg-color
  );
  @include property(
    --#{$prefix}app-header-secondary-base-box-shadow,
    $app-header-secondary-base-box-shadow
  );
  @include property(
    --#{$prefix}app-header-secondary-base-border-top,
    $app-header-secondary-base-border-top
  );
  @include property(
    --#{$prefix}app-header-secondary-base-border-bottom,
    $app-header-secondary-base-border-bottom
  );

  // Header secondary minimize
  @include property(
    --#{$prefix}app-header-secondary-minimize-bg-color,
    $app-header-secondary-minimize-bg-color
  );
  @include property(
    --#{$prefix}app-header-secondary-minimize-box-shadow,
    $app-header-secondary-minimize-box-shadow
  );
  @include property(
    --#{$prefix}app-header-secondary-minimize-border-top,
    $app-header-secondary-minimize-border-top
  );
  @include property(
    --#{$prefix}app-header-secondary-minimize-border-bottom,
    $app-header-secondary-minimize-border-bottom
  );

  // Header secondary sticky
  @include property(
    --#{$prefix}app-header-secondary-sticky-bg-color,
    $app-header-secondary-sticky-bg-color
  );
  @include property(
    --#{$prefix}app-header-secondary-sticky-box-shadow,
    $app-header-secondary-sticky-box-shadow
  );
  @include property(
    --#{$prefix}app-header-secondary-sticky-border-top,
    $app-header-secondary-sticky-border-top
  );
  @include property(
    --#{$prefix}app-header-secondary-sticky-border-bottom,
    $app-header-secondary-sticky-border-bottom
  );

  // Header tertiary base
  @include property(
    --#{$prefix}app-header-tertiary-base-bg-color,
    $app-header-tertiary-base-bg-color
  );
  @include property(
    --#{$prefix}app-header-tertiary-base-box-shadow,
    $app-header-tertiary-base-box-shadow
  );
  @include property(
    --#{$prefix}app-header-tertiary-base-border-top,
    $app-header-tertiary-base-border-top
  );
  @include property(
    --#{$prefix}app-header-tertiary-base-border-bottom,
    $app-header-tertiary-base-border-bottom
  );

  // Header tertiary minimize
  @include property(
    --#{$prefix}app-header-tertiary-minimize-bg-color,
    $app-header-tertiary-minimize-bg-color
  );
  @include property(
    --#{$prefix}app-header-tertiary-minimize-box-shadow,
    $app-header-tertiary-minimize-box-shadow
  );
  @include property(
    --#{$prefix}app-header-tertiary-minimize-border-top,
    $app-header-tertiary-minimize-border-top
  );
  @include property(
    --#{$prefix}app-header-tertiary-minimize-border-bottom,
    $app-header-tertiary-minimize-border-bottom
  );

  // Header tertiary sticky
  @include property(
    --#{$prefix}app-header-tertiary-sticky-bg-color,
    $app-header-tertiary-sticky-bg-color
  );
  @include property(
    --#{$prefix}app-header-tertiary-sticky-box-shadow,
    $app-header-tertiary-sticky-box-shadow
  );
  @include property(
    --#{$prefix}app-header-tertiary-sticky-border-top,
    $app-header-tertiary-sticky-border-top
  );
  @include property(
    --#{$prefix}app-header-tertiary-sticky-border-bottom,
    $app-header-tertiary-sticky-border-bottom
  );

  // Toolbar base
  @include property(
    --#{$prefix}app-toolbar-base-bg-color,
    $app-toolbar-base-bg-color
  );
  @include property(
    --#{$prefix}app-toolbar-base-box-shadow,
    $app-toolbar-base-box-shadow
  );
  @include property(
    --#{$prefix}app-toolbar-base-border-top,
    $app-toolbar-base-border-top
  );
  @include property(
    --#{$prefix}app-toolbar-base-border-bottom,
    $app-toolbar-base-border-bottom
  );

  // Toolbar minimize
  @include property(
    --#{$prefix}app-toolbar-minimize-bg-color,
    $app-toolbar-minimize-bg-color
  );
  @include property(
    --#{$prefix}app-toolbar-minimize-box-shadow,
    $app-toolbar-minimize-box-shadow
  );
  @include property(
    --#{$prefix}app-toolbar-minimize-border-top,
    $app-toolbar-minimize-border-top
  );
  @include property(
    --#{$prefix}app-toolbar-minimize-border-bottom,
    $app-toolbar-minimize-border-bottom
  );

  // Toolbar sticky
  @include property(
    --#{$prefix}app-toolbar-sticky-bg-color,
    $app-toolbar-sticky-bg-color
  );
  @include property(
    --#{$prefix}app-toolbar-sticky-box-shadow,
    $app-toolbar-sticky-box-shadow
  );
  @include property(
    --#{$prefix}app-toolbar-sticky-border-top,
    $app-toolbar-sticky-border-top
  );
  @include property(
    --#{$prefix}app-toolbar-sticky-border-bottom,
    $app-toolbar-sticky-border-bottom
  );

  // Sidebar base
  @include property(
    --#{$prefix}app-sidebar-base-bg-color,
    $app-sidebar-base-bg-color
  );
  @include property(
    --#{$prefix}app-sidebar-base-box-shadow,
    $app-sidebar-base-box-shadow
  );
  @include property(
    --#{$prefix}app-sidebar-base-border-start,
    $app-sidebar-base-border-start
  );
  @include property(
    --#{$prefix}app-sidebar-base-border-end,
    $app-sidebar-base-border-end
  );

  // Hero
  @include property(--#{$prefix}app-hero-bg-color, $app-hero-bg-color);
  @include property(--#{$prefix}app-hero-box-shadow, $app-hero-box-shadow);
  @include property(--#{$prefix}app-hero-border-top, $app-hero-border-top);
  @include property(
    --#{$prefix}app-hero-border-bottom,
    $app-hero-border-bottom
  );

  // Sidebar sticky
  @include property(
    --#{$prefix}app-sidebar-sticky-bg-color,
    $app-sidebar-sticky-bg-color
  );
  @include property(
    --#{$prefix}app-sidebar-sticky-box-shadow,
    $app-sidebar-sticky-box-shadow
  );
  @include property(
    --#{$prefix}app-sidebar-sticky-border-start,
    $app-sidebar-sticky-border-start
  );
  @include property(
    --#{$prefix}app-sidebar-sticky-border-end,
    $app-sidebar-sticky-border-end
  );

  // Sidebar minimize
  @include property(
    --#{$prefix}app-sidebar-minimize-bg-color,
    $app-sidebar-minimize-bg-color
  );
  @include property(
    --#{$prefix}app-sidebar-minimize-box-shadow,
    $app-sidebar-minimize-box-shadow
  );
  @include property(
    --#{$prefix}app-sidebar-minimize-hover-box-shadow,
    $app-sidebar-minimize-hover-box-shadow
  );
  @include property(
    --#{$prefix}app-sidebar-minimize-border-start,
    $app-sidebar-minimize-border-start
  );
  @include property(
    --#{$prefix}app-sidebar-minimize-border-end,
    $app-sidebar-minimize-border-end
  );

  // Sidebar primary
  @include property(
    --#{$prefix}app-sidebar-primary-base-bg-color,
    $app-sidebar-primary-base-bg-color
  );
  @include property(
    --#{$prefix}app-sidebar-primary-base-box-shadow,
    $app-sidebar-primary-base-box-shadow
  );
  @include property(
    --#{$prefix}app-sidebar-primary-base-border-start,
    $app-sidebar-primary-base-border-start
  );
  @include property(
    --#{$prefix}app-sidebar-primary-base-border-end,
    $app-sidebar-primary-base-border-end
  );

  // Sidebar primary minimize
  @include property(
    --#{$prefix}app-sidebar-primary-minimize-bg-color,
    $app-sidebar-primary-minimize-bg-color
  );
  @include property(
    --#{$prefix}app-sidebar-primary-minimize-box-shadow,
    $app-sidebar-primary-minimize-box-shadow
  );
  @include property(
    --#{$prefix}app-sidebar-primary-minimize-hover-box-shadow,
    $app-sidebar-primary-minimize-hover-box-shadow
  );
  @include property(
    --#{$prefix}app-sidebar-primary-minimize-border-start,
    $app-sidebar-primary-minimize-border-start
  );
  @include property(
    --#{$prefix}app-sidebar-primary-minimize-border-end,
    $app-sidebar-primary-minimize-border-end
  );

  // Sidebar secondary base
  @include property(
    --#{$prefix}app-sidebar-secondary-base-bg-color,
    $app-sidebar-secondary-base-bg-color
  );
  @include property(
    --#{$prefix}app-sidebar-secondary-base-box-shadow,
    $app-sidebar-secondary-base-box-shadow
  );
  @include property(
    --#{$prefix}app-sidebar-secondary-base-border-start,
    $app-sidebar-secondary-base-border-start
  );
  @include property(
    --#{$prefix}app-sidebar-secondary-base-border-end,
    $app-sidebar-secondary-base-border-end
  );

  // Sidebar secondary minimize
  @include property(
    --#{$prefix}app-sidebar-secondary-minimize-bg-color,
    $app-sidebar-secondary-minimize-bg-color
  );
  @include property(
    --#{$prefix}app-sidebar-secondary-minimize-box-shadow,
    $app-sidebar-secondary-minimize-box-shadow
  );
  @include property(
    --#{$prefix}app-sidebar-secondary-minimize-hover-box-shadow,
    $app-sidebar-secondary-minimize-hover-box-shadow
  );
  @include property(
    --#{$prefix}app-sidebar-secondary-minimize-border-start,
    $app-sidebar-secondary-minimize-border-start
  );
  @include property(
    --#{$prefix}app-sidebar-secondary-minimize-border-end,
    $app-sidebar-secondary-minimize-border-end
  );

  // Sidebar panel base
  @include property(
    --#{$prefix}app-sidebar-panel-base-bg-color,
    $app-sidebar-panel-base-bg-color
  );
  @include property(
    --#{$prefix}app-sidebar-panel-base-box-shadow,
    $app-sidebar-panel-base-box-shadow
  );
  @include property(
    --#{$prefix}app-sidebar-panel-base-border-start,
    $app-sidebar-panel-base-border-start
  );
  @include property(
    --#{$prefix}app-sidebar-panel-base-border-end,
    $app-sidebar-panel-base-border-end
  );

  // Sidebar panel sticky
  @include property(
    --#{$prefix}app-sidebar-panel-sticky-bg-color,
    $app-sidebar-panel-sticky-bg-color
  );
  @include property(
    --#{$prefix}app-sidebar-panel-sticky-box-shadow,
    $app-sidebar-panel-sticky-box-shadow
  );
  @include property(
    --#{$prefix}app-sidebar-panel-sticky-border-start,
    $app-sidebar-panel-sticky-border-start
  );
  @include property(
    --#{$prefix}app-sidebar-panel-sticky-border-end,
    $app-sidebar-panel-sticky-border-end
  );

  // Sidebar panel minimize
  @include property(
    --#{$prefix}app-sidebar-panel-minimize-bg-color,
    $app-sidebar-panel-minimize-bg-color
  );
  @include property(
    --#{$prefix}app-sidebar-panel-minimize-box-shadow,
    $app-sidebar-panel-minimize-box-shadow
  );
  @include property(
    --#{$prefix}app-sidebar-panel-minimize-hover-box-shadow,
    $app-sidebar-panel-minimize-hover-box-shadow
  );
  @include property(
    --#{$prefix}app-sidebar-panel-minimize-border-start,
    $app-sidebar-panel-minimize-border-start
  );
  @include property(
    --#{$prefix}app-sidebar-panel-minimize-border-end,
    $app-sidebar-panel-minimize-border-end
  );

  // Aside base
  @include property(
    --#{$prefix}app-aside-base-bg-color,
    $app-aside-base-bg-color
  );
  @include property(
    --#{$prefix}app-aside-base-box-shadow,
    $app-aside-base-box-shadow
  );

  // Aside sticky
  @include property(
    --#{$prefix}app-aside-sticky-bg-color,
    $app-aside-sticky-bg-color
  );
  @include property(
    --#{$prefix}app-aside-sticky-box-shadow,
    $app-aside-sticky-box-shadow
  );

  // Aside minimize
  @include property(
    --#{$prefix}app-aside-minimize-bg-color,
    $app-aside-minimize-bg-color
  );
  @include property(
    --#{$prefix}app-aside-minimize-box-shadow,
    $app-aside-minimize-box-shadow
  );
  @include property(
    --#{$prefix}app-aside-minimize-hover-box-shadow,
    $app-aside-minimize-hover-box-shadow
  );

  // Page
  @include property(--#{$prefix}app-page-bg-color, $app-page-bg-color);

  // Wrapper
  @include property(--#{$prefix}app-wrapper-bg-color, $app-wrapper-bg-color);

  // Footer
  @include property(--#{$prefix}app-footer-bg-color, $app-footer-bg-color);
  @include property(--#{$prefix}app-footer-box-shadow, $app-footer-box-shadow);
  @include property(--#{$prefix}app-footer-border-top, $app-footer-border-top);
}

@include color-mode(dark) {
  // Layouts
  @include property(--#{$prefix}app-bg-color, $app-bg-color-dark);
  @include property(--#{$prefix}app-blank-bg-color, $app-blank-bg-color-dark);

  // Header base
  @include property(
    --#{$prefix}app-header-base-bg-color,
    $app-header-base-bg-color-dark
  );
  @include property(
    --#{$prefix}app-header-base-box-shadow,
    $app-header-base-box-shadow-dark
  );
  @include property(
    --#{$prefix}app-header-base-border-bottom,
    $app-header-base-border-bottom-dark
  );

  // Header minimize
  @include property(
    --#{$prefix}app-header-minimize-bg-color,
    $app-header-minimize-bg-color-dark
  );
  @include property(
    --#{$prefix}app-header-minimize-box-shadow,
    $app-header-minimize-box-shadow-dark
  );
  @include property(
    --#{$prefix}app-header-minimize-border-bottom,
    $app-header-minimize-border-bottom-dark
  );

  // Header sticky
  @include property(
    --#{$prefix}app-header-sticky-bg-color,
    $app-header-sticky-bg-color-dark
  );
  @include property(
    --#{$prefix}app-header-sticky-box-shadow,
    $app-header-sticky-box-shadow-dark
  );
  @include property(
    --#{$prefix}app-header-sticky-border-bottom,
    $app-header-sticky-border-bottom-dark
  );

  // Header primary
  @include property(
    --#{$prefix}app-header-primary-base-bg-color,
    $app-header-primary-base-bg-color-dark
  );
  @include property(
    --#{$prefix}app-header-primary-base-box-shadow,
    $app-header-primary-base-box-shadow-dark
  );
  @include property(
    --#{$prefix}app-header-primary-base-border-bottom,
    $app-header-primary-base-border-bottom-dark
  );

  @include property(
    --#{$prefix}app-header-primary-minimize-bg-color,
    $app-header-primary-minimize-bg-color-dark
  );
  @include property(
    --#{$prefix}app-header-primary-minimize-box-shadow,
    $app-header-primary-minimize-box-shadow-dark
  );
  @include property(
    --#{$prefix}app-header-primary-minimize-border-top,
    $app-header-primary-minimize-border-top-dark
  );
  @include property(
    --#{$prefix}app-header-primary-minimize-border-bottom,
    $app-header-primary-minimize-border-bottom-dark
  );

  @include property(
    --#{$prefix}app-header-primary-sticky-bg-color,
    $app-header-primary-sticky-bg-color-dark
  );
  @include property(
    --#{$prefix}app-header-primary-sticky-box-shadow,
    $app-header-primary-sticky-box-shadow-dark
  );
  @include property(
    --#{$prefix}app-header-primary-sticky-border-top,
    $app-header-primary-sticky-border-top-dark
  );
  @include property(
    --#{$prefix}app-header-primary-sticky-border-bottom,
    $app-header-primary-sticky-border-bottom-dark
  );

  // Header secondary base
  @include property(
    --#{$prefix}app-header-secondary-base-bg-color,
    $app-header-secondary-base-bg-color-dark
  );
  @include property(
    --#{$prefix}app-header-secondary-base-box-shadow,
    $app-header-secondary-base-box-shadow-dark
  );
  @include property(
    --#{$prefix}app-header-secondary-base-border-top,
    $app-header-secondary-base-border-top-dark
  );
  @include property(
    --#{$prefix}app-header-secondary-base-border-bottom,
    $app-header-secondary-base-border-bottom-dark
  );

  // Header secondary minimize
  @include property(
    --#{$prefix}app-header-secondary-minimize-bg-color,
    $app-header-secondary-minimize-bg-color-dark
  );
  @include property(
    --#{$prefix}app-header-secondary-minimize-box-shadow,
    $app-header-secondary-minimize-box-shadow-dark
  );
  @include property(
    --#{$prefix}app-header-secondary-minimize-border-top,
    $app-header-secondary-minimize-border-top-dark
  );
  @include property(
    --#{$prefix}app-header-secondary-minimize-border-bottom,
    $app-header-secondary-minimize-border-bottom-dark
  );

  // Header secondary sticky
  @include property(
    --#{$prefix}app-header-secondary-sticky-bg-color,
    $app-header-secondary-sticky-bg-color-dark
  );
  @include property(
    --#{$prefix}app-header-secondary-sticky-box-shadow,
    $app-header-secondary-sticky-box-shadow-dark
  );
  @include property(
    --#{$prefix}app-header-secondary-sticky-border-top,
    $app-header-secondary-sticky-border-top-dark
  );
  @include property(
    --#{$prefix}app-header-secondary-sticky-border-bottom,
    $app-header-secondary-sticky-border-bottom-dark
  );

  // Header tertiary base
  @include property(
    --#{$prefix}app-header-tertiary-base-bg-color,
    $app-header-tertiary-base-bg-color-dark
  );
  @include property(
    --#{$prefix}app-header-tertiary-base-box-shadow,
    $app-header-tertiary-base-box-shadow-dark
  );
  @include property(
    --#{$prefix}app-header-tertiary-base-border-top,
    $app-header-tertiary-base-border-top-dark
  );
  @include property(
    --#{$prefix}app-header-tertiary-base-border-bottom,
    $app-header-tertiary-base-border-bottom-dark
  );

  // Header tertiary minimize
  @include property(
    --#{$prefix}app-header-tertiary-minimize-bg-color,
    $app-header-tertiary-minimize-bg-color-dark
  );
  @include property(
    --#{$prefix}app-header-tertiary-minimize-box-shadow,
    $app-header-tertiary-minimize-box-shadow-dark
  );
  @include property(
    --#{$prefix}app-header-tertiary-minimize-border-top,
    $app-header-tertiary-minimize-border-top-dark
  );
  @include property(
    --#{$prefix}app-header-tertiary-minimize-border-bottom,
    $app-header-tertiary-minimize-border-bottom-dark
  );

  // Header tertiary sticky
  @include property(
    --#{$prefix}app-header-tertiary-sticky-bg-color,
    $app-header-tertiary-sticky-bg-color-dark
  );
  @include property(
    --#{$prefix}app-header-tertiary-sticky-box-shadow,
    $app-header-tertiary-sticky-box-shadow-dark
  );
  @include property(
    --#{$prefix}app-header-tertiary-sticky-border-top,
    $app-header-tertiary-sticky-border-top-dark
  );
  @include property(
    --#{$prefix}app-header-tertiary-sticky-border-bottom,
    $app-header-tertiary-sticky-border-bottom-dark
  );

  // Toolbar base
  @include property(
    --#{$prefix}app-toolbar-base-bg-color,
    $app-toolbar-base-bg-color-dark
  );
  @include property(
    --#{$prefix}app-toolbar-base-box-shadow,
    $app-toolbar-base-box-shadow-dark
  );
  @include property(
    --#{$prefix}app-toolbar-base-border-top,
    $app-toolbar-base-border-top-dark
  );
  @include property(
    --#{$prefix}app-toolbar-base-border-bottom,
    $app-toolbar-base-border-bottom-dark
  );

  // Toolbar minimize
  @include property(
    --#{$prefix}app-toolbar-minimize-bg-color,
    $app-toolbar-minimize-bg-color-dark
  );
  @include property(
    --#{$prefix}app-toolbar-minimize-box-shadow,
    $app-toolbar-minimize-box-shadow-dark
  );
  @include property(
    --#{$prefix}app-toolbar-minimize-border-top,
    $app-toolbar-minimize-border-top-dark
  );
  @include property(
    --#{$prefix}app-toolbar-minimize-border-bottom,
    $app-toolbar-minimize-border-bottom-dark
  );

  // Toolbar sticky
  @include property(
    --#{$prefix}app-toolbar-sticky-bg-color,
    $app-toolbar-sticky-bg-color-dark
  );
  @include property(
    --#{$prefix}app-toolbar-sticky-box-shadow,
    $app-toolbar-sticky-box-shadow-dark
  );
  @include property(
    --#{$prefix}app-toolbar-sticky-border-top,
    $app-toolbar-sticky-border-top-dark
  );
  @include property(
    --#{$prefix}app-toolbar-sticky-border-bottom,
    $app-toolbar-sticky-border-bottom-dark
  );

  // Hero
  @include property(--#{$prefix}app-hero-bg-color, $app-hero-bg-color-dark);
  @include property(--#{$prefix}app-hero-box-shadow, $app-hero-box-shadow-dark);
  @include property(--#{$prefix}app-hero-border-top, $app-hero-border-top-dark);
  @include property(
    --#{$prefix}app-hero-border-bottom,
    $app-hero-border-bottom-dark
  );

  // Sidebar base
  @include property(
    --#{$prefix}app-sidebar-base-bg-color,
    $app-sidebar-base-bg-color-dark
  );
  @include property(
    --#{$prefix}app-sidebar-base-box-shadow,
    $app-sidebar-base-box-shadow-dark
  );
  @include property(
    --#{$prefix}app-sidebar-base-border-start,
    $app-sidebar-base-border-start-dark
  );
  @include property(
    --#{$prefix}app-sidebar-base-border-end,
    $app-sidebar-base-border-end-dark
  );

  // Sidebar sticky
  @include property(
    --#{$prefix}app-sidebar-sticky-bg-color,
    $app-sidebar-sticky-bg-color-dark
  );
  @include property(
    --#{$prefix}app-sidebar-sticky-box-shadow,
    $app-sidebar-sticky-box-shadow-dark
  );
  @include property(
    --#{$prefix}app-sidebar-sticky-border-start,
    $app-sidebar-sticky-border-start-dark
  );
  @include property(
    --#{$prefix}app-sidebar-sticky-border-end,
    $app-sidebar-sticky-border-end-dark
  );

  // Sidebar minimize
  @include property(
    --#{$prefix}app-sidebar-minimize-bg-color,
    $app-sidebar-minimize-bg-color-dark
  );
  @include property(
    --#{$prefix}app-sidebar-minimize-box-shadow,
    $app-sidebar-minimize-box-shadow-dark
  );
  @include property(
    --#{$prefix}app-sidebar-minimize-hover-box-shadow,
    $app-sidebar-minimize-hover-box-shadow-dark
  );
  @include property(
    --#{$prefix}app-sidebar-minimize-border-start,
    $app-sidebar-minimize-border-start-dark
  );
  @include property(
    --#{$prefix}app-sidebar-minimize-border-end,
    $app-sidebar-minimize-border-end-dark
  );

  // Sidebar primary
  @include property(
    --#{$prefix}app-sidebar-primary-base-bg-color,
    $app-sidebar-primary-base-bg-color-dark
  );
  @include property(
    --#{$prefix}app-sidebar-primary-base-box-shadow,
    $app-sidebar-primary-base-box-shadow-dark
  );
  @include property(
    --#{$prefix}app-sidebar-primary-base-border-start,
    $app-sidebar-primary-base-border-start-dark
  );
  @include property(
    --#{$prefix}app-sidebar-primary-base-border-end,
    $app-sidebar-primary-base-border-end-dark
  );

  @include property(
    --#{$prefix}app-sidebar-primary-minimize-bg-color,
    $app-sidebar-primary-minimize-bg-color-dark
  );
  @include property(
    --#{$prefix}app-sidebar-primary-minimize-box-shadow,
    $app-sidebar-primary-minimize-box-shadow-dark
  );
  @include property(
    --#{$prefix}app-sidebar-primary-minimize-hover-box-shadow,
    $app-sidebar-primary-minimize-hover-box-shadow-dark
  );
  @include property(
    --#{$prefix}app-sidebar-primary-minimize-border-start,
    $app-sidebar-primary-minimize-border-start-dark
  );
  @include property(
    --#{$prefix}app-sidebar-primary-minimize-border-end,
    $app-sidebar-primary-minimize-border-end-dark
  );

  // Sidebar secondary
  @include property(
    --#{$prefix}app-sidebar-secondary-base-bg-color,
    $app-sidebar-secondary-base-bg-color-dark
  );
  @include property(
    --#{$prefix}app-sidebar-secondary-base-box-shadow,
    $app-sidebar-secondary-base-box-shadow-dark
  );
  @include property(
    --#{$prefix}app-sidebar-secondary-base-border-start,
    $app-sidebar-secondary-base-border-start-dark
  );
  @include property(
    --#{$prefix}app-sidebar-secondary-base-border-end,
    $app-sidebar-secondary-base-border-end-dark
  );

  @include property(
    --#{$prefix}app-sidebar-secondary-minimize-bg-color,
    $app-sidebar-secondary-minimize-bg-color-dark
  );
  @include property(
    --#{$prefix}app-sidebar-secondary-minimize-box-shadow,
    $app-sidebar-secondary-minimize-box-shadow-dark
  );
  @include property(
    --#{$prefix}app-sidebar-secondary-minimize-hover-box-shadow,
    $app-sidebar-secondary-minimize-hover-box-shadow-dark
  );
  @include property(
    --#{$prefix}app-sidebar-secondary-minimize-border-start,
    $app-sidebar-secondary-minimize-border-start-dark
  );
  @include property(
    --#{$prefix}app-sidebar-secondary-minimize-border-end,
    $app-sidebar-secondary-minimize-border-end-dark
  );

  // Sidebar panel base
  @include property(
    --#{$prefix}app-sidebar-panel-base-bg-color,
    $app-sidebar-panel-base-bg-color-dark
  );
  @include property(
    --#{$prefix}app-sidebar-panel-base-box-shadow,
    $app-sidebar-panel-base-box-shadow-dark
  );
  @include property(
    --#{$prefix}app-sidebar-panel-base-border-start,
    $app-sidebar-panel-base-border-start-dark
  );
  @include property(
    --#{$prefix}app-sidebar-panel-base-border-end,
    $app-sidebar-panel-base-border-end-dark
  );

  // Sidebar panel sticky
  @include property(
    --#{$prefix}app-sidebar-panel-sticky-bg-color,
    $app-sidebar-panel-sticky-bg-color-dark
  );
  @include property(
    --#{$prefix}app-sidebar-panel-sticky-box-shadow,
    $app-sidebar-panel-sticky-box-shadow-dark
  );
  @include property(
    --#{$prefix}app-sidebar-panel-sticky-border-start,
    $app-sidebar-panel-sticky-border-start-dark
  );
  @include property(
    --#{$prefix}app-sidebar-panel-sticky-border-end,
    $app-sidebar-panel-sticky-border-end-dark
  );

  // Sidebar panel minimize
  @include property(
    --#{$prefix}app-sidebar-panel-minimize-bg-color,
    $app-sidebar-panel-minimize-bg-color-dark
  );
  @include property(
    --#{$prefix}app-sidebar-panel-minimize-box-shadow,
    $app-sidebar-panel-minimize-box-shadow-dark
  );
  @include property(
    --#{$prefix}app-sidebar-panel-minimize-hover-box-shadow,
    $app-sidebar-panel-minimize-hover-box-shadow-dark
  );
  @include property(
    --#{$prefix}app-sidebar-panel-minimize-border-start,
    $app-sidebar-panel-minimize-border-start-dark
  );
  @include property(
    --#{$prefix}app-sidebar-panel-minimize-border-end,
    $app-sidebar-panel-minimize-border-end-dark
  );

  // Aside base
  @include property(
    --#{$prefix}app-aside-base-bg-color,
    $app-aside-base-bg-color-dark
  );
  @include property(
    --#{$prefix}app-aside-base-box-shadow,
    $app-aside-base-box-shadow-dark
  );

  // Aside sticky
  @include property(
    --#{$prefix}app-aside-sticky-bg-color,
    $app-aside-sticky-bg-color-dark
  );

  // Aside minimize
  @include property(
    --#{$prefix}app-aside-minimize-bg-color,
    $app-aside-minimize-bg-color-dark
  );
  @include property(
    --#{$prefix}app-aside-minimize-box-shadow,
    $app-aside-minimize-box-shadow-dark
  );
  @include property(
    --#{$prefix}app-aside-minimize-hover-box-shadow,
    $app-aside-minimize-hover-box-shadow-dark
  );

  // Page
  @include property(--#{$prefix}app-page-bg-color, $app-page-bg-color-dark);

  // Wrapper
  @include property(
    --#{$prefix}app-wrapper-bg-color,
    $app-wrapper-bg-color-dark
  );

  // Footer
  @include property(--#{$prefix}app-footer-bg-color, $app-footer-bg-color-dark);
  @include property(
    --#{$prefix}app-footer-box-shadow,
    $app-footer-box-shadow-dark
  );
  @include property(
    --#{$prefix}app-footer-border-top,
    $app-footer-border-top-dark
  );
}

//
// Reboot
//

html {
  font-family: sans-serif;
  text-size-adjust: 100%;
}

html,
body {
  height: 100%;
  margin: 0px;
  padding: 0px;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-size: $app-general-root-font-size-desktop !important;
  font-weight: $font-weight-base;
  font-family: $font-family-sans-serif;

  // Tablet mode
  @include media-breakpoint-down(lg) {
    font-size: $app-general-root-font-size-tablet !important;
  }

  // Mobile mode
  @include media-breakpoint-down(md) {
    font-size: $app-general-root-font-size-mobile !important;
  }
}

body {
  display: flex;
  flex-direction: column;

  a:hover,
  a:active,
  a:focus {
    text-decoration: none !important;
  }
}

canvas {
  user-select: none;
}

// Angular integration
router-outlet {
  display: none;
}

// Layouts
body,
.app-default {
  background-color: var(--#{$prefix}app-bg-color);
}

.app-blank {
  background-color: var(--#{$prefix}app-blank-bg-color);
}

// Reset CSS3 Transitions for child elements
[data-kt-app-reset-transition="true"] * {
  transition: none !important;
}

//
// Page
//

.app-page {
  display: flex;
}

//
// Page loader
//

// CSS3 Transitions only after page load(data-kt-app-page-loading="on" attribute added to body tag and removed with JS on page loaded)
[data-kt-app-page-loading="on"] {
  overflow: hidden;
}

[data-kt-app-page-loading="on"] * {
  transition: none !important;
}

// Base
.app-page-loader {
  background: var(--#{$prefix}body-bg);
  color: var(--#{$prefix}body-color);
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 10000;
  display: none;

  [data-kt-app-page-loading="on"] & {
    display: flex;
    justify-content: center;
    align-items: center;
  }
}
//
// Container
//

// Desktop mode
@include media-breakpoint-up(lg) {
  .app-container {
    padding-left: $app-container-padding-x !important;
    padding-right: $app-container-padding-x !important;
  }

  .app-container-fit-desktop {
    padding-left: 0 !important;
    padding-right: 0 !important;
  }
}

// Tablet & mobile modes
@include media-breakpoint-down(lg) {
  .app-container {
    max-width: none;
    padding-left: $app-container-padding-x-mobile !important;
    padding-right: $app-container-padding-x-mobile !important;
  }

  .app-container-fit-mobile {
    padding-left: 0 !important;
    padding-right: 0 !important;
  }
}
//
// Print
//

// Add .app-print-content-only class to body element in order to allow printing only the content area
@media print {
  .app-print-content-only {
    padding: 0 !important;
    background: none !important;

    .app-wrapper,
    .app-page,
    .app-page-title,
    .app-content,
    .app-container {
      background: none !important;
      padding: 0 !important;
      margin: 0 !important;
    }

    .app-aside,
    .app-aside-panel,
    .app-sidebar,
    .app-sidebar-panel,
    .app-header,
    .app-footer,
    .app-toolbar,
    .drawer,
    .scrolltop,
    .btn {
      display: none !important;
    }
  }
}
//
// App Navbar
//

.app-navbar {
  display: flex;
  align-items: stretch;

  .app-navbar-item {
    display: flex;
    align-items: center;
  }

  &.app-navbar-stretch {
    .app-navbar-item {
      align-items: stretch;
    }
  }
}
//
// sidebar
//

// General mode
.app-header {
  transition: $app-header-base-transition;
  display: flex;
  align-items: stretch;
  background-color: var(--#{$prefix}app-header-base-bg-color);
  box-shadow: var(--#{$prefix}app-header-base-box-shadow);
  border-bottom: var(--#{$prefix}app-header-base-border-bottom);
}

// Desktop mode
@include media-breakpoint-up(lg) {
  // Base
  .app-header {
    @include property(z-index, $app-header-base-z-index);
  }

  // Vars
  :root {
    --#{$prefix}app-header-height: #{$app-header-base-height};
    --#{$prefix}app-header-height-actual: #{$app-header-base-height};
  }

  [data-kt-app-header-sticky="on"] {
    --#{$prefix}app-header-height: #{$app-header-sticky-height};
    --#{$prefix}app-header-height-actual: #{$app-header-base-height};
  }

  [data-kt-app-header-sticky="on"][data-kt-app-header-stacked="true"] {
    --#{$prefix}app-header-height: calc(
      var(--#{$prefix}app-header-primary-height, 0px) +
        var(--#{$prefix}app-header-secondary-height, 0px) +
        var(--#{$prefix}app-header-tertiary-height, 0px)
    );
    --#{$prefix}app-header-height-actual: calc(
      #{$app-header-primary-base-height} + #{$app-header-secondary-base-height} +
        #{$app-header-tertiary-base-height}
    );
  }

  [data-kt-app-header-minimize="on"] {
    --#{$prefix}app-header-height: #{$app-header-minimize-height};
  }

  // States
  .app-header {
    height: var(--#{$prefix}app-header-height);

    [data-kt-app-header-fixed="true"] & {
      @include property(z-index, $app-header-fixed-z-index);
      position: fixed;
      left: 0;
      right: 0;
      top: 0;
    }

    [data-kt-app-header-static="true"] & {
      position: relative;
    }

    [data-kt-app-header-stacked="true"] & {
      flex-direction: column;
      height: calc(
        var(--#{$prefix}app-header-primary-height) +
          var(--#{$prefix}app-header-secondary-height, 0px) +
          var(--#{$prefix}app-header-tertiary-height, 0px)
      );
    }

    [data-kt-app-header-sticky="on"] & {
      position: fixed;
      left: 0;
      right: 0;
      top: 0;
      @include property(z-index, $app-header-sticky-z-index);
      @include property(backdrop-filter, $app-header-sticky-backdrop-filter);

      background-color: var(--#{$prefix}app-header-sticky-bg-color);
      box-shadow: var(--#{$prefix}app-header-sticky-box-shadow);
      border-bottom: var(--#{$prefix}app-header-sticky-border-bottom);
    }

    [data-kt-app-header-minimize="on"] & {
      transition: $app-header-base-transition;
      @include property(z-index, $app-header-minimize-z-index);
      @include property(backdrop-filter, $app-header-minimize-backdrop-filter);

      background-color: var(--#{$prefix}app-header-minimize-bg-color);
      box-shadow: var(--#{$prefix}app-header-minimize-box-shadow);
      border-bottom: var(--#{$prefix}app-header-minimize-border-bottom);
    }

    .app-header-mobile-drawer {
      display: flex;
    }
  }

  // Integration
  .app-header {
    // Sidebar
    [data-kt-app-header-fixed="true"][data-kt-app-sidebar-fixed="true"][data-kt-app-sidebar-push-header="true"]
      &,
    [data-kt-app-header-fixed="true"][data-kt-app-sidebar-sticky="on"][data-kt-app-sidebar-push-header="true"]
      & {
      left: calc(
        var(--#{$prefix}app-sidebar-width) +
          var(--#{$prefix}app-sidebar-gap-start, 0px) +
          var(--#{$prefix}app-sidebar-gap-end, 0px)
      );
    }

    body:not(
        [data-kt-app-header-fixed="true"]
      )[data-kt-app-sidebar-fixed="true"][data-kt-app-sidebar-push-header="true"]
      &,
    body:not(
        [data-kt-app-header-fixed="true"]
      )[data-kt-app-sidebar-sticky="on"][data-kt-app-sidebar-push-header="true"]
      & {
      margin-left: calc(
        var(--#{$prefix}app-sidebar-width) +
          var(--#{$prefix}app-sidebar-gap-start, 0px) +
          var(--#{$prefix}app-sidebar-gap-end, 0px)
      );
    }

    // Sidebar Panel
    [data-kt-app-header-fixed="true"][data-kt-app-sidebar-panel-fixed="true"][data-kt-app-sidebar-panel-push-header="true"]
      &,
    [data-kt-app-header-fixed="true"][data-kt-app-sidebar-panel-sticky="on"][data-kt-app-sidebar-panel-push-header="true"]
      & {
      left: calc(
        var(--#{$prefix}app-sidebar-width) +
          var(--#{$prefix}app-sidebar-gap-start, 0px) +
          var(--#{$prefix}app-sidebar-gap-end, 0px) +
          var(--#{$prefix}app-sidebar-panel-width) +
          var(--#{$prefix}app-sidebar-panel-gap-start, 0px) +
          var(--#{$prefix}app-sidebar-panel-gap-end, 0px)
      );
    }

    body:not(
        [data-kt-app-header-fixed="true"]
      )[data-kt-app-sidebar-panel-fixed="true"][data-kt-app-sidebar-panel-push-header="true"]
      &,
    body:not(
        [data-kt-app-header-fixed="true"]
      )[data-kt-app-sidebar-panel-sticky="on"][data-kt-app-sidebar-panel-push-header="true"]
      & {
      margin-left: calc(
        var(--#{$prefix}app-sidebar-width) +
          var(--#{$prefix}app-sidebar-gap-start, 0px) +
          var(--#{$prefix}app-sidebar-gap-end, 0px) +
          var(--#{$prefix}app-sidebar-panel-width) +
          var(--#{$prefix}app-sidebar-panel-gap-start, 0px) +
          var(--#{$prefix}app-sidebar-panel-gap-end, 0px)
      );
    }

    // Toolbar
    [data-kt-app-header-fixed="true"][data-kt-app-toolbar-fixed="true"] & {
      box-shadow: none;
    }
  }
}

// Tablet & mobile modes
@include media-breakpoint-down(lg) {
  // Base
  .app-header {
    @include property(z-index, $app-header-base-z-index-mobile);
  }

  // Vars
  :root {
    --#{$prefix}app-header-height: #{$app-header-base-height-mobile};
  }

  [data-kt-app-header-sticky="on"] {
    --#{$prefix}app-header-height: #{$app-header-sticky-height-mobile};
    --#{$prefix}app-header-height-actual: #{$app-header-sticky-height-mobile};
  }

  [data-kt-app-header-minimize="on"] {
    --#{$prefix}app-header-height: #{$app-header-minimize-height-mobile};
    --#{$prefix}app-header-height-actual: #{$app-header-minimize-height-mobile};
  }

  // States
  .app-header {
    height: var(--#{$prefix}app-header-height);
    align-items: stretch;

    .app-header-mobile-drawer {
      display: none;
    }

    [data-kt-app-header-stacked="true"] & {
      flex-direction: column;
      height: calc(
        var(--#{$prefix}app-header-primary-height) +
          var(--#{$prefix}app-header-secondary-height, 0px) +
          var(--#{$prefix}app-header-tertiary-height, 0px)
      );
    }

    [data-kt-app-header-fixed-mobile="true"] & {
      @include property(z-index, $app-header-fixed-z-index-mobile);
      transition: $app-header-base-transition;
      position: fixed;
      left: 0;
      right: 0;
      top: 0;
    }

    [data-kt-app-header-sticky="on"] & {
      position: fixed;
      left: 0;
      right: 0;
      top: 0;
      @include property(z-index, $app-header-sticky-z-index-mobile);
      @include property(
        backdrop-filter,
        $app-header-sticky-backdrop-filter-mobile
      );

      background-color: var(--#{$prefix}app-header-sticky-bg-color);
      box-shadow: var(--#{$prefix}app-header-sticky-box-shadow);
      border-bottom: var(--#{$prefix}app-header-sticky-border-bottom);
    }

    [data-kt-app-header-minimize="on"] & {
      @include property(z-index, $app-header-minimize-z-index-mobile);
      @include property(
        backdrop-filter,
        $app-header-minimize-backdrop-filter-mobile
      );

      transition: $app-header-base-transition;
      background-color: var(--#{$prefix}app-header-minimize-bg-color);
      box-shadow: var(--#{$prefix}app-header-minimize-box-shadow);
      border-bottom: var(--#{$prefix}app-header-minimize-border-bottom);
    }
  }

  // Integration
  .app-header {
    // Toolbar
    [data-kt-app-header-fixed-mobile="true"][data-kt-app-toolbar-fixed-mobile="true"]
      & {
      box-shadow: none;
    }

    [data-kt-app-header-fixed-mobile="true"][data-kt-app-toolbar-sticky="on"]
      & {
      box-shadow: none;
    }
  }
}
//
// Header primary
//

// General mode
.app-header-primary {
  transition: $app-header-primary-base-transition;
  display: flex;
  align-items: stretch;
}

// Desktop mode
@include media-breakpoint-up(lg) {
  // Base
  .app-header-primary {
    @include property(z-index, $app-header-primary-base-z-index);
    background-color: var(--#{$prefix}app-header-primary-base-bg-color);
    box-shadow: var(--#{$prefix}app-header-primary-base-box-shadow);
    border-bottom: var(--#{$prefix}app-header-primary-base-border-bottom);
  }

  // Vars
  [data-kt-app-header-primary-enabled="true"] {
    --#{$prefix}app-header-primary-height: #{$app-header-primary-base-height};
  }

  [data-kt-app-header-primary-enabled="true"][data-kt-app-header-sticky="on"] {
    --#{$prefix}app-header-primary-height: #{$app-header-primary-sticky-height};
  }

  [data-kt-app-header-primary-enabled="true"][data-kt-app-header-minimize="on"] {
    --#{$prefix}app-header-primary-height: #{$app-header-primary-minimize-height};
  }

  [data-kt-app-header-primary-enabled="true"][data-kt-app-header-sticky="on"][data-kt-app-header-primary-sticky-hide="true"] {
    --#{$prefix}app-header-primary-height: 0;
  }

  // States
  .app-header-primary {
    height: var(--#{$prefix}app-header-primary-height);

    [data-kt-app-header-primary-fixed="true"] & {
      @include property(z-index, $app-header-primary-fixed-z-index);
      position: fixed;
      left: 0;
      right: 0;
      top: 0;
    }

    [data-kt-app-header-primary-static="true"] & {
      position: relative;
    }

    [data-kt-app-header-primary-sticky="on"] & {
      position: fixed;
      left: 0;
      right: 0;
      top: 0;
      @include property(height, $app-header-primary-sticky-height);
      @include property(z-index, $app-header-primary-sticky-z-index);

      background-color: var(--#{$prefix}app-header-primary-sticky-bg-color);
      box-shadow: var(--#{$prefix}app-header-primary-sticky-box-shadow);
      border-bottom: var(--#{$prefix}app-header-primary-sticky-border-bottom);
    }

    [data-kt-app-header-primary-minimize="on"] & {
      transition: $app-header-primary-base-transition;
      @include property(height, $app-header-primary-minimize-height);
      @include property(z-index, $app-header-primary-minimize-z-index);

      background-color: var(--#{$prefix}app-header-primary-minimize-bg-color);
      box-shadow: var(--#{$prefix}app-header-primary-minimize-box-shadow);
      border-bottom: var(--#{$prefix}app-header-primary-minimize-border-bottom);
    }

    [data-kt-app-header-sticky="on"][data-kt-app-header-primary-sticky-hide="true"]
      & {
      display: none !important;
    }
  }

  // Integration
  .app-header-primary {
    // Sidebar
    [data-kt-app-header-primary-enabled="true"][data-kt-app-sidebar-fixed="true"][data-kt-app-sidebar-push-header="true"]
      & {
      left: calc(
        var(--#{$prefix}app-sidebar-width) +
          var(--#{$prefix}app-sidebar-gap-start, 0px) +
          var(--#{$prefix}app-sidebar-gap-end, 0px)
      );
    }

    // Sidebar Panel
    [data-kt-app-header-primary-enabled="true"][data-kt-app-sidebar-panel-fixed="true"][data-kt-app-sidebar-panel-push-header="true"]
      & {
      left: calc(
        var(--#{$prefix}app-sidebar-width) +
          var(--#{$prefix}app-sidebar-gap-start, 0px) +
          var(--#{$prefix}app-sidebar-gap-end, 0px) +
          var(--#{$prefix}app-sidebar-panel-width) +
          var(--#{$prefix}app-sidebar-panel-gap-start, 0px) +
          var(--#{$prefix}app-sidebar-panel-gap-end, 0px)
      );
    }
  }
}

// Tablet & mobile modes
@include media-breakpoint-down(lg) {
  // Base
  .app-header .app-header-primary {
    flex-grow: 1;
    @include property(z-index, $app-header-primary-base-z-index-mobile);
    height: var(--#{$prefix}app-header-primary-height);
    border-bottom: var(--#{$prefix}app-header-primary-base-border-bottom);
    box-shadow: var(--#{$prefix}app-header-primary-base-box-shadow);
  }

  .app-header-primary {
    background-color: var(--#{$prefix}app-header-primary-base-bg-color);
  }

  // Vars
  [data-kt-app-header-primary-enabled="true"] {
    --#{$prefix}app-header-primary-height: #{$app-header-primary-base-height-mobile};
  }

  [data-kt-app-header-primary-enabled="true"][data-kt-app-header-sticky="on"] {
    --#{$prefix}app-header-primary-height: #{$app-header-primary-sticky-height-mobile};
  }

  [data-kt-app-header-primary-enabled="true"][data-kt-app-header-minimize="on"] {
    --#{$prefix}app-header-primary-height: #{$app-header-primary-minimize-height-mobile};
  }
}
//
// Header secondary
//

// General mode
.app-header-secondary {
  transition: $app-header-secondary-base-transition;
  display: flex;
  align-items: stretch;
}

// Desktop mode
@include media-breakpoint-up(lg) {
  // Base
  .app-header-secondary {
    @include property(z-index, $app-header-secondary-base-z-index);

    background-color: var(--#{$prefix}app-header-secondary-base-bg-color);
    box-shadow: var(--#{$prefix}app-header-secondary-base-box-shadow);
    border-top: var(--#{$prefix}app-header-secondary-base-border-top);
    border-bottom: var(--#{$prefix}app-header-secondary-base-border-bottom);
  }

  // Vars
  [data-kt-app-header-secondary-enabled="true"] {
    --#{$prefix}app-header-secondary-height: #{$app-header-secondary-base-height};
  }

  [data-kt-app-header-secondary-enabled="true"][data-kt-app-header-sticky="on"] {
    --#{$prefix}app-header-secondary-height: #{$app-header-secondary-sticky-height};
  }

  [data-kt-app-header-secondary-enabled="true"][data-kt-app-header-minimize="on"] {
    --#{$prefix}app-header-secondary-height: #{$app-header-secondary-minimize-height};
  }

  [data-kt-app-header-secondary-enabled="true"][data-kt-app-header-sticky="on"][data-kt-app-header-secondary-sticky-hide="true"] {
    --#{$prefix}app-header-secondary-height: 0;
  }

  // States
  .app-header-secondary {
    height: var(--#{$prefix}app-header-secondary-height);

    [data-kt-app-header-secondary-fixed="true"] & {
      @include property(z-index, $app-header-secondary-fixed-z-index);
      position: fixed;
      left: 0;
      right: 0;
      top: 0;
    }

    [data-kt-app-header-secondary-static="true"] & {
      position: static;
    }

    [data-kt-app-header-secondary-sticky="on"] & {
      transition: $app-header-secondary-base-transition;
      position: fixed;
      left: 0;
      right: 0;
      top: 0;
      @include property(height, $app-header-secondary-sticky-height);
      @include property(z-index, $app-header-secondary-sticky-z-index);

      background-color: var(--#{$prefix}app-header-secondary-sticky-bg-color);
      box-shadow: var(--#{$prefix}app-header-secondary-sticky-box-shadow);
      border-bottom: var(--#{$prefix}app-header-secondary-sticky-border-bottom);
    }

    [data-kt-app-header-secondary-minimize="on"] & {
      transition: $app-header-secondary-base-transition;
      @include property(height, $app-header-secondary-minimize-height);
      @include property(z-index, $app-header-secondary-minimize-z-index);

      background-color: var(--#{$prefix}app-header-secondary-minimize-bg-color);
      box-shadow: var(--#{$prefix}app-header-secondary-minimize-box-shadow);
      border-bottom: var(
        --#{$prefix}app-header-secondary-minimize-border-bottom
      );
    }

    [data-kt-app-header-sticky="on"][data-kt-app-header-secondary-sticky-hide="true"]
      & {
      display: none !important;
    }
  }

  // Integration
  .app-header-secondary {
    // Sidebar
    [data-kt-app-header-secondary-enabled="true"][data-kt-app-sidebar-fixed="true"][data-kt-app-sidebar-push-header="true"]
      & {
      left: calc(
        var(--#{$prefix}app-sidebar-width) +
          var(--#{$prefix}app-sidebar-gap-start, 0px) +
          var(--#{$prefix}app-sidebar-gap-end, 0px)
      );
    }

    // Sidebar Panel
    [data-kt-app-header-secondary-enabled="true"][data-kt-app-sidebar-panel-fixed="true"][data-kt-app-sidebar-panel-push-header="true"]
      & {
      left: calc(
        var(--#{$prefix}app-sidebar-width) +
          var(--#{$prefix}app-sidebar-gap-start, 0px) +
          var(--#{$prefix}app-sidebar-gap-end, 0px) +
          var(--#{$prefix}app-sidebar-panel-width) +
          var(--#{$prefix}app-sidebar-panel-gap-start, 0px) +
          var(--#{$prefix}app-sidebar-panel-gap-end, 0px)
      );
    }
  }
}

// Tablet & mobile modes
@include media-breakpoint-down(lg) {
  // Base
  .app-header .app-header-secondary {
    flex-grow: 1;
    height: var(--#{$prefix}app-header-secondary-height);
    box-shadow: var(--#{$prefix}app-header-secondary-base-box-shadow);
    border-top: var(--#{$prefix}app-header-secondary-base-border-top);
    border-bottom: var(--#{$prefix}app-header-secondary-base-border-bottom);
    @include property(z-index, $app-header-secondary-base-z-index-mobile);
  }

  .app-header-secondary {
    background-color: var(--#{$prefix}app-header-secondary-base-bg-color);
  }

  // Vars
  [data-kt-app-header-secondary-enabled="true"] {
    --#{$prefix}app-header-secondary-height: #{$app-header-secondary-base-height-mobile};
  }

  [data-kt-app-header-secondary-enabled="true"][data-kt-app-header-sticky="on"] {
    --#{$prefix}app-header-secondary-height: #{$app-header-secondary-sticky-height-mobile};
  }

  [data-kt-app-header-secondary-enabled="true"][data-kt-app-header-minimize="on"] {
    --#{$prefix}app-header-secondary-height: #{$app-header-secondary-minimize-height-mobile};
  }
}
//
// Header tertiary
//

// General mode
.app-header-tertiary {
  transition: $app-header-tertiary-base-transition;
  display: flex;
  align-items: stretch;
}

// Desktop mode
@include media-breakpoint-up(lg) {
  // Base
  .app-header-tertiary {
    @include property(z-index, $app-header-tertiary-base-z-index);

    background-color: var(--#{$prefix}app-header-tertiary-base-bg-color);
    box-shadow: var(--#{$prefix}app-header-tertiary-base-box-shadow);
    border-top: var(--#{$prefix}app-header-tertiary-base-border-top);
    border-bottom: var(--#{$prefix}app-header-tertiary-base-border-bottom);
  }

  // Vars
  [data-kt-app-header-tertiary-enabled="true"] {
    --#{$prefix}app-header-tertiary-height: #{$app-header-tertiary-base-height};
  }

  [data-kt-app-header-tertiary-enabled="true"][data-kt-app-header-sticky="on"] {
    --#{$prefix}app-header-tertiary-height: #{$app-header-tertiary-sticky-height};
  }

  [data-kt-app-header-tertiary-enabled="true"][data-kt-app-header-minimize="on"] {
    --#{$prefix}app-header-tertiary-height: #{$app-header-tertiary-minimize-height};
  }

  [data-kt-app-header-tertiary-enabled="true"][data-kt-app-header-sticky="on"][data-kt-app-header-tertiary-sticky-hide="true"] {
    --#{$prefix}app-header-tertiary-height: 0;
  }

  // States
  .app-header-tertiary {
    height: var(--#{$prefix}app-header-tertiary-height);

    [data-kt-app-header-tertiary-fixed="true"] & {
      @include property(z-index, $app-header-tertiary-fixed-z-index);
      position: fixed;
      left: 0;
      right: 0;
      top: 0;
    }

    [data-kt-app-header-tertiary-static="true"] & {
      position: static;
    }

    [data-kt-app-header-tertiary-sticky="on"] & {
      transition: $app-header-tertiary-base-transition;
      position: fixed;
      left: 0;
      right: 0;
      top: 0;
      @include property(height, $app-header-tertiary-sticky-height);
      @include property(z-index, $app-header-tertiary-sticky-z-index);

      background-color: var(--#{$prefix}app-header-tertiary-sticky-bg-color);
      box-shadow: var(--#{$prefix}app-header-tertiary-sticky-box-shadow);
      border-bottom: var(--#{$prefix}app-header-tertiary-sticky-border-bottom);
    }

    [data-kt-app-header-tertiary-minimize="on"] & {
      transition: $app-header-tertiary-base-transition;
      @include property(height, $app-header-tertiary-minimize-height);
      @include property(z-index, $app-header-tertiary-minimize-z-index);

      background-color: var(--#{$prefix}app-header-tertiary-minimize-bg-color);
      box-shadow: var(--#{$prefix}app-header-tertiary-minimize-box-shadow);
      border-bottom: var(
        --#{$prefix}app-header-tertiary-minimize-border-bottom
      );
    }

    [data-kt-app-header-sticky="on"][data-kt-app-header-tertiary-sticky-hide="true"]
      & {
      display: none !important;
    }
  }

  // Integration
  .app-header-tertiary {
    // Sidebar
    [data-kt-app-header-tertiary-enabled="true"][data-kt-app-sidebar-fixed="true"][data-kt-app-sidebar-push-header="true"]
      & {
      left: calc(
        var(--#{$prefix}app-sidebar-width) +
          var(--#{$prefix}app-sidebar-gap-start, 0px) +
          var(--#{$prefix}app-sidebar-gap-end, 0px)
      );
    }

    // Sidebar Panel
    [data-kt-app-header-tertiary-enabled="true"][data-kt-app-sidebar-panel-fixed="true"][data-kt-app-sidebar-panel-push-header="true"]
      & {
      left: calc(
        var(--#{$prefix}app-sidebar-width) +
          var(--#{$prefix}app-sidebar-gap-start, 0px) +
          var(--#{$prefix}app-sidebar-gap-end, 0px) +
          var(--#{$prefix}app-sidebar-panel-width) +
          var(--#{$prefix}app-sidebar-panel-gap-start, 0px) +
          var(--#{$prefix}app-sidebar-panel-gap-end, 0px)
      );
    }
  }
}

// Tablet & mobile modes
@include media-breakpoint-down(lg) {
  // Base
  .app-header .app-header-tertiary {
    flex-grow: 1;
    height: var(--#{$prefix}app-header-tertiary-height);
    border-top: var(--#{$prefix}app-header-tertiary-base-border-top);
    box-shadow: var(--#{$prefix}app-header-tertiary-base-box-shadow);
    @include property(z-index, $app-header-tertiary-base-z-index-mobile);
  }

  .app-header-tertiary {
    background-color: var(--#{$prefix}app-header-tertiary-base-bg-color);
  }

  // Vars
  [data-kt-app-header-tertiary-enabled="true"] {
    --#{$prefix}app-header-tertiary-height: #{$app-header-tertiary-base-height-mobile};
  }

  [data-kt-app-header-tertiary-enabled="true"][data-kt-app-header-sticky="on"] {
    --#{$prefix}app-header-tertiary-height: #{$app-header-tertiary-sticky-height-mobile};
  }

  [data-kt-app-header-secondary-enabled="true"][data-kt-app-header-minimize="on"] {
    --#{$prefix}app-header-tertiary-height: #{$app-header-tertiary-minimize-height-mobile};
  }
}
//
// Toolbar
//

// General mode
.app-toolbar {
  display: flex;
  align-items: stretch;
  background-color: var(--#{$prefix}app-toolbar-base-bg-color);
  box-shadow: var(--#{$prefix}app-toolbar-base-box-shadow);
  border-top: var(--#{$prefix}app-toolbar-base-border-top);
  border-bottom: var(--#{$prefix}app-toolbar-base-border-bottom);

  &.app-toolbar-minimize {
    transition: $app-toolbar-base-transition;
  }
}

// Desktop mode
@include media-breakpoint-up(lg) {
  // Vars
  :root {
    --#{$prefix}app-toolbar-height: #{$app-toolbar-base-height};
    --#{$prefix}app-toolbar-height-actual: #{$app-toolbar-base-height};
  }

  [data-kt-app-toolbar-sticky="on"] {
    --#{$prefix}app-toolbar-height: #{$app-toolbar-sticky-height};
  }

  [data-kt-app-toolbar-minimize="on"] {
    --#{$prefix}app-toolbar-height: #{$app-toolbar-minimize-height};
  }

  // States
  .app-toolbar {
    height: var(--#{$prefix}app-toolbar-height);

    [data-kt-app-header-fixed="true"][data-kt-app-toolbar-fixed="true"] & {
      @include property(z-index, $app-toolbar-base-z-index);
      position: fixed;
      left: 0;
      right: 0;
      top: 0;
    }

    [data-kt-app-toolbar-sticky="on"] & {
      position: fixed;
      left: 0;
      right: 0;
      top: 0;

      box-shadow: var(--#{$prefix}app-toolbar-sticky-box-shadow);
      background-color: var(--#{$prefix}app-toolbar-sticky-bg-color);
      border-top: var(--#{$prefix}app-toolbar-sticky-border-top);
      border-bottom: var(--#{$prefix}app-toolbar-sticky-border-bottom);

      @include property(z-index, $app-toolbar-sticky-z-index);
      @include property(backdrop-filter, $app-toolbar-sticky-backdrop-filter);
    }

    [data-kt-app-toolbar-minimize="on"] & {
      transition: $app-toolbar-base-transition;

      box-shadow: var(--#{$prefix}app-toolbar-minimize-box-shadow);
      background-color: var(--#{$prefix}app-toolbar-minimize-bg-color);
      border-top: var(--#{$prefix}app-toolbar-minimize-border-top);
      border-bottom: var(--#{$prefix}app-toolbar-minimize-border-bottom);

      @include property(z-index, $app-toolbar-minimize-z-index);
      @include property(backdrop-filter, $app-toolbar-minimize-backdrop-filter);
    }
  }

  // Integration
  .app-toolbar {
    // Header
    [data-kt-app-toolbar-fixed="true"][data-kt-app-header-fixed="true"] & {
      top: var(--#{$prefix}app-header-height);
    }

    // Sidebar
    [data-kt-app-toolbar-sticky="on"][data-kt-app-sidebar-fixed="true"][data-kt-app-sidebar-push-toolbar="true"]
      &,
    [data-kt-app-toolbar-fixed="true"][data-kt-app-sidebar-fixed="true"][data-kt-app-sidebar-push-toolbar="true"]
      & {
      left: calc(
        var(--#{$prefix}app-sidebar-width) +
          var(--#{$prefix}app-sidebar-gap-start, 0px) +
          var(--#{$prefix}app-sidebar-gap-end, 0px)
      );
    }

    // Sidebar panel
    [data-kt-app-toolbar-sticky="on"][data-kt-app-sidebar-panel-fixed="true"][data-kt-app-sidebar-panel-push-toolbar="true"]
      &,
    [data-kt-app-toolbar-fixed="true"][data-kt-app-sidebar-panel-fixed="true"][data-kt-app-sidebar-panel-push-toolbar="true"]
      & {
      left: calc(
        var(--#{$prefix}app-sidebar-width) +
          var(--#{$prefix}app-sidebar-gap-start, 0px) +
          var(--#{$prefix}app-sidebar-gap-end, 0px) +
          var(--#{$prefix}app-sidebar-panel-width) +
          var(--#{$prefix}app-sidebar-panel-gap-start, 0px) +
          var(--#{$prefix}app-sidebar-panel-gap-end, 0px)
      );
    }

    // Aside
    [data-kt-app-toolbar-sticky="on"][data-kt-app-aside-fixed="true"][data-kt-app-aside-push-toolbar="true"]
      &,
    [data-kt-app-toolbar-fixed="true"][data-kt-app-aside-fixed="true"][data-kt-app-aside-push-toolbar="true"]
      & {
      right: calc(
        var(--#{$prefix}app-aside-width) +
          var(--#{$prefix}app-aside-gap-start, 0px) +
          var(--#{$prefix}app-aside-gap-end, 0px)
      );
    }
  }
}

// Tablet & mobile modes
@include media-breakpoint-down(lg) {
  // Vars
  :root {
    --#{$prefix}app-toolbar-height: #{$app-toolbar-base-height-mobile};
  }

  [data-kt-app-toolbar-sticky="on"] {
    --#{$prefix}app-toolbar-height: #{$app-toolbar-sticky-height-mobile};
  }

  [data-kt-app-toolbar-minimize="on"] {
    --#{$prefix}app-toolbar-height: #{$app-toolbar-minimize-height-mobile};
  }

  // States
  .app-toolbar {
    height: var(--#{$prefix}app-toolbar-height);

    [data-kt-app-header-fixed-mobile="true"][data-kt-app-toolbar-fixed-mobile="true"]
      & {
      @include property(z-index, $app-toolbar-base-z-index-mobile);
      position: fixed;
      top: calc(
        var(--#{$prefix}app-header-height, 0px) +
          var(--#{$prefix}app-header-mobile-height, 0px)
      );
      left: 0;
      right: 0;
    }

    [data-kt-app-toolbar-sticky="on"] & {
      position: fixed;
      left: 0;
      right: 0;
      top: var(--#{$prefix}app-header-height, 0px);

      box-shadow: var(--#{$prefix}app-toolbar-sticky-box-shadow);
      background-color: var(--#{$prefix}app-toolbar-sticky-bg-color);
      border-top: var(--#{$prefix}app-toolbar-sticky-border-top);
      border-bottom: var(--#{$prefix}app-toolbar-sticky-border-bottom);

      @include property(z-index, $app-toolbar-sticky-z-index-mobile);
      @include property(
        backdrop-filter,
        $app-toolbar-sticky-backdrop-filter-mobile
      );
    }

    [data-kt-app-toolbar-minimize="on"] & {
      transition: $app-toolbar-base-transition;

      box-shadow: var(--#{$prefix}app-toolbar-minimize-box-shadow);
      background-color: var(--#{$prefix}app-toolbar-minimize-bg-color);
      border-top: var(--#{$prefix}app-toolbar-minimize-border-top);
      border-bottom: var(--#{$prefix}app-toolbar-minimize-border-bottom);

      @include property(z-index, $app-toolbar-minimize-z-index-mobile);
      @include property(
        backdrop-filter,
        $app-toolbar-minimize-backdrop-filter-mobile
      );
    }
  }
}
//
// Hero
//

// General mode
.app-hero {
  display: flex;
  align-items: stretch;
  background-color: var(--#{$prefix}app-hero-bg-color);
  box-shadow: var(--#{$prefix}app-hero-box-shadow);
  border-top: var(--#{$prefix}app-hero-border-top);
  border-bottom: var(--#{$prefix}app-hero-border-bottom);
}
//
// sidebar
//

// General mode
.app-sidebar {
  transition: $app-sidebar-base-transition;
  background-color: var(--#{$prefix}app-sidebar-base-bg-color);
  box-shadow: var(--#{$prefix}app-sidebar-base-box-shadow);
  border-left: var(--#{$prefix}app-sidebar-base-border-start);
  border-right: var(--#{$prefix}app-sidebar-base-border-end);
}

// Utilities
.app-sidebar-minimize-d-flex,
.app-sidebar-sticky-d-flex,
.app-sidebar-collapse-d-flex,
.app-sidebar-minimize-mobile-d-flex,
.app-sidebar-collapse-mobile-d-flex {
  display: none;
}

// Desktop mode
@include media-breakpoint-up(lg) {
  // Base
  .app-sidebar {
    display: flex;
    flex-shrink: 0;
    width: var(--#{$prefix}app-sidebar-width);

    @include property(z-index, $app-sidebar-base-z-index);
    @include property(margin-left, $app-sidebar-base-gap-start);
    @include property(margin-right, $app-sidebar-base-gap-end);
    @include property(margin-top, $app-sidebar-base-gap-top);
    @include property(margin-bottom, $app-sidebar-base-gap-bottom);
  }

  // Vars
  :root {
    --#{$prefix}app-sidebar-width: #{$app-sidebar-base-width};
    --#{$prefix}app-sidebar-width-actual: #{$app-sidebar-base-width};

    --#{$prefix}app-sidebar-gap-start: #{$app-sidebar-base-gap-start};
    --#{$prefix}app-sidebar-gap-end: #{$app-sidebar-base-gap-end};
    --#{$prefix}app-sidebar-gap-top: #{$app-sidebar-base-gap-top};
    --#{$prefix}app-sidebar-gap-bottom: #{$app-sidebar-base-gap-bottom};
  }

  [data-kt-app-sidebar-stacked="true"] {
    --#{$prefix}app-sidebar-width: calc(
      var(--#{$prefix}app-sidebar-primary-width) +
        var(--#{$prefix}app-sidebar-secondary-width, 0px)
    );
  }

  [data-kt-app-sidebar-minimize="on"] {
    --#{$prefix}app-sidebar-width: #{$app-sidebar-minimize-width};

    --#{$prefix}app-sidebar-gap-start: #{$app-sidebar-minimize-gap-start};
    --#{$prefix}app-sidebar-gap-end: #{$app-sidebar-minimize-gap-end};
    --#{$prefix}app-sidebar-gap-top: #{$app-sidebar-minimize-gap-top};
    --#{$prefix}app-sidebar-gap-bottom: #{$app-sidebar-minimize-gap-bottom};
  }

  [data-kt-app-sidebar-sticky="on"] {
    --#{$prefix}app-sidebar-width: #{$app-sidebar-sticky-width};

    --#{$prefix}app-sidebar-gap-start: #{$app-sidebar-sticky-gap-start};
    --#{$prefix}app-sidebar-gap-end: #{$app-sidebar-sticky-gap-end};
    --#{$prefix}app-sidebar-gap-top: #{$app-sidebar-sticky-gap-top};
    --#{$prefix}app-sidebar-gap-bottom: #{$app-sidebar-sticky-gap-bottom};
  }

  [data-kt-app-sidebar-collapse="on"] {
    --#{$prefix}app-sidebar-width: 0px;
  }

  // States
  .app-sidebar {
    [data-kt-app-sidebar-static="true"] & {
      position: relative;
    }

    [data-kt-app-sidebar-offcanvas="true"] & {
      display: none;
    }

    [data-kt-app-sidebar-fixed="true"] & {
      position: fixed;
      @include property(z-index, $app-sidebar-fixed-z-index);
      @include property(top, $app-sidebar-fixed-top);
      @include property(bottom, $app-sidebar-fixed-bottom);
      @include property(left, $app-sidebar-fixed-left);
    }

    [data-kt-app-sidebar-stacked="true"] & {
      align-items: stretch;
    }

    [data-kt-app-sidebar-sticky="on"] & {
      position: fixed;
      transition: $app-sidebar-base-transition;
      @include property(top, $app-sidebar-sticky-top);
      @include property(bottom, $app-sidebar-sticky-bottom);
      @include property(left, $app-sidebar-sticky-left);
      @include property(z-index, $app-sidebar-sticky-z-index);

      box-shadow: var(--#{$prefix}app-sidebar-sticky-box-shadow);
      border-left: var(--#{$prefix}app-sidebar-sticky-border-start);
      border-right: var(--#{$prefix}app-sidebar-sticky-border-end);

      @include property(margin-left, $app-sidebar-sticky-gap-start);
      @include property(margin-right, $app-sidebar-sticky-gap-end);
      @include property(margin-top, $app-sidebar-sticky-gap-top);
      @include property(margin-bottom, $app-sidebar-sticky-gap-bottom);
    }

    [data-kt-app-sidebar-minimize="on"] & {
      transition: $app-sidebar-base-transition;

      @include property(margin-left, $app-sidebar-minimize-gap-start);
      @include property(margin-right, $app-sidebar-minimize-gap-end);
      @include property(margin-top, $app-sidebar-minimize-gap-top);
      @include property(margin-bottom, $app-sidebar-minimize-gap-bottom);
    }

    [data-kt-app-sidebar-hoverable="true"] & {
      .app-sidebar-wrapper {
        width: var(--#{$prefix}app-sidebar-width-actual);
      }
    }

    [data-kt-app-sidebar-hoverable="true"][data-kt-app-sidebar-minimize="on"]
      &:hover:not(.animating) {
      transition: $app-sidebar-base-transition;
      width: var(--#{$prefix}app-sidebar-width-actual);
      @include property(box-shadow, $app-sidebar-minimize-hover-box-shadow);
    }

    [data-kt-app-sidebar-collapse="on"] & {
      transition: $app-sidebar-base-transition;
      width: var(--#{$prefix}app-sidebar-width-actual);
      margin-left: calc(-1 * var(--#{$prefix}app-sidebar-width-actual));
    }
  }

  // Utilities
  [data-kt-app-sidebar-minimize="on"] {
    .app-sidebar-minimize-d-none {
      display: none !important;
    }

    .app-sidebar-minimize-d-flex {
      display: flex !important;
    }
  }

  [data-kt-app-sidebar-sticky="on"] {
    .app-sidebar-sticky-d-none {
      display: none !important;
    }

    .app-sidebar-sticky-d-flex {
      display: flex !important;
    }
  }

  [data-kt-app-sidebar-collapse="on"] {
    .app-sidebar-collapse-d-none {
      display: none !important;
    }

    .app-sidebar-collapse-d-flex {
      display: flex !important;
    }
  }

  // Integration
  .app-sidebar {
    // Header
    [data-kt-app-sidebar-fixed="true"][data-kt-app-header-fixed="true"]:not(
        [data-kt-app-sidebar-push-header="true"]
      )
      & {
      top: var(--#{$prefix}app-header-height);
    }

    // Toolbar
    [data-kt-app-sidebar-fixed="true"][data-kt-app-header-fixed="true"][data-kt-app-toolbar-fixed="true"]:not(
        [data-kt-app-sidebar-push-toolbar="true"]
      )
      & {
      top: calc(
        var(--#{$prefix}app-header-height) +
          var(--#{$prefix}app-toolbar-height, 0px)
      );
    }
  }
}

// Tablet & mobile modes
@include media-breakpoint-down(lg) {
  // Base
  .app-sidebar {
    display: none;
    width: var(--#{$prefix}app-sidebar-width);

    @include property(z-index, $app-sidebar-base-z-index-mobile);
    @include property(margin-left, $app-sidebar-base-gap-start-mobile);
    @include property(margin-right, $app-sidebar-base-gap-end-mobile);
    @include property(margin-top, $app-sidebar-base-gap-top-mobile);
    @include property(margin-bottom, $app-sidebar-base-gap-bottom-mobile);
  }

  // Vars
  :root {
    --#{$prefix}app-sidebar-width: #{$app-sidebar-base-width-mobile};
    --#{$prefix}app-sidebar-width-actual: #{$app-sidebar-base-width-mobile};

    --#{$prefix}app-sidebar-gap-start: #{$app-sidebar-base-gap-start-mobile};
    --#{$prefix}app-sidebar-gap-end: #{$app-sidebar-base-gap-end-mobile};
    --#{$prefix}app-sidebar-gap-top: #{$app-sidebar-base-gap-top-mobile};
    --#{$prefix}app-sidebar-gap-bottom: #{$app-sidebar-base-gap-bottom-mobile};
  }

  [data-kt-app-sidebar-stacked="true"] {
    --#{$prefix}app-sidebar-width: calc(
      var(--#{$prefix}app-sidebar-primary-width) +
        var(--#{$prefix}app-sidebar-secondary-width, 0)
    );
  }

  [data-kt-app-sidebar-minimize-mobile="on"] {
    --#{$prefix}app-sidebar-width: #{$app-sidebar-minimize-width-mobile};

    --#{$prefix}app-sidebar-gap-start: #{$app-sidebar-minimize-gap-start-mobile};
    --#{$prefix}app-sidebar-gap-end: #{$app-sidebar-minimize-gap-end-mobile};
    --#{$prefix}app-sidebar-gap-top: #{$app-sidebar-minimize-gap-top-mobile};
    --#{$prefix}app-sidebar-gap-bottom: #{$app-sidebar-minimize-gap-bottom-mobile};
  }

  [data-kt-app-sidebar-collapse-mobile="on"] {
    --#{$prefix}app-sidebar-width: 0px;
  }

  // States
  .app-sidebar {
    [data-kt-app-sidebar-stacked="true"] & {
      align-items: stretch;
    }

    [data-kt-app-sidebar-minimize-mobile="on"] & {
      transition: $app-sidebar-base-transition;

      @include property(margin-left, $app-sidebar-minimize-gap-start-mobile);
      @include property(margin-right, $app-sidebar-minimize-gap-end-mobile);
      @include property(margin-top, $app-sidebar-minimize-gap-top-mobile);
      @include property(margin-bottom, $app-sidebar-minimize-gap-bottom-mobile);
    }

    [data-kt-app-sidebar-hoverable-mobile="true"] & {
      .app-sidebar-wrapper {
        width: var(--#{$prefix}app-sidebar-width-actual);
      }
    }

    [data-kt-app-sidebar-hoverable-mobile="true"][data-kt-app-sidebar-minimize-mobile="on"]
      &:hover:not(.animating) {
      transition: $app-sidebar-base-transition;
      width: var(--#{$prefix}app-sidebar-width-actual);
      box-shadow: var(--#{$prefix}app-sidebar-minimize-hover-box-shadow-mobile);
    }

    [data-kt-app-sidebar-collapse-mobile="on"] & {
      transition: $app-sidebar-base-transition;
      width: var(--#{$prefix}app-sidebar-width-actual);
      margin-left: calc(-1 * var(--#{$prefix}app-sidebar-width-actual));
    }
  }

  // Utilities
  [data-kt-app-sidebar-minimize-mobile="on"] {
    .app-sidebar-minimize-mobile-d-none {
      display: none !important;
    }

    .app-sidebar-minimize-mobile-d-flex {
      display: flex !important;
    }
  }

  [data-kt-app-sidebar-collapse-mobile="on"] {
    .app-sidebar-collapse-mobile-d-none {
      display: none !important;
    }

    .app-sidebar-collapse-mobile-d-flex {
      display: flex !important;
    }
  }
}
//
// sidebar Primary
//

// General mode
.app-sidebar-primary {
  transition: $app-sidebar-primary-base-transition;
  position: relative;
  flex-shrink: 0;
  background-color: var(--#{$prefix}app-sidebar-primary-base-bg-color);
  box-shadow: var(--#{$prefix}app-sidebar-primary-base-box-shadow);
  border-left: var(--#{$prefix}app-sidebar-primary-base-border-start);
  border-right: var(--#{$prefix}app-sidebar-primary-base-border-end);
}

// Utilities
.app-sidebar-primary-collapse-d-flex,
.app-sidebar-primary-minimize-d-flex,
.app-sidebar-primary-collapse-mobile-d-flex,
.app-sidebar-primary-minimize-mobile-d-flex {
  display: none;
}

// Desktop mode
@include media-breakpoint-up(lg) {
  // Base
  .app-sidebar-primary {
    @include property(z-index, $app-sidebar-primary-base-z-index);
    @include property(margin-left, $app-sidebar-primary-base-gap-start);
    @include property(margin-right, $app-sidebar-primary-base-gap-end);
    @include property(margin-top, $app-sidebar-primary-base-gap-top);
    @include property(margin-bottom, $app-sidebar-primary-base-gap-bottom);
  }

  // Vars
  :root {
    --#{$prefix}app-sidebar-primary-width-actual: #{$app-sidebar-primary-base-width};
  }

  [data-kt-app-sidebar-stacked="true"] {
    --#{$prefix}app-sidebar-primary-width: #{$app-sidebar-primary-base-width};

    --#{$prefix}app-sidebar-primary-gap-start: #{$app-sidebar-primary-base-gap-start};
    --#{$prefix}app-sidebar-primary-gap-end: #{$app-sidebar-primary-base-gap-end};
    --#{$prefix}app-sidebar-primary-gap-top: #{$app-sidebar-primary-base-gap-top};
    --#{$prefix}app-sidebar-primary-gap-bottom: #{$app-sidebar-primary-base-gap-bottom};
  }

  [data-kt-app-sidebar-primary-minimize="on"] {
    --#{$prefix}app-sidebar-primary-width: #{$app-sidebar-primary-minimize-width};

    --#{$prefix}app-sidebar-primary-gap-start: #{$app-sidebar-primary-minimize-gap-start};
    --#{$prefix}app-sidebar-primary-gap-end: #{$app-sidebar-primary-minimize-gap-end};
    --#{$prefix}app-sidebar-primary-gap-top: #{$app-sidebar-primary-minimize-gap-top};
    --#{$prefix}app-sidebar-primary-gap-bottom: #{$app-sidebar-primary-minimize-gap-bottom};
  }

  [data-kt-app-sidebar-primary-collapse="on"] {
    --#{$prefix}app-sidebar-primary-width: 0px;
  }

  // States
  .app-sidebar-primary {
    width: var(--#{$prefix}app-sidebar-primary-width);

    [data-kt-app-sidebar-primary-collapse="on"] & {
      transition: $app-sidebar-primary-base-transition;
      width: var(--#{$prefix}app-sidebar-primary-width-actual);
      margin-left: calc(-1 * var(--#{$prefix}app-sidebar-primary-width-actual));
    }

    [data-kt-app-sidebar-primary-minimize="on"] & {
      transition: $app-sidebar-primary-base-transition;

      //background-color: var(--#{$prefix}app-sidebar-primary-minimize-bg-color);
      //box-shadow: var(--#{$prefix}app-sidebar-primary-minimize-box-shadow);
      //border-left: var(--#{$prefix}app-sidebar-primary-minimize-border-start);
      //border-right: var(--#{$prefix}app-sidebar-primary-minimize-border-end);

      @include property(margin-left, $app-sidebar-primary-minimize-gap-start);
      @include property(margin-right, $app-sidebar-primary-minimize-gap-end);
      @include property(margin-top, $app-sidebar-primary-minimize-gap-top);
      @include property(
        margin-bottom,
        $app-sidebar-primary-minimize-gap-bottom
      );
    }

    [data-kt-app-sidebar-primary-hoverable="true"] & {
      .app-sidebar-primary-hoverable {
        width: var(--#{$prefix}app-sidebar-primary-width-actual);
      }
    }

    // Hover minimized
    [data-kt-app-sidebar-primary-hoverable="true"][data-kt-app-sidebar-primary-minimize="on"]
      &:hover:not(.animating) {
      transition: $app-sidebar-primary-base-transition;
      width: var(--#{$prefix}app-sidebar-primary-width-actual);
      box-shadow: var(
        --#{$prefix}app-sidebar-primary-minimize-hover-box-shadow
      );
    }
  }

  // Integration
  .app-sidebar-primary {
    // Header
    [data-kt-app-sidebar-fixed="true"][data-kt-app-header-fixed="true"][data-kt-app-sidebar-primary-below-header="true"]
      & {
      top: var(--#{$prefix}app-header-height);
    }

    // Toolbar
    [data-kt-app-sidebar-fixed="true"][data-kt-app-header-fixed="true"][data-kt-app-toolbar-fixed="true"][data-kt-app-sidebar-primary-below-toolbar="true"]
      & {
      top: calc(
        var(--#{$prefix}app-header-height) +
          var(--#{$prefix}app-toolbar-height, 0)
      );
    }
  }

  // Utilities
  [data-kt-app-sidebar-primary-minimize="on"] {
    .app-sidebar-primary-minimize-d-none {
      display: none !important;
    }

    .app-sidebar-primary-minimize-d-flex {
      display: flex !important;
    }
  }

  [data-kt-app-sidebar-primary-collapse="on"] {
    .app-sidebar-primary-collapse-d-none {
      display: none !important;
    }

    .app-sidebar-primary-collapse-d-flex {
      display: flex !important;
    }
  }
}

// Tablet & mobile modes
@include media-breakpoint-down(lg) {
  // Base
  .app-sidebar-primary {
    @include property(z-index, $app-sidebar-primary-base-z-index-mobile);
    @include property(margin-left, $app-sidebar-primary-base-gap-start-mobile);
    @include property(margin-right, $app-sidebar-primary-base-gap-end-mobile);
    @include property(margin-top, $app-sidebar-primary-base-gap-top-mobile);
    @include property(
      margin-bottom,
      $app-sidebar-primary-base-gap-bottom-mobile
    );
  }

  // Vars
  :root {
    --#{$prefix}app-sidebar-primary-width-actual: #{$app-sidebar-primary-base-width-mobile};
  }

  [data-kt-app-sidebar-stacked="true"] {
    --#{$prefix}app-sidebar-primary-width: #{$app-sidebar-primary-base-width-mobile};

    --#{$prefix}app-sidebar-primary-gap-start: #{$app-sidebar-primary-base-gap-start-mobile};
    --#{$prefix}app-sidebar-primary-gap-end: #{$app-sidebar-primary-base-gap-end-mobile};
    --#{$prefix}app-sidebar-primary-gap-top: #{$app-sidebar-primary-base-gap-top-mobile};
    --#{$prefix}app-sidebar-primary-gap-bottom: #{$app-sidebar-primary-base-gap-bottom-mobile};
  }

  [data-kt-app-sidebar-primary-minimize-mobile="on"] {
    --#{$prefix}app-sidebar-primary-width: #{$app-sidebar-primary-minimize-width-mobile};

    --#{$prefix}app-sidebar-primary-gap-start: #{$app-sidebar-primary-minimize-gap-start-mobile};
    --#{$prefix}app-sidebar-primary-gap-end: #{$app-sidebar-primary-minimize-gap-end-mobile};
    --#{$prefix}app-sidebar-primary-gap-top: #{$app-sidebar-primary-minimize-gap-top-mobile};
    --#{$prefix}app-sidebar-primary-gap-bottom: #{$app-sidebar-primary-minimize-gap-bottom-mobile};
  }

  [data-kt-app-sidebar-primary-collapse-mobile="on"] {
    --#{$prefix}app-sidebar-primary-width: 0px;
  }

  // States
  .app-sidebar-primary {
    width: var(--#{$prefix}app-sidebar-primary-width);

    [data-kt-app-sidebar-primary-collapse-mobile="on"] & {
      transition: $app-sidebar-primary-base-transition;
      width: var(--#{$prefix}app-sidebar-primary-width-actual);
      margin-left: calc(-1 * var(--#{$prefix}app-sidebar-primary-width-actual));
    }

    [data-kt-app-sidebar-primary-minimize-mobile="on"] & {
      transition: $app-sidebar-primary-base-transition;

      //background-color: var(--#{$prefix}app-sidebar-primary-minimize-bg-color-mobile);
      //box-shadow: var(--#{$prefix}app-sidebar-primary-base-box-shadow-mobile);
      //border-left: var(--#{$prefix}app-sidebar-primary-minimize-border-start-mobile);
      //border-left: var(--#{$prefix}app-sidebar-primary-minimize-border-end-mobile);

      @include property(
        margin-left,
        $app-sidebar-primary-minimize-gap-start-mobile
      );
      @include property(
        margin-right,
        $app-sidebar-primary-minimize-gap-end-mobile
      );
      @include property(
        margin-top,
        $app-sidebar-primary-minimize-gap-top-mobile
      );
      @include property(
        margin-bottom,
        $app-sidebar-primary-minimize-gap-bottom-mobile
      );
    }

    [data-kt-app-sidebar-primary-hoverable-mobile="true"] & {
      .app-sidebar-primary-hoverable {
        width: var(--#{$prefix}app-sidebar-primary-width-actual);
      }
    }

    [data-kt-app-sidebar-primary-hoverable-mobile="true"][data-kt-app-sidebar-primary-minimize-mobile="on"]
      &:hover:not(.animating) {
      transition: $app-sidebar-primary-base-transition;
      width: var(--#{$prefix}app-sidebar-primary-width-actual);
      box-shadow: var(
        --#{$prefix}app-sidebar-primary-minimize-hover-box-shadow-mobile
      );
    }
  }

  // Utilities
  [data-kt-app-sidebar-primary-minimize-mobile="on"] {
    .app-sidebar-primary-minimize-mobile-d-none {
      display: none !important;
    }

    .app-sidebar-primary-minimize-mobile-d-flex {
      display: flex !important;
    }
  }

  [data-kt-app-sidebar-primary-collapse-mobile="on"] {
    .app-sidebar-primary-collapse-mobile-d-none {
      display: none !important;
    }

    .app-sidebar-primary-collapse-mobile-d-flex {
      display: flex !important;
    }
  }
}
//
// sidebar Secondary
//

// General mode
.app-sidebar-secondary {
  transition: $app-sidebar-secondary-base-transition;
  position: relative;
  flex-shrink: 0;
  background-color: var(--#{$prefix}app-sidebar-secondary-base-bg-color);
  box-shadow: var(--#{$prefix}app-sidebar-secondary-base-box-shadow);
  border-left: var(--#{$prefix}app-sidebar-secondary-base-border-start);
  border-right: var(--#{$prefix}app-sidebar-secondary-base-border-end);
}

// Utilities
.app-sidebar-secondary-collapse-d-flex,
.app-sidebar-secondary-minimize-d-flex,
.app-sidebar-secondary-collapse-mobile-d-flex,
.app-sidebar-secondary-minimize-mobile-d-flex {
  display: none;
}

// Desktop mode
@include media-breakpoint-up(lg) {
  // Base
  .app-sidebar-secondary {
    @include property(z-index, $app-sidebar-secondary-base-z-index);
    @include property(
      margin-left,
      $app-sidebar-secondary-base-gap-start-mobile
    );
    @include property(margin-right, $app-sidebar-secondary-base-gap-end-mobile);
    @include property(margin-top, $app-sidebar-secondary-base-gap-top-mobile);
    @include property(
      margin-bottom,
      $app-sidebar-secondary-base-gap-bottom-mobile
    );
  }

  // Vars
  [data-kt-app-sidebar-secondary-enabled="true"] {
    --#{$prefix}app-sidebar-secondary-width-actual: calc(
      #{$app-sidebar-base-width} - #{$app-sidebar-primary-base-width} - #{$app-sidebar-primary-base-gap-start} -
        #{$app-sidebar-primary-base-gap-end} - #{$app-sidebar-secondary-base-gap-start} -
        #{$app-sidebar-secondary-base-gap-end}
    );
  }

  [data-kt-app-sidebar-secondary-enabled="true"][data-kt-app-sidebar-stacked="true"] {
    --#{$prefix}app-sidebar-secondary-width: calc(
      #{$app-sidebar-base-width} - #{$app-sidebar-primary-base-width} - #{$app-sidebar-primary-base-gap-start} -
        #{$app-sidebar-primary-base-gap-end} - #{$app-sidebar-secondary-base-gap-start} -
        #{$app-sidebar-secondary-base-gap-end}
    );

    --#{$prefix}app-sidebar-secondary-gap-start: #{$app-sidebar-secondary-base-gap-start};
    --#{$prefix}app-sidebar-secondary-gap-end: #{$app-sidebar-secondary-base-gap-end};
    --#{$prefix}app-sidebar-secondary-gap-top: #{$app-sidebar-secondary-base-gap-top};
    --#{$prefix}app-sidebar-secondary-gap-bottom: #{$app-sidebar-secondary-base-gap-bottom};
  }

  [data-kt-app-sidebar-secondary-enabled="true"][data-kt-app-sidebar-secondary-minimize="on"] {
    --#{$prefix}app-sidebar-secondary-width: #{$app-sidebar-secondary-minimize-width};

    --#{$prefix}app-sidebar-secondary-gap-start: #{$app-sidebar-secondary-minimize-gap-start};
    --#{$prefix}app-sidebar-secondary-gap-end: #{$app-sidebar-secondary-minimize-gap-end};
    --#{$prefix}app-sidebar-secondary-gap-top: #{$app-sidebar-secondary-minimize-gap-top};
    --#{$prefix}app-sidebar-secondary-gap-bottom: #{$app-sidebar-secondary-minimize-gap-bottom};
  }

  [data-kt-app-sidebar-secondary-enabled="true"][data-kt-app-sidebar-secondary-collapse="on"] {
    --#{$prefix}app-sidebar-secondary-width-actual: calc(
      #{$app-sidebar-base-width} - #{$app-sidebar-primary-base-width} - #{$app-sidebar-primary-base-gap-start} -
        #{$app-sidebar-primary-base-gap-end} - #{$app-sidebar-secondary-base-gap-start} -
        #{$app-sidebar-secondary-base-gap-end}
    );

    --#{$prefix}app-sidebar-secondary-width: 0px;
  }

  // States
  .app-sidebar-secondary {
    width: var(--#{$prefix}app-sidebar-secondary-width);

    [data-kt-app-sidebar-secondary-collapse="on"] & {
      transition: $app-sidebar-secondary-base-transition;
      width: var(--#{$prefix}app-sidebar-secondary-width-actual);
      margin-left: calc(
        -1 * var(--#{$prefix}app-sidebar-secondary-width-actual)
      );
    }

    [data-kt-app-sidebar-secondary-minimize="on"] & {
      transition: $app-sidebar-secondary-base-transition;

      //background-color: var(--#{$prefix}app-sidebar-secondary-minimize-bg-color);
      //box-shadow: var(--#{$prefix}app-sidebar-secondary-minimize-box-shadow);
      //border-left: var(--#{$prefix}app-sidebar-secondary-minimize-border-start);
      //border-right: var(--#{$prefix}app-sidebar-secondary-minimize-border-end);

      @include property(
        margin-left,
        $app-sidebar-secondary-minimize-gap-start-mobile
      );
      @include property(
        margin-right,
        $app-sidebar-secondary-minimize-gap-end-mobile
      );
      @include property(
        margin-top,
        $app-sidebar-secondary-minimize-gap-top-mobile
      );
      @include property(
        margin-bottom,
        $app-sidebar-secondary-minimize-gap-bottom-mobile
      );
    }

    [data-kt-app-sidebar-secondary-hoverable="true"] & {
      .app-sidebar-secondary-hoverable {
        width: var(--#{$prefix}app-sidebar-secondary-width-actual);
      }
    }

    [data-kt-app-sidebar-secondary-hoverable="true"][data-kt-app-sidebar-secondary-minimize="on"]
      &:hover:not(.animating) {
      transition: $app-sidebar-secondary-base-transition;
      width: var(--#{$prefix}app-sidebar-secondary-width-actual);
      box-shadow: var(
        --#{$prefix}app-sidebar-secondary-minimize-hover-box-shadow
      );
    }
  }

  // Integration
  .app-sidebar-secondary {
    // Header
    [data-kt-app-sidebar-fixed="true"][data-kt-app-header-fixed="true"][data-kt-app-sidebar-secondary-below-header="true"]
      & {
      top: var(--#{$prefix}app-header-height);
    }

    // Toolbar
    [data-kt-app-sidebar-fixed="true"][data-kt-app-header-fixed="true"][data-kt-app-toolbar-fixed="true"][data-kt-app-sidebar-secondary-below-toolbar="true"]
      & {
      top: calc(
        var(--#{$prefix}app-header-height) +
          var(--#{$prefix}app-toolbar-height, 0)
      );
    }
  }

  // Utilities
  [data-kt-app-sidebar-secondary-enabled="true"][data-kt-app-sidebar-secondary-minimize="on"] {
    .app-sidebar-secondary-minimize-d-none {
      display: none !important;
    }

    .app-sidebar-secondary-minimize-d-flex {
      display: flex !important;
    }
  }

  [data-kt-app-sidebar-secondary-enabled="true"][data-kt-app-sidebar-secondary-collapse="on"] {
    .app-sidebar-secondary-collapse-d-none {
      display: none !important;
    }

    .app-sidebar-secondary-collapse-d-flex {
      display: flex !important;
    }
  }
}

// Tablet & mobile modes
@include media-breakpoint-down(lg) {
  // Base
  .app-sidebar-secondary {
    @include property(z-index, $app-sidebar-secondary-base-z-index-mobile);
    @include property(
      margin-left,
      $app-sidebar-secondary-base-gap-start-mobile
    );
    @include property(margin-right, $app-sidebar-secondary-base-gap-end-mobile);
    @include property(margin-top, $app-sidebar-secondary-base-gap-top-mobile);
    @include property(
      margin-bottom,
      $app-sidebar-secondary-base-gap-bottom-mobile
    );
  }

  // Vars
  [data-kt-app-sidebar-secondary-enabled="true"] {
    --#{$prefix}app-sidebar-secondary-width-actual: calc(
      #{$app-sidebar-base-width-mobile} - #{$app-sidebar-primary-base-width-mobile} -
        #{$app-sidebar-primary-base-gap-start-mobile} - #{$app-sidebar-primary-base-gap-end-mobile} -
        #{$app-sidebar-secondary-base-gap-start-mobile} - #{$app-sidebar-secondary-base-gap-end-mobile}
    );
  }

  [data-kt-app-sidebar-secondary-enabled="true"][data-kt-app-sidebar-stacked="true"] {
    --#{$prefix}app-sidebar-secondary-width: calc(
      #{$app-sidebar-base-width-mobile} - #{$app-sidebar-primary-base-width-mobile} -
        #{$app-sidebar-primary-base-gap-start-mobile} - #{$app-sidebar-primary-base-gap-end-mobile} -
        #{$app-sidebar-secondary-base-gap-start-mobile} - #{$app-sidebar-secondary-base-gap-end-mobile}
    );

    --#{$prefix}app-sidebar-secondary-gap-start: #{$app-sidebar-secondary-base-gap-start-mobile};
    --#{$prefix}app-sidebar-secondary-gap-end: #{$app-sidebar-secondary-base-gap-end-mobile};
    --#{$prefix}app-sidebar-secondary-gap-top: #{$app-sidebar-secondary-base-gap-top-mobile};
    --#{$prefix}app-sidebar-secondary-gap-bottom: #{$app-sidebar-secondary-base-gap-bottom-mobile};
  }

  [data-kt-app-sidebar-secondary-enabled="true"][data-kt-app-sidebar-secondary-minimize-mobile="on"] {
    --#{$prefix}app-sidebar-secondary-width: #{$app-sidebar-secondary-minimize-width-mobile};

    --#{$prefix}app-sidebar-secondary-gap-start: #{$app-sidebar-secondary-minimize-gap-start-mobile};
    --#{$prefix}app-sidebar-secondary-gap-end: #{$app-sidebar-secondary-minimize-gap-end-mobile};
    --#{$prefix}app-sidebar-secondary-gap-top: #{$app-sidebar-secondary-minimize-gap-top-mobile};
    --#{$prefix}app-sidebar-secondary-gap-bottom: #{$app-sidebar-secondary-minimize-gap-bottom-mobile};
  }

  [data-kt-app-sidebar-secondary-enabled="true"][data-kt-app-sidebar-secondary-collapse-mobile="on"] {
    --#{$prefix}app-sidebar-secondary-width-actual: calc(
      #{$app-sidebar-base-width-mobile} - #{$app-sidebar-primary-base-width-mobile} -
        #{$app-sidebar-primary-base-gap-start-mobile} - #{$app-sidebar-primary-base-gap-end-mobile} -
        #{$app-sidebar-secondary-base-gap-start-mobile} - #{$app-sidebar-secondary-base-gap-end-mobile}
    );

    --#{$prefix}app-sidebar-secondary-width: 0px;
  }

  // States
  .app-sidebar-secondary {
    width: var(--#{$prefix}app-sidebar-secondary-width);

    [data-kt-app-sidebar-secondary-collapse-mobile="on"] & {
      transition: $app-sidebar-secondary-base-transition;
      width: var(--#{$prefix}app-sidebar-secondary-width-actual);
      margin-left: calc(
        -1 * var(--#{$prefix}app-sidebar-secondary-width-actual)
      );
    }

    [data-kt-app-sidebar-secondary-minimize-mobile="on"] & {
      transition: $app-sidebar-secondary-base-transition;
      background-color: var(
        --#{$prefix}app-sidebar-secondary-minimize-bg-color-mobile
      );
      box-shadow: var(
        --#{$prefix}app-sidebar-secondary-minimize-box-shadow-mobile
      );
      border-left: var(
        --#{$prefix}app-sidebar-secondary-minimize-border-start-mobile
      );
      border-right: var(
        --#{$prefix}app-sidebar-secondary-minimize-border-end-mobile
      );

      //@include property( margin-left, $app-sidebar-secondary-minimize-gap-start-mobile);
      //@include property( margin-right, $app-sidebar-secondary-minimize-gap-end-mobile);
      //@include property( margin-top, $app-sidebar-secondary-minimize-gap-top-mobile);
      //@include property( margin-bottom, $app-sidebar-secondary-minimize-gap-bottom-mobile);
    }

    [data-kt-app-sidebar-secondary-hoverable-mobile="true"] & {
      .app-sidebar-secondary-hoverable {
        width: var(--#{$prefix}app-sidebar-secondary-width-actual);
      }
    }

    [data-kt-app-sidebar-secondary-hoverable-mobile="true"][data-kt-app-sidebar-secondary-minimize-mobile="on"]
      &:hover:not(.animating) {
      transition: $app-sidebar-secondary-base-transition;
      width: var(--#{$prefix}app-sidebar-secondary-width-actual);
      box-shadow: var(
        --#{$prefix}app-sidebar-secondary-minimize-hover-box-shadow-mobile
      );
    }
  }

  // Utilities
  [data-kt-app-sidebar-secondary-enabled="true"][data-kt-app-sidebar-secondary-minimize-mobile="on"] {
    .app-sidebar-secondary-minimize-mobile-d-none {
      display: none !important;
    }

    .app-sidebar-secondary-minimize-mobile-d-flex {
      display: flex !important;
    }
  }

  [data-kt-app-sidebar-secondary-enabled="true"][data-kt-app-sidebar-secondary-collapse="on"] {
    .app-sidebar-secondary-collapse-mobile-d-none {
      display: none !important;
    }

    .app-sidebar-secondary-collapse-mobile-d-flex {
      display: flex !important;
    }
  }
}
//
// sidebar
//

// General mode
.app-sidebar-panel {
  transition: $app-sidebar-panel-base-transition;
  background-color: var(--#{$prefix}app-sidebar-panel-base-bg-color);
  box-shadow: var(--#{$prefix}app-sidebar-panel-base-box-shadow);
  border-left: var(--#{$prefix}app-sidebar-panel-base-border-start);
  border-right: var(--#{$prefix}app-sidebar-panel-base-border-end);
}

// Utilities
.app-sidebar-panel-minimize-d-flex,
.app-sidebar-panel-sticky-d-flex,
.app-sidebar-panel-collapse-d-flex,
.app-sidebar-panel-minimize-mobile-d-flex,
.app-sidebar-panel-collapse-mobile-d-flex {
  display: none;
}

// Desktop mode
@include media-breakpoint-up(lg) {
  // Base
  .app-sidebar-panel {
    display: flex;
    flex-shrink: 0;
    width: var(--#{$prefix}app-sidebar-panel-width);

    @include property(z-index, $app-sidebar-panel-base-z-index);
    @include property(margin-left, $app-sidebar-panel-base-gap-start);
    @include property(margin-right, $app-sidebar-panel-base-gap-end);
    @include property(margin-top, $app-sidebar-panel-base-gap-top);
    @include property(margin-bottom, $app-sidebar-panel-base-gap-bottom);
  }

  // Vars
  :root {
    --#{$prefix}app-sidebar-panel-width: #{$app-sidebar-panel-base-width};
    --#{$prefix}app-sidebar-panel-width-actual: #{$app-sidebar-panel-base-width};

    --#{$prefix}app-sidebar-panel-gap-start: #{$app-sidebar-panel-base-gap-start};
    --#{$prefix}app-sidebar-panel-gap-end: #{$app-sidebar-panel-base-gap-end};
    --#{$prefix}app-sidebar-panel-gap-top: #{$app-sidebar-panel-base-gap-top};
    --#{$prefix}app-sidebar-panel-gap-bottom: #{$app-sidebar-panel-base-gap-bottom};
  }

  [data-kt-app-sidebar-panel-minimize="on"] {
    --#{$prefix}app-sidebar-panel-width: #{$app-sidebar-panel-minimize-width};

    --#{$prefix}app-sidebar-panel-gap-start: #{$app-sidebar-panel-minimize-gap-start};
    --#{$prefix}app-sidebar-panel-gap-end: #{$app-sidebar-panel-minimize-gap-end};
    --#{$prefix}app-sidebar-panel-gap-top: #{$app-sidebar-panel-minimize-gap-top};
    --#{$prefix}app-sidebar-panel-gap-bottom: #{$app-sidebar-panel-minimize-gap-bottom};
  }

  [data-kt-app-sidebar-panel-sticky="on"] {
    --#{$prefix}app-sidebar-panel-width: #{$app-sidebar-panel-sticky-width};

    --#{$prefix}app-sidebar-panel-gap-start: #{$app-sidebar-panel-sticky-gap-start};
    --#{$prefix}app-sidebar-panel-gap-end: #{$app-sidebar-panel-sticky-gap-end};
    --#{$prefix}app-sidebar-panel-gap-top: #{$app-sidebar-panel-sticky-gap-top};
    --#{$prefix}app-sidebar-panel-gap-bottom: #{$app-sidebar-panel-sticky-gap-bottom};
  }

  [data-kt-app-sidebar-panel-collapse="on"] {
    --#{$prefix}app-sidebar-panel-width-actual: #{$app-sidebar-panel-base-width};
    --#{$prefix}app-sidebar-panel-width: 0px;
  }

  // States
  .app-sidebar-panel {
    [data-kt-app-sidebar-panel-static="true"] & {
      position: relative;
    }

    [data-kt-app-sidebar-panel-offcanvas="true"] & {
      display: none;
    }

    [data-kt-app-sidebar-panel-fixed="true"] & {
      @include property(z-index, $app-sidebar-panel-fixed-z-index);
      position: fixed;
      left: calc(
        var(--#{$prefix}app-sidebar-width) +
          var(--#{$prefix}app-sidebar-gap-start, 0px) +
          var(--#{$prefix}app-sidebar-gap-end, 0px)
      );
      top: 0;
      bottom: 0;
    }

    [data-kt-app-sidebar-panel-sticky="on"] & {
      position: fixed;
      left: calc(
        var(--#{$prefix}app-sidebar-width) +
          var(--#{$prefix}app-sidebar-gap-start, 0px) +
          var(--#{$prefix}app-sidebar-gap-end, 0px)
      );
      top: 0;
      bottom: 0;
      transition: $app-sidebar-panel-base-transition;

      //box-shadow: var(--#{$prefix}app-sidebar-panel-sticky-box-shadow);
      //border-left: var(--#{$prefix}app-sidebar-panel-sticky-border-start);
      //border-right: var(--#{$prefix}app-sidebar-panel-sticky-border-end);

      @include property(z-index, $app-sidebar-panel-sticky-z-index);
      @include property(margin-left, $app-sidebar-panel-sticky-gap-start);
      @include property(margin-right, $app-sidebar-panel-sticky-gap-end);
      @include property(margin-top, $app-sidebar-panel-sticky-gap-top);
      @include property(margin-bottom, $app-sidebar-panel-sticky-gap-bottom);
    }

    [data-kt-app-sidebar-panel-minimize="on"] & {
      transition: $app-sidebar-panel-base-transition;

      //background-color: var(--#{$prefix}app-sidebar-panel-minimize-bg-color);
      //box-shadow: var(--#{$prefix}app-sidebar-panel-minimize-box-shadow);
      //border-left: var(--#{$prefix}app-sidebar-panel-minimize-border-start);
      //border-right: var(--#{$prefix}app-sidebar-panel-minimize-border-end);

      @include property(margin-left, $app-sidebar-panel-minimize-gap-start);
      @include property(margin-right, $app-sidebar-panel-minimize-gap-end);
      @include property(margin-top, $app-sidebar-panel-minimize-gap-top);
      @include property(margin-bottom, $app-sidebar-panel-minimize-gap-bottom);
    }

    [data-kt-app-sidebar-panel-hoverable="true"] & {
      .app-sidebar-panel-hoverable {
        width: var(--#{$prefix}app-sidebar-panel-width-actual);
      }
    }

    [data-kt-app-sidebar-panel-hoverable="true"][data-kt-app-sidebar-panel-minimize="on"]
      &:hover:not(.animating) {
      transition: $app-sidebar-panel-base-transition;
      width: var(--#{$prefix}app-sidebar-panel-width-actual);
      box-shadow: var(--#{$prefix}app-sidebar-panel-minimize-hover-box-shadow);
    }

    [data-kt-app-sidebar-panel-collapse="on"] & {
      transition: $app-sidebar-panel-base-transition;
      width: var(--#{$prefix}app-sidebar-panel-width-actual);
      margin-left: calc(
        -1 * (var(--#{$prefix}app-sidebar-panel-width-actual) +
              var(--#{$prefix}app-sidebar-gap-start, 0px) +
              var(--#{$prefix}app-sidebar-gap-end, 0px))
      );
    }
  }

  // Integration
  .app-sidebar-panel {
    // Header
    [data-kt-app-sidebar-panel-fixed="true"][data-kt-app-header-fixed="true"]:not(
        [data-kt-app-sidebar-panel-push-header="true"]
      )
      & {
      top: var(--#{$prefix}app-header-height);
    }

    // Toolbar
    [data-kt-app-sidebar-panel-fixed="true"][data-kt-app-header-fixed="true"][data-kt-app-toolbar-fixed="true"]:not(
        [data-kt-app-sidebar-panel-push-toolbar="true"]
      )
      & {
      top: calc(
        var(--#{$prefix}app-header-height) +
          var(--#{$prefix}app-toolbar-height, 0)
      );
    }
  }

  // Utilities
  [data-kt-app-sidebar-panel-minimize="on"] {
    .app-sidebar-panel-minimize-d-none {
      display: none !important;
    }

    .app-sidebar-panel-minimize-d-flex {
      display: flex !important;
    }
  }

  [data-kt-app-sidebar-panel-sticky="on"] {
    .app-sidebar-panel-sticky-d-none {
      display: none !important;
    }

    .app-sidebar-panel-sticky-d-flex {
      display: flex !important;
    }
  }

  [data-kt-app-sidebar-panel-collapse="on"] {
    .app-sidebar-panel-collapse-d-none {
      display: none !important;
    }

    .app-sidebar-panel-collapse-d-flex {
      display: flex !important;
    }
  }
}

// Tablet & mobile modes
@include media-breakpoint-down(lg) {
  // Base
  .app-sidebar-panel {
    display: none;
    width: var(--#{$prefix}app-sidebar-panel-width);

    @include property(z-index, $app-sidebar-panel-base-z-index-mobile);
    @include property(margin-left, $app-sidebar-panel-base-gap-start-mobile);
    @include property(margin-right, $app-sidebar-panel-base-gap-end-mobile);
    @include property(margin-top, $app-sidebar-panel-base-gap-top-mobile);
    @include property(margin-bottom, $app-sidebar-panel-base-gap-bottom-mobile);
  }

  // Vars
  :root {
    --#{$prefix}app-sidebar-panel-width: #{$app-sidebar-panel-base-width-mobile};
    --#{$prefix}app-sidebar-panel-width-actual: #{$app-sidebar-panel-base-width-mobile};

    --#{$prefix}app-sidebar-panel-gap-start: #{$app-sidebar-panel-base-gap-start-mobile};
    --#{$prefix}app-sidebar-panel-gap-end: #{$app-sidebar-panel-base-gap-end-mobile};
    --#{$prefix}app-sidebar-panel-gap-top: #{$app-sidebar-panel-base-gap-top-mobile};
    --#{$prefix}app-sidebar-panel-gap-bottom: #{$app-sidebar-panel-base-gap-bottom-mobile};
  }

  [data-kt-app-sidebar-panel-minimize-mobile="on"] {
    --#{$prefix}app-sidebar-panel-width: #{$app-sidebar-panel-minimize-width-mobile};

    --#{$prefix}app-sidebar-panel-gap-start: #{$app-sidebar-panel-minimize-gap-start-mobile};
    --#{$prefix}app-sidebar-panel-gap-end: #{$app-sidebar-panel-minimize-gap-end-mobile};
    --#{$prefix}app-sidebar-panel-gap-top: #{$app-sidebar-panel-minimize-gap-top-mobile};
    --#{$prefix}app-sidebar-panel-gap-bottom: #{$app-sidebar-panel-minimize-gap-bottom-mobile};
  }

  [data-kt-app-sidebar-panel-collapse-mobile="on"] {
    --#{$prefix}app-sidebar-panel-width-actual: #{$app-sidebar-panel-base-width-mobile};
    --#{$prefix}app-sidebar-panel-width: 0px;
  }

  // States
  .app-sidebar-panel {
    [data-kt-app-sidebar-panel-minimize-mobile="on"] & {
      transition: $app-sidebar-panel-base-transition;

      background-color: var(
        --#{$prefix}app-sidebar-panel-minimize-bg-color-mobile
      );
      box-shadow: var(--#{$prefix}app-sidebar-panel-minimize-box-shadow-mobile);
      border-left: var(
        --#{$prefix}app-sidebar-panel-minimize-border-start-mobile
      );
      border-right: var(
        --#{$prefix}app-sidebar-panel-minimize-border-end-mobile
      );

      @include property(
        margin-left,
        $app-sidebar-panel-minimize-gap-start-mobile
      );
      @include property(
        margin-right,
        $app-sidebar-panel-minimize-gap-end-mobile
      );
      @include property(margin-top, $app-sidebar-panel-minimize-gap-top-mobile);
      @include property(
        margin-bottom,
        $app-sidebar-panel-minimize-gap-bottom-mobile
      );
    }

    [data-kt-app-sidebar-panel-hoverable-mobile="true"] & {
      .app-sidebar-panel-hoverable {
        width: var(--#{$prefix}app-sidebar-panel-width-actual);
      }
    }

    [data-kt-app-sidebar-panel-hoverable-mobile="true"][data-kt-app-sidebar-panel-minimize-mobile="on"]
      &:hover:not(.animating) {
      transition: $app-sidebar-panel-base-transition;
      width: var(--#{$prefix}app-sidebar-panel-width-actual);

      box-shadow: var(
        --#{$prefix}app-sidebar-panel-minimize-hover-box-shadow-mobile
      );
    }

    [data-kt-app-sidebar-panel-collapse-mobile="on"] & {
      transition: $app-sidebar-panel-base-transition;
      width: var(--#{$prefix}app-sidebar-panel-width-actual);
      margin-left: calc(-1 * var(--#{$prefix}app-sidebar-panel-width-actual));
    }
  }

  // Utilities
  [data-kt-app-sidebar-panel-minimize-mobile="on"] {
    .app-sidebar-panel-minimize-mobile-d-none {
      display: none !important;
    }

    .app-sidebar-panel-minimize-mobile-d-flex {
      display: flex !important;
    }
  }

  [data-kt-app-sidebar-panel-collapse-mobile="on"] {
    .app-sidebar-panel-collapse-mobile-d-none {
      display: none !important;
    }

    .app-sidebar-panel-collapse-mobile-d-flex {
      display: flex !important;
    }
  }
}
//
// Aside
//

// General mode
.app-aside {
  transition: $app-aside-base-transition;
  background-color: var(--#{$prefix}app-aside-base-bg-color);
  box-shadow: var(--#{$prefix}app-aside-base-box-shadow);
}

// Utilities
.app-aside-minimize-d-flex,
.app-aside-sticky-d-flex,
.app-aside-collapse-d-flex,
.app-aside-minimize-mobile-d-flex,
.app-aside-collapse-mobile-d-flex {
  display: none;
}

// Desktop mode
@include media-breakpoint-up(lg) {
  // Base
  .app-aside {
    display: flex;
    flex-shrink: 0;
    width: var(--#{$prefix}app-aside-width);
    @include property(z-index, $app-aside-base-z-index);
    @include property(margin-left, $app-aside-base-gap-start);
    @include property(margin-right, $app-aside-base-gap-end);
    @include property(margin-top, $app-aside-base-gap-top);
    @include property(margin-bottom, $app-aside-base-gap-bottom);
  }

  // Vars
  :root {
    --#{$prefix}app-aside-width: #{$app-aside-base-width};
    --#{$prefix}app-aside-width-actual: #{$app-aside-base-width};
    --#{$prefix}app-aside-gap-start: #{$app-aside-base-gap-start};
    --#{$prefix}app-aside-gap-end: #{$app-aside-base-gap-end};
    --#{$prefix}app-aside-gap-top: #{$app-aside-base-gap-top};
    --#{$prefix}app-aside-gap-bottom: #{$app-aside-base-gap-bottom};
  }

  [data-kt-app-aside-stacked="true"] {
    --#{$prefix}app-aside-width: calc(
      var(--#{$prefix}app-aside-primary-width) +
        var(--#{$prefix}app-aside-secondary-width)
    );
  }

  [data-kt-app-aside-minimize="on"] {
    --#{$prefix}app-aside-width: #{$app-aside-minimize-width};
    --#{$prefix}app-aside-gap-start: #{$app-aside-minimize-gap-start};
    --#{$prefix}app-aside-gap-end: #{$app-aside-minimize-gap-end};
    --#{$prefix}app-aside-gap-top: #{$app-aside-minimize-gap-top};
    --#{$prefix}app-aside-gap-bottom: #{$app-aside-minimize-gap-bottom};
  }

  [data-kt-app-aside-sticky="on"] {
    --#{$prefix}app-aside-width: #{$app-aside-sticky-width};
    --#{$prefix}app-aside-gap-start: #{$app-aside-sticky-gap-start};
    --#{$prefix}app-aside-gap-end: #{$app-aside-sticky-gap-end};
    --#{$prefix}app-aside-gap-top: #{$app-aside-sticky-gap-top};
    --#{$prefix}app-aside-gap-bottom: #{$app-aside-sticky-gap-bottom};
  }

  [data-kt-app-aside-collapse="on"] {
    --#{$prefix}app-aside-width: 0px;
  }

  // States
  .app-aside {
    [data-kt-app-aside-static="true"] & {
      position: relative;
    }

    [data-kt-app-aside-offcanvas="true"] & {
      display: none;
    }

    [data-kt-app-aside-fixed="true"] & {
      position: fixed;
      @include property(z-index, $app-aside-fixed-z-index);
      @include property(top, $app-aside-fixed-top);
      @include property(bottom, $app-aside-fixed-bottom);
      @include property(right, $app-aside-fixed-right);
    }

    [data-kt-app-aside-stacked="true"] & {
      align-items: stretch;
    }

    [data-kt-app-aside-sticky="on"] & {
      position: fixed;
      transition: $app-aside-base-transition;

      box-shadow: var(--#{$prefix}app-aside-sticky-box-shadow);
      border-left: var(--#{$prefix}aside-sticky-border-start);
      border-right: var(--#{$prefix}app-aside-sticky-border-end);

      @include property(top, $app-aside-sticky-top);
      @include property(bottom, $app-aside-sticky-bottom);
      @include property(left, $app-aside-sticky-left);
      @include property(z-index, $app-aside-sticky-z-index);
      @include property(margin-left, $app-aside-sticky-gap-start);
      @include property(margin-right, $app-aside-sticky-gap-end);
      @include property(margin-top, $app-aside-sticky-gap-top);
      @include property(margin-bottom, $app-aside-sticky-gap-bottom);
    }

    [data-kt-app-aside-minimize="on"] & {
      transition: $app-aside-base-transition;

      //background-color: var(--#{$prefix}app-aside-minimize-bg-color);
      //box-shadow: var(--#{$prefix}app-aside-minimize-box-shadow);
      //border-start: var(--#{$prefix}app-aside-minimize-border-start);
      //border-end: var(--#{$prefix}app-aside-minimize-border-end);

      @include property(margin-left, $app-aside-minimize-gap-start);
      @include property(margin-right, $app-aside-minimize-gap-end);
      @include property(margin-top, $app-aside-minimize-gap-top);
      @include property(margin-bottom, $app-aside-minimize-gap-bottom);
    }

    [data-kt-app-aside-hoverable="true"] & {
      .app-aside-wrapper {
        width: var(--#{$prefix}app-aside-width-actual);
      }
    }

    [data-kt-app-aside-hoverable="true"][data-kt-app-aside-minimize="on"]
      &:hover:not(.animating) {
      transition: $app-aside-base-transition;
      width: var(--#{$prefix}app-aside-width-actual);
      box-shadow: var(--#{$prefix}app-aside-minimize-hover-box-shadow);
    }

    [data-kt-app-aside-collapse="on"] & {
      transition: $app-aside-base-transition;
      width: var(--#{$prefix}app-aside-width-actual);
      margin-right: calc(-1 * var(--#{$prefix}app-aside-width-actual));
    }
  }

  // Utilities
  [data-kt-app-aside-minimize="on"] {
    .app-aside-minimize-d-none {
      display: none !important;
    }

    .app-aside-minimize-d-flex {
      display: flex !important;
    }
  }

  [data-kt-app-aside-sticky="on"] {
    .app-aside-sticky-d-none {
      display: none !important;
    }

    .app-aside-sticky-d-flex {
      display: flex !important;
    }
  }

  [data-kt-app-aside-collapse="on"] {
    .app-aside-collapse-d-none {
      display: none !important;
    }

    .app-aside-collapse-d-flex {
      display: flex !important;
    }
  }

  // Integration
  .app-aside {
    // Header
    [data-kt-app-aside-fixed="true"][data-kt-app-header-fixed="true"]:not(
        [data-kt-app-aside-push-header="true"]
      )
      & {
      top: var(--#{$prefix}app-header-height);
    }

    // Toolbar
    [data-kt-app-aside-fixed="true"][data-kt-app-header-fixed="true"][data-kt-app-toolbar-fixed="true"]:not(
        [data-kt-app-aside-push-toolbar="true"]
      )
      & {
      top: calc(
        var(--#{$prefix}app-header-height) +
          var(--#{$prefix}app-toolbar-height, 0px)
      );
    }
  }
}

// Tablet & mobile modes
@include media-breakpoint-down(lg) {
  // Base
  .app-aside {
    display: none;
    width: var(--#{$prefix}app-aside-width);
    @include property(z-index, $app-aside-base-z-index-mobile);
    @include property(margin-left, $app-aside-base-gap-start-mobile);
    @include property(margin-right, $app-aside-base-gap-end-mobile);
    @include property(margin-top, $app-aside-base-gap-top-mobile);
    @include property(margin-bottom, $app-aside-base-gap-bottom-mobile);
  }

  // Vars
  :root {
    --#{$prefix}app-aside-width: #{$app-aside-base-width-mobile};
    --#{$prefix}app-aside-width-actual: #{$app-aside-base-width-mobile};
    --#{$prefix}app-aside-gap-start: #{$app-aside-base-gap-start-mobile};
    --#{$prefix}app-aside-gap-end: #{$app-aside-base-gap-end-mobile};
    --#{$prefix}app-aside-gap-top: #{$app-aside-base-gap-top-mobile};
    --#{$prefix}app-aside-gap-bottom: #{$app-aside-base-gap-bottom-mobile};
  }

  [data-kt-app-aside-minimize-mobile="on"] {
    --#{$prefix}app-aside-width: #{$app-aside-minimize-width-mobile};
    --#{$prefix}app-aside-gap-start: #{$app-aside-minimize-gap-start-mobile};
    --#{$prefix}app-aside-gap-end: #{$app-aside-minimize-gap-end-mobile};
    --#{$prefix}app-aside-gap-top: #{$app-aside-minimize-gap-top-mobile};
    --#{$prefix}app-aside-gap-bottom: #{$app-aside-minimize-gap-bottom-mobile};
  }

  [data-kt-app-aside-collapse-mobile="on"] {
    --#{$prefix}app-aside-width: 0px;
  }

  // States
  .app-aside {
    [data-kt-app-aside-stacked="true"] & {
      align-items: stretch;
    }

    [data-kt-app-aside-minimize-mobile="on"] & {
      transition: $app-aside-base-transition;
      @include property(margin-left, $app-aside-minimize-gap-start-mobile);
      @include property(margin-right, $app-aside-minimize-gap-end-mobile);
      @include property(margin-top, $app-aside-minimize-gap-top-mobile);
      @include property(margin-bottom, $app-aside-minimize-gap-bottom-mobile);
    }

    [data-kt-app-aside-hoverable-mobile="true"] & {
      .app-aside-wrapper {
        width: var(--#{$prefix}app-aside-width-actual);
      }
    }

    [data-kt-app-aside-hoverable-mobile="true"][data-kt-app-aside-minimize-mobile="on"]
      &:hover:not(.animating) {
      transition: $app-aside-base-transition;
      width: var(--#{$prefix}app-aside-width-actual);
      box-shadow: var(--#{$prefix}app-aside-minimize-hover-box-shadow-mobile);
    }

    [data-kt-app-aside-collapse-mobile="on"] & {
      transition: $app-aside-base-transition;
      width: var(--#{$prefix}app-aside-width-actual);
      margin-right: calc(-1 * var(--#{$prefix}app-aside-width-actual));
    }
  }

  // Utilities
  [data-kt-app-aside-minimize-mobile="on"] {
    .app-aside-minimize-mobile-d-none {
      display: none !important;
    }

    .app-aside-minimize-mobile-d-flex {
      display: flex !important;
    }
  }

  [data-kt-app-aside-collapse-mobile="on"] {
    .app-aside-collapse-mobile-d-none {
      display: none !important;
    }

    .app-aside-collapse-mobile-d-flex {
      display: flex !important;
    }
  }
}
//
// Wrapper
//

// General mode
.app-wrapper {
  display: flex;
}

// Desktop mode
@include media-breakpoint-up(lg) {
  // Integration
  .app-wrapper {
    transition: $app-wrapper-transition;

    // Header
    [data-kt-app-header-sticky="on"] & {
      margin-top: var(--#{$prefix}app-header-height-actual);
    }

    [data-kt-app-header-fixed="true"] & {
      margin-top: var(--#{$prefix}app-header-height);
    }

    // Toolbar
    [data-kt-app-toolbar-sticky="on"] & {
      margin-top: var(--#{$prefix}app-toolbar-height);
    }

    [data-kt-app-header-fixed="true"][data-kt-app-toolbar-sticky="on"] & {
      margin-top: calc(
        var(--#{$prefix}app-header-height-actual) +
          var(--#{$prefix}app-toolbar-height-actual)
      );
    }

    [data-kt-app-header-fixed="true"][data-kt-app-toolbar-fixed="true"] & {
      margin-top: calc(
        var(--#{$prefix}app-header-height) + var(--#{$prefix}app-toolbar-height)
      );
    }

    // Sidebar
    [data-kt-app-sidebar-fixed="true"] & {
      margin-left: calc(
        var(--#{$prefix}app-sidebar-width) +
          var(--#{$prefix}app-sidebar-gap-start, 0px) +
          var(--#{$prefix}app-sidebar-gap-end, 0px)
      );
    }

    // Sidebar Panel
    [data-kt-app-sidebar-panel-fixed="true"] & {
      margin-left: calc(
        var(--#{$prefix}app-sidebar-width) +
          var(--#{$prefix}app-sidebar-gap-start, 0px) +
          var(--#{$prefix}app-sidebar-gap-end, 0px) +
          var(--#{$prefix}app-sidebar-panel-width) +
          var(--#{$prefix}app-sidebar-panel-gap-start, 0px) +
          var(--#{$prefix}app-sidebar-panel-gap-end, 0px)
      );
    }

    // Aside
    [data-kt-app-aside-fixed="true"] & {
      margin-right: calc(
        var(--#{$prefix}app-aside-width) +
          var(--#{$prefix}app-aside-gap-start, 0px) +
          var(--#{$prefix}app-aside-gap-end, 0px)
      );
    }

    // Footer
    [data-kt-app-footer-fixed="true"] & {
      margin-bottom: var(--#{$prefix}app-footer-height);
    }
  }
}

// Tablet & mobile modes
@include media-breakpoint-down(lg) {
  // Integration
  .app-wrapper {
    transition: $app-wrapper-transition;

    // Header
    [data-kt-app-header-sticky="on"] & {
      margin-top: var(--#{$prefix}app-header-height-actual);
    }

    [data-kt-app-header-fixed-mobile="true"] & {
      margin-top: var(--#{$prefix}app-header-height);
    }

    // Toolbar
    [data-kt-app-header-fixed-mobile="true"][data-kt-app-toolbar-sticky="on"]
      & {
      margin-top: calc(
        var(--#{$prefix}app-header-height-actual) +
          var(--#{$prefix}app-toolbar-height-actual)
      );
    }

    // Footer
    [data-kt-app-footer-fixed-mobile="true"] & {
      margin-bottom: var(--#{$prefix}app-footer-height);
    }
  }
}
//
// Main
//

// General mode
.app-main {
  display: flex;
}

// Desktop mode
@include media-breakpoint-up(lg) {
  // Base
  .app-main {
    transition: $app-main-transition;

    @include property(padding-left, $app-main-padding-x);
    @include property(padding-right, $app-main-padding-x);
    @include property(padding-top, $app-main-padding-y);
    @include property(padding-bottom, $app-main-padding-y);

    @include property(margin-left, $app-main-margin-x);
    @include property(margin-right, $app-main-margin-x);
    @include property(margin-top, $app-main-margin-y);
    @include property(margin-bottom, $app-main-margin-y);
  }

  // Integration
  .app-main {
    // Sidebar
    [data-kt-app-sidebar-sticky="true"] & {
      margin-left: calc(
        var(--#{$prefix}app-sidebar-width) +
          var(--#{$prefix}app-sidebar-gap-start, 0px) +
          var(--#{$prefix}app-sidebar-gap-end, 0px)
      );
    }

    // Sidebar Panel
    [data-kt-app-sidebar-panel-sticky="true"] & {
      margin-left: calc(
        var(--#{$prefix}app-sidebar-width) +
          var(--#{$prefix}app-sidebar-gap-start, 0px) +
          var(--#{$prefix}app-sidebar-gap-end, 0px) +
          var(--#{$prefix}app-sidebar-panel-width) +
          var(--#{$prefix}app-sidebar-panel-gap-start, 0px) +
          var(--#{$prefix}app-sidebar-panel-gap-end, 0px)
      );
    }

    // Aside
    [data-kt-app-aside-sticky="true"] & {
      margin-right: calc(
        var(--#{$prefix}app-aside-width) +
          var(--#{$prefix}app-aside-gap-start, 0px) +
          var(--#{$prefix}app-aside-gap-end, 0px)
      );
    }
  }
}

// Tablet & mobile modes
@include media-breakpoint-down(lg) {
  // Base
  .app-main {
    @include property(padding-left, $app-main-padding-x-mobile);
    @include property(padding-right, $app-main-padding-x-mobile);
    @include property(padding-top, $app-main-padding-y-mobile);
    @include property(padding-bottom, $app-main-padding-y-mobile);

    @include property(margin-left, $app-main-margin-x-mobile);
    @include property(margin-right, $app-main-margin-x-mobile);
    @include property(margin-top, $app-main-margin-y-mobile);
    @include property(margin-bottom, $app-main-margin-y-mobile);
  }
}

//
// Content
//

// Desktop mode
@include media-breakpoint-up(lg) {
  .app-content {
    padding-top: $app-content-padding-y;
    padding-bottom: $app-content-padding-y;
    padding-left: $app-content-padding-x;
    padding-right: $app-content-padding-x;
  }
}

// Tablet & mobile modes
@include media-breakpoint-down(lg) {
  .app-content {
    max-width: none;
    padding-top: $app-content-padding-y-mobile;
    padding-bottom: $app-content-padding-y-mobile;
    padding-left: $app-content-padding-x-mobile;
    padding-right: $app-content-padding-x-mobile;
  }
}

//
// Footer
//

// General mode
.app-footer {
  transition: $app-footer-transition;
  display: flex;
  align-items: center;
  background-color: var(--#{$prefix}app-footer-bg-color);
  border-top: var(--#{$prefix}app-footer-border-top);
}

// Desktop mode
@include media-breakpoint-up(lg) {
  // Base
  .app-footer {
    @include property(z-index, $app-footer-z-index);
  }

  // Vars
  :root {
    --#{$prefix}app-footer-height: #{$app-footer-height};
  }

  // States
  .app-footer {
    height: var(--#{$prefix}app-footer-height);

    [data-kt-app-footer-fixed="true"] & {
      @include property(z-index, $app-footer-fixed-z-index);
      box-shadow: var(--#{$prefix}app-footer-box-shadow);
      position: fixed;
      left: 0;
      right: 0;
      bottom: 0;
    }
  }

  // Integration
  .app-footer {
    // Sidebar
    [data-kt-app-sidebar-fixed="true"][data-kt-app-sidebar-push-footer="true"]
      & {
      left: calc(
        var(--#{$prefix}app-sidebar-width) +
          var(--#{$prefix}app-sidebar-gap-start, 0px) +
          var(--#{$prefix}app-sidebar-gap-end, 0px)
      );
    }

    // Sidebar Panel
    [data-kt-app-sidebar-panel-fixed="true"][data-kt-app-sidebar-panel-push-footer="true"]
      & {
      left: calc(
        var(--#{$prefix}app-sidebar-width) +
          var(--#{$prefix}app-sidebar-gap-start, 0px) +
          var(--#{$prefix}app-sidebar-gap-end, 0px) +
          var(--#{$prefix}app-sidebar-panel-width) +
          var(--#{$prefix}app-sidebar-panel-gap-start, 0px) +
          var(--#{$prefix}app-sidebar-panel-gap-end, 0px)
      );
    }

    // Aside
    [data-kt-app-aside-fixed="true"][data-kt-app-aside-push-footer="true"] & {
      right: calc(
        var(--#{$prefix}app-aside-width) +
          var(--#{$prefix}app-aside-gap-start, 0px) +
          var(--#{$prefix}app-aside-gap-end, 0px)
      );
    }
  }
}

// Tablet & mobile modes
@include media-breakpoint-down(lg) {
  // Base
  .app-footer {
    @include property(z-index, $app-footer-z-index-mobile);
  }

  // Vars
  body {
    --#{$prefix}app-footer-height: #{$app-footer-height-mobile};
  }

  // States
  .app-footer {
    height: var(--#{$prefix}app-footer-height);

    [data-kt-app-footer-fixed-mobile="true"] & {
      @include property(z-index, $app-footer-fixed-z-index-mobile);
      box-shadow: var(--#{$prefix}app-footer-box-shadow);
      position: fixed;
      left: 0;
      right: 0;
      bottom: 0;
    }
  }
}
//
// Layout builder
//

// General mode
.app-layout-builder-toggle {
  position: fixed;
  z-index: $app-layout-builder-toggle-z-index;
  bottom: $app-layout-builder-toggle-bottom;
  right: $app-layout-builder-toggle-end;
}

// Tablet & mobile modes
@include media-breakpoint-down(lg) {
  .app-layout-builder-toggle {
    bottom: $app-layout-builder-toggle-bottom-mobile;
    right: $app-layout-builder-toggle-end-mobile;
  }
}

//
// Root
//

// Light mode
@include color-mode(light) {
  // Header light
  --#{$prefix}app-header-light-separator-color: #{$app-header-light-separator-color};

  // Sidebar base
  --#{$prefix}app-sidebar-base-toggle-btn-box-shadow: #{$app-sidebar-base-toggle-btn-box-shadow};
  --#{$prefix}app-sidebar-base-toggle-btn-bg-color: #{$app-sidebar-base-toggle-btn-bg-color};
  --#{$prefix}app-sidebar-base-toggle-btn-border-color: #{$app-sidebar-base-toggle-btn-border-color};
  --#{$prefix}app-sidebar-base-border-color: #{$app-sidebar-base-border-color};

  // Sidebar light
  --#{$prefix}app-sidebar-light-bg-color: #{$app-sidebar-light-bg-color};
  --#{$prefix}app-sidebar-light-box-shadow: #{$app-sidebar-light-box-shadow};
  --#{$prefix}app-sidebar-light-separator-color: #{$app-sidebar-light-separator-color};
  --#{$prefix}app-sidebar-light-scrollbar-color-hover: #{$app-sidebar-light-scrollbar-color-hover};
  --#{$prefix}app-sidebar-light-menu-heading-color: #{$app-sidebar-light-menu-heading-color};
  --#{$prefix}app-sidebar-light-menu-link-bg-color-active: #{$app-sidebar-light-menu-link-bg-color-active};
  --#{$prefix}app-sidebar-light-header-menu-link-bg-color-active: #{$app-sidebar-light-header-menu-link-bg-color-active};
  --#{$prefix}app-sidebar-light-menu-link-color: #{$app-sidebar-light-menu-link-color};
  --#{$prefix}app-sidebar-light-menu-link-icon-color: #{$app-sidebar-light-menu-link-icon-color};
}

// Dark mode
@include color-mode(dark) {
  // Header light
  --#{$prefix}app-header-light-separator-color: #{$app-header-light-separator-color-dark};

  // Sidebar base
  --#{$prefix}app-sidebar-base-toggle-btn-box-shadow: #{$app-sidebar-base-toggle-btn-box-shadow-dark};
  --#{$prefix}app-sidebar-base-toggle-btn-bg-color: #{$app-sidebar-base-toggle-btn-bg-color-dark};
  --#{$prefix}app-sidebar-base-toggle-btn-border-color: #{$app-sidebar-base-toggle-btn-border-color-dark};
  --#{$prefix}app-sidebar-base-border-color: #{$app-sidebar-base-border-color-dark};

  // Sidebar light
  --#{$prefix}app-sidebar-light-bg-color: #{$app-sidebar-light-bg-color-dark};
  --#{$prefix}app-sidebar-light-box-shadow: #{$app-sidebar-light-box-shadow-dark};
  --#{$prefix}app-sidebar-light-separator-color: #{$app-sidebar-light-separator-color-dark};
  --#{$prefix}app-sidebar-light-scrollbar-color-hover: #{$app-sidebar-light-scrollbar-color-hover-dark};
  --#{$prefix}app-sidebar-light-menu-heading-color: #{$app-sidebar-light-menu-heading-color-dark};
  --#{$prefix}app-sidebar-light-menu-link-bg-color-active: #{$app-sidebar-light-menu-link-bg-color-active-dark};
  --#{$prefix}app-sidebar-light-header-menu-link-bg-color-active: #{$app-sidebar-light-header-menu-link-bg-color-active-dark};
  --#{$prefix}app-sidebar-light-menu-link-color: #{$app-sidebar-light-menu-link-color-dark};
  --#{$prefix}app-sidebar-light-menu-link-icon-color: #{$app-sidebar-light-menu-link-icon-color-dark};
}
//
// Sidebar
//

// Desktop mode
@include media-breakpoint-up(lg) {
  .app-sidebar-toggle {
    box-shadow: var(
      --#{$prefix}app-sidebar-base-toggle-btn-box-shadow
    ) !important;
    background-color: var(
      --#{$prefix}app-sidebar-base-toggle-btn-bg-color
    ) !important;
    border: 1px solid var(--#{$prefix}app-sidebar-base-border-color) !important;

    .active i {
      transform: rotateZ(0deg) !important;
    }
  }

  [dir="rtl"] {
    .app-sidebar-toggle {
      i {
        transform: rotateZ(180deg);
      }

      &.active i {
        transform: rotateZ(0deg) !important;
      }
    }
  }

  .app-sidebar-logo {
    height: calc(var(--#{$prefix}app-header-height) + 1px);
    display: flex;
    align-items: center;
    justify-content: space-between;
    position: relative;
    flex-shrink: 0;
  }

  .app-sidebar-menu {
    .menu {
      // Root
      > .menu-item {
        margin-left: 0.115rem;

        > .menu-link {
          > .menu-title {
            font-weight: $font-weight-bold;
            font-size: 1.1rem;
          }
        }
      }
    }
  }
}

// Tablet & mobile modes
@include media-breakpoint-down(lg) {
  .app-sidebar-logo {
    display: none;
  }
}
//
// Sidebar Minimize
//

.app-sidebar-logo-minimize {
  display: none;
}

// Sidebar footer
.app-sidebar-footer {
  .btn-custom {
    .btn-icon {
      display: none;
    }
  }
}

// Desktop sidebar minimize mode
@include app-layout-minimize(app-sidebar) {
  .app-sidebar-logo {
    .app-sidebar-logo-default {
      display: none;
    }

    .app-sidebar-logo-minimize {
      display: inline-block;
    }
  }

  .app-sidebar-wrapper {
    width: var(--#{$prefix}app-sidebar-width-actual);
  }

  .app-sidebar-menu {
    .menu-content,
    .menu-title {
      opacity: 0;
      @include app-layout-transition(opacity);
    }

    .menu-item.show > .menu-sub {
      height: 0;
      overflow: hidden;
      @include app-layout-transition(height);
    }
  }

  .app-sidebar-footer {
    .btn-custom {
      padding-left: 0 !important;
      padding-right: 0 !important;

      .btn-label {
        width: 0;
        display: none;
      }

      .btn-icon {
        width: auto;
        display: block;
      }
    }
  }
}

//
// Dark Sidebar(used by Dark Sidebar layout only)
//

[data-kt-app-layout="dark-sidebar"] {
  .app-sidebar {
    background-color: $app-sidebar-dark-bg-color;
    border-right: 0;

    .scroll-y,
    .hover-scroll-overlay-y {
      @include scrollbar-color(
        transparent,
        $app-sidebar-dark-scrollbar-color-hover
      );
    }

    .app-sidebar-logo {
      border-bottom: 1px dashed $app-sidebar-dark-separator-color;
    }

    .btn-custom {
      @include button-custom-variant(
        $color: #b5b5c3,
        $icon-color: #b5b5c3,
        $border-color: null,
        $bg-color: rgba(63, 66, 84, 0.35),
        $color-active: #b5b5c3,
        $icon-color-active: null,
        $border-color-active: null,
        $bg-color-active: rgba(63, 66, 84, 0.35)
      );
    }

    .menu {
      > .menu-item {
        .menu-heading {
          color: $app-sidebar-dark-menu-heading-color !important;
        }

        @include menu-link-default-state(
          $title-color: $gray-300,
          $icon-color: #7f8194,
          $bullet-color: #7f8194,
          $arrow-color: var(--#{$prefix}gray-700),
          $bg-color: null
        );

        @include menu-link-hover-state(
          $title-color: var(--#{$prefix}primary-inverse),
          $icon-color: var(--#{$prefix}primary-inverse),
          $bullet-color: var(--#{$prefix}primary-inverse),
          $arrow-color: var(--#{$prefix}primary-inverse),
          $bg-color: null
        );

        @include menu-link-here-state(
          $title-color: $gray-300,
          $icon-color: var(--#{$prefix}primary-inverse),
          $bullet-color: var(--#{$prefix}primary-inverse),
          $arrow-color: var(--#{$prefix}gray-700),
          $bg-color: null
        );

        @include menu-link-show-state(
          $title-color: $gray-300,
          $icon-color: var(--#{$prefix}primary-inverse),
          $bullet-color: var(--#{$prefix}primary-inverse),
          $arrow-color: var(--#{$prefix}gray-700),
          $bg-color: null
        );

        @include menu-link-active-state(
          $title-color: var(--#{$prefix}primary-inverse),
          $icon-color: var(--#{$prefix}primary-inverse),
          $bullet-color: var(--#{$prefix}primary-inverse),
          $arrow-color: var(--#{$prefix}primary-inverse),
          $bg-color: $app-sidebar-dark-menu-link-bg-color-active
        );

        .menu-sub {
          .menu-item {
            .menu-link {
              .menu-title {
                color: $app-sidebar-dark-menu-sub-link-color;
              }

              &.active {
                .menu-title {
                  color: var(--#{$prefix}white);
                }

                .menu-bullet {
                  .bullet {
                    background-color: var(--#{$prefix}white);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

// Desktop mode
@include media-breakpoint-up(lg) {
  [data-kt-app-layout="dark-sidebar"] {
    .app-sidebar {
      .menu-sub-lg-dropdown {
        background-color: $app-sidebar-dark-bg-color;
      }
    }
  }
}

// Dark mode
@include color-mode(dark) {
  [data-kt-app-layout="dark-sidebar"] {
    .app-sidebar {
      border-right: 1px dashed $app-sidebar-dark-separator-color;
    }
  }
}
